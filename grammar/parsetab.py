
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftIGIGDIFleftMENORMENORIGMAYORIGMAYORleftMASMENOSleftDIVIDIDOMODULOPORrightNOTUMENOSleftPARIZQPARDERCORIZQCORDERAND BOOLEAN BOOLEANO BREAK CADENA CARACTER CASE CHAR COMA CONSOLE CONST CONTINUE CORDER CORIZQ DECIMAL DEFAULT DIF DIVIDIDO DOSPTS ELSE ENTERO FLOAT FOR FUNCTION ID IF IG IGIG INCREMENTO INDEXOF INTERFACE JOIN KEYS LENGTH LLAVEDER LLAVEIZQ LOG MAS MAYOR MAYORIG MENOR MENORIG MENOS MODULO NOT NUMBER OBJECT OR PARDER PARIZQ PARSEFLOAT PARSEINT POP POR PUNTO PUSH PYC RETURN STRING SWITCH TERN TOLOWERCASE TOSTRING TOUPPERCASE TYPEOF VALUES VAR WHILEs : blockblock : block instruccion\n             | instruccion instruccion : print\n                   | ifinstruction\n                   | switchinstruction\n                   | whileinstruction\n                   | forinstruction\n                   | declaration\n                   | arraydeclaration\n                   | assignment\n                   | breakstmt\n                   | continuestmt\n                   | functionstmt\n                   | call\n                   | returnstmt\n                   | interfacecreation\n                   | interdeclaration\n                   | listArray PYC\n                   | typeof PYC\n                   | parseint PYC\n                   | parsefloat PYCprint : CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYCifinstruction : IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER\n                     | IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list\n                     | IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else\n                     | IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list elseelse_if_list : else_if_list else_if\n                    | else_ifelse_if : ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDERelse : ELSE LLAVEIZQ block LLAVEDERswitchinstruction : SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER\n                         | SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER\n                         | SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDERcaseList : caseList case\n                | casecase : CASE expression DOSPTS blockdefault : DEFAULT DOSPTS blockwhileinstruction : WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDERforinstruction : FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDERdeclaration : var_const ID DOSPTS type IG expression PYCarraydeclaration : var_const ID DOSPTS type dimension IG expression PYCassignment : ID indexes IG expression PYCdimension : dimension CORIZQ CORDER\n                 | CORIZQ CORDERinterdeclaration : var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYCinterfaceContent : interfaceContent COMA ID DOSPTS expression\n                        | ID DOSPTS expressionvar_const : VAR\n                 | CONSTassignment : listArray IG expression PYCassignment : ID IG expression PYCreturnstmt : RETURN expression PYC\n                  | RETURN PYCcall : ID PARIZQ expressionList PARDER PYC\n            | ID PARIZQ PARDER PYCfunctionstmt : FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDERfuncparams : PARIZQ paramsList PARDER\n                  | PARIZQ PARDERinterfacecreation : INTERFACE ID LLAVEIZQ attributeList LLAVEDERattributeList : attributeList ID DOSPTS type PYC\n                     | ID DOSPTS type PYCparamsList : paramsList COMA parametro\n                  | parametroparametro : ID DOSPTS type\n                 | ID DOSPTS type CORIZQ CORDERfunctype : DOSPTS type\n                | breakstmt : BREAK PYCcontinuestmt : CONTINUE PYCtype : NUMBER\n            | FLOAT\n            | STRING\n            | CHAR\n            | BOOLEAN\n            | IDexpressionList : expressionList COMA expression\n                      | expression expression : OBJECT PUNTO KEYS   PARIZQ expression PARDER\n                  | OBJECT PUNTO VALUES PARIZQ expression PARDERexpression : expression MAS expressionexpression : expression MENOS expressionexpression : expression POR expressionexpression : expression DIVIDIDO expressionexpression : expression MODULO expressionexpression : expression MAYOR expressionexpression : expression MENOR expressionexpression : expression MAYORIG expressionexpression : expression MENORIG expressionexpression : expression IGIG expressionexpression : expression DIF expressionexpression : expression AND expressionexpression : expression OR expressionexpression : NOT expressionexpression : MENOS expression %prec UMENOSexpression : expression INCREMENTOexpression : PARIZQ expression PARDERexpression : expression TERN expression DOSPTS expressionexpression : listArrayvalor : ENTERO\n             | DECIMAL\n             | CADENA\n             | CARACTER\n             | BOOLEANOvalor : IDexpression : CORIZQ expressionList CORDERexpression : ID PARIZQ expressionList PARDER\n                  | ID PARIZQ PARDERlistArray : listArray PUNTO TOSTRING    PARIZQ PARDER\n                 | listArray PUNTO TOLOWERCASE PARIZQ PARDER\n                 | listArray PUNTO TOUPPERCASE PARIZQ PARDER\n                 | listArray PUNTO POP         PARIZQ PARDER\n                 | listArray PUNTO JOIN        PARIZQ PARDER\n                 | listArray PUNTO PUSH    expression\n                 | listArray PUNTO INDEXOF expression\n                 | listArray PUNTO LENGTH\n                 | listArray PUNTO ID\n                 | listArray indexes\n                 | valorindexes : indexes CORIZQ expression CORDER\n               | CORIZQ expression CORDERexpression : typeof\n                  | parseint\n                  | parsefloattypeof : TYPEOF expressionparseint : PARSEINT expressionparsefloat : PARSEFLOAT expression'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,23,23,-43,-55,23,-60,23,23,23,-23,-24,-32,-33,23,-39,-41,-57,-25,-26,-29,-34,23,23,23,-42,-27,-28,23,23,23,-46,23,-40,-31,23,23,-30,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,267,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,24,24,-43,-55,24,-60,24,24,24,-23,-24,-32,-33,24,-39,-41,-57,-25,-26,-29,281,-34,24,24,24,-42,-27,-28,24,24,24,-46,24,-40,-31,24,24,-30,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,25,25,-43,-55,25,-60,25,25,25,-23,-24,-32,-33,25,-39,-41,-57,-25,-26,-29,-34,25,25,25,-42,-27,-28,25,25,25,-46,25,-40,-31,25,25,-30,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,26,26,-43,-55,26,-60,26,26,26,-23,-24,-32,-33,26,-39,-41,-57,-25,-26,-29,-34,26,26,26,-42,-27,-28,26,26,26,-46,26,-40,-31,26,26,-30,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,27,27,-43,-55,27,-60,27,27,27,-23,-24,-32,-33,27,-39,-41,-57,-25,-26,-29,-34,27,27,27,-42,-27,-28,27,27,27,-46,27,-40,-31,27,27,-30,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,28,32,33,34,36,37,38,39,40,46,47,48,49,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,100,101,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,131,132,142,156,158,159,161,187,195,197,198,199,201,204,205,207,211,212,213,214,215,217,219,221,226,227,230,232,235,242,243,244,245,248,249,251,255,258,262,264,265,266,268,269,270,271,272,274,275,277,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,60,66,75,79,75,75,75,-49,-50,-2,-19,75,92,75,-20,-21,-22,75,75,75,75,75,-69,-70,-54,75,75,75,75,75,75,75,75,147,148,75,165,-53,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,186,-51,75,-52,75,-56,209,218,29,29,75,209,75,-43,-55,29,165,209,75,75,75,209,-60,29,75,29,253,75,29,209,-23,-24,-32,-33,29,-39,-41,-57,-62,-25,-26,-29,-34,29,29,29,75,286,-42,-61,-27,-28,29,29,29,-46,29,75,-40,75,-31,29,29,-30,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,30,30,-43,-55,30,-60,30,30,30,-23,-24,-32,-33,30,-39,-41,-57,-25,-26,-29,-34,30,30,30,-42,-27,-28,30,30,30,-46,30,-40,-31,30,30,-30,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,31,31,-43,-55,31,-60,31,31,31,-23,-24,-32,-33,31,-39,-41,-57,-25,-26,-29,-34,31,31,31,-42,-27,-28,31,31,31,-46,31,-40,-31,31,31,-30,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,32,32,-43,-55,32,-60,32,32,32,-23,-24,-32,-33,32,-39,-41,-57,-25,-26,-29,-34,32,32,32,-42,-27,-28,32,32,32,-46,32,-40,-31,32,32,-30,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,33,33,-43,-55,33,-60,33,33,33,-23,-24,-32,-33,33,-39,-41,-57,-25,-26,-29,-34,33,33,33,-42,-27,-28,33,33,33,-46,33,-40,-31,33,33,-30,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,34,34,-43,-55,34,-60,34,34,34,-23,-24,-32,-33,34,-39,-41,-57,-25,-26,-29,-34,34,34,34,-42,-27,-28,34,34,34,-46,34,-40,-31,34,34,-30,]),'TYPEOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,36,37,38,46,47,48,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,132,142,156,158,159,195,197,198,201,204,205,207,213,214,215,219,221,226,227,232,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,272,275,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[36,36,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,36,36,36,36,-2,-19,36,36,-20,-21,-22,36,36,36,36,36,-69,-70,-54,36,36,36,36,36,36,36,36,36,-53,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-51,36,-52,36,-56,36,36,36,36,-43,-55,36,36,36,36,-60,36,36,36,36,36,-23,-24,-32,-33,36,-39,-41,-57,-25,-26,-29,-34,36,36,36,36,-42,-27,-28,36,36,36,-46,36,36,-40,36,-31,36,36,-30,]),'PARSEINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,36,37,38,46,47,48,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,132,142,156,158,159,195,197,198,201,204,205,207,213,214,215,219,221,226,227,232,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,272,275,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[37,37,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,37,37,37,37,-2,-19,37,37,-20,-21,-22,37,37,37,37,37,-69,-70,-54,37,37,37,37,37,37,37,37,37,-53,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-51,37,-52,37,-56,37,37,37,37,-43,-55,37,37,37,37,-60,37,37,37,37,37,-23,-24,-32,-33,37,-39,-41,-57,-25,-26,-29,-34,37,37,37,37,-42,-27,-28,37,37,37,-46,37,37,-40,37,-31,37,37,-30,]),'PARSEFLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,36,37,38,46,47,48,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,132,142,156,158,159,195,197,198,201,204,205,207,213,214,215,219,221,226,227,232,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,272,275,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[38,38,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,38,38,38,38,-2,-19,38,38,-20,-21,-22,38,38,38,38,38,-69,-70,-54,38,38,38,38,38,38,38,38,38,-53,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-51,38,-52,38,-56,38,38,38,38,-43,-55,38,38,38,38,-60,38,38,38,38,38,-23,-24,-32,-33,38,-39,-41,-57,-25,-26,-29,-34,38,38,38,38,-42,-27,-28,38,38,38,-46,38,38,-40,38,-31,38,38,-30,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,59,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[39,39,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,39,-69,-70,-54,-53,-51,-52,-56,39,39,-43,-55,39,-60,39,39,39,-23,-24,-32,-33,39,-39,-41,-57,-25,-26,-29,-34,39,39,39,-42,-27,-28,39,39,39,-46,39,-40,-31,39,39,-30,]),'CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,59,64,65,68,109,132,156,159,195,197,204,205,207,219,221,227,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,275,278,279,280,282,283,285,287,289,291,295,296,297,],[40,40,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,40,-69,-70,-54,-53,-51,-52,-56,40,40,-43,-55,40,-60,40,40,40,-23,-24,-32,-33,40,-39,-41,-57,-25,-26,-29,-34,40,40,40,-42,-27,-28,40,40,40,-46,40,-40,-31,40,40,-30,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,36,37,38,46,47,48,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,132,142,156,158,159,195,197,198,201,204,205,207,213,214,215,219,221,226,227,232,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,272,275,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[41,41,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,41,41,41,41,-2,-19,41,41,-20,-21,-22,41,41,41,41,41,-69,-70,-54,41,41,41,41,41,41,41,41,41,-53,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-51,41,-52,41,-56,41,41,41,41,-43,-55,41,41,41,41,-60,41,41,41,41,41,-23,-24,-32,-33,41,-39,-41,-57,-25,-26,-29,-34,41,41,41,41,-42,-27,-28,41,41,41,-46,41,41,-40,41,-31,41,41,-30,]),'DECIMAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,36,37,38,46,47,48,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,132,142,156,158,159,195,197,198,201,204,205,207,213,214,215,219,221,226,227,232,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,272,275,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[42,42,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,42,42,42,42,-2,-19,42,42,-20,-21,-22,42,42,42,42,42,-69,-70,-54,42,42,42,42,42,42,42,42,42,-53,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-51,42,-52,42,-56,42,42,42,42,-43,-55,42,42,42,42,-60,42,42,42,42,42,-23,-24,-32,-33,42,-39,-41,-57,-25,-26,-29,-34,42,42,42,42,-42,-27,-28,42,42,42,-46,42,42,-40,42,-31,42,42,-30,]),'CADENA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,36,37,38,46,47,48,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,132,142,156,158,159,195,197,198,201,204,205,207,213,214,215,219,221,226,227,232,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,272,275,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[43,43,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,43,43,43,43,-2,-19,43,43,-20,-21,-22,43,43,43,43,43,-69,-70,-54,43,43,43,43,43,43,43,43,43,-53,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-51,43,-52,43,-56,43,43,43,43,-43,-55,43,43,43,43,-60,43,43,43,43,43,-23,-24,-32,-33,43,-39,-41,-57,-25,-26,-29,-34,43,43,43,43,-42,-27,-28,43,43,43,-46,43,43,-40,43,-31,43,43,-30,]),'CARACTER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,36,37,38,46,47,48,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,132,142,156,158,159,195,197,198,201,204,205,207,213,214,215,219,221,226,227,232,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,272,275,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[44,44,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,44,44,44,44,-2,-19,44,44,-20,-21,-22,44,44,44,44,44,-69,-70,-54,44,44,44,44,44,44,44,44,44,-53,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-51,44,-52,44,-56,44,44,44,44,-43,-55,44,44,44,44,-60,44,44,44,44,44,-23,-24,-32,-33,44,-39,-41,-57,-25,-26,-29,-34,44,44,44,44,-42,-27,-28,44,44,44,-46,44,44,-40,44,-31,44,44,-30,]),'BOOLEANO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,36,37,38,46,47,48,51,52,53,54,56,57,58,62,63,64,65,68,70,71,72,74,89,90,93,99,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,132,142,156,158,159,195,197,198,201,204,205,207,213,214,215,219,221,226,227,232,235,243,244,245,248,249,251,255,258,264,265,266,268,269,270,271,272,275,278,279,280,282,283,285,287,288,289,290,291,295,296,297,],[45,45,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,45,45,45,45,-2,-19,45,45,-20,-21,-22,45,45,45,45,45,-69,-70,-54,45,45,45,45,45,45,45,45,45,-53,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-51,45,-52,45,-56,45,45,45,45,-43,-55,45,45,45,45,-60,45,45,45,45,45,-23,-24,-32,-33,45,-39,-41,-57,-25,-26,-29,-34,45,45,45,45,-42,-27,-28,45,45,45,-46,45,45,-40,45,-31,45,45,-30,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,204,205,219,243,244,245,248,251,255,258,264,265,266,268,275,278,279,285,289,291,297,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,-43,-55,-60,-23,-24,-32,-33,-39,-41,-57,-25,-26,-29,-34,-42,-27,-28,-46,-40,-31,-30,]),'LLAVEDER':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,35,41,42,43,44,45,46,47,50,52,53,54,64,65,68,73,75,76,77,78,80,81,82,91,92,109,123,127,128,132,138,139,141,156,159,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,185,187,188,189,190,191,192,193,204,205,216,219,221,222,223,224,227,235,238,243,244,245,246,247,248,251,254,255,258,260,261,262,264,265,266,268,269,275,277,278,279,282,283,284,285,287,289,291,293,296,297,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-119,-100,-101,-102,-103,-104,-2,-19,-118,-20,-21,-22,-69,-70,-54,-99,-105,-122,-123,-124,-125,-126,-127,-116,-117,-53,-96,-95,-94,-51,-114,-115,-121,-52,-56,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-97,-106,-108,219,-109,-110,-111,-112,-113,-120,-43,-55,-107,-60,244,245,248,-36,251,258,-98,-23,-24,-32,268,-35,-33,-39,273,-41,-57,-79,-80,-62,-25,-26,-29,-34,-38,-42,-61,-27,-28,-37,289,-48,-46,291,-40,-31,-47,297,-30,]),'DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,196,204,205,219,222,224,243,244,245,247,248,251,255,258,264,265,266,268,275,278,279,282,285,289,291,297,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,225,-43,-55,-60,225,-36,-23,-24,-32,-35,-33,-39,-41,-57,-25,-26,-29,-34,-42,-27,-28,-37,-46,-40,-31,-30,]),'CASE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,46,47,52,53,54,64,65,68,109,132,156,159,196,204,205,219,222,224,243,244,245,247,248,251,255,258,264,265,266,268,275,278,279,282,285,289,291,297,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,-19,-20,-21,-22,-69,-70,-54,-53,-51,-52,-56,226,-43,-55,-60,226,-36,-23,-24,-32,-35,-33,-39,-41,-57,-25,-26,-29,-34,-42,-27,-28,-37,-46,-40,-31,-30,]),'PYC':([19,20,21,22,29,30,31,33,35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,103,105,123,127,128,138,139,141,146,150,151,152,153,154,155,157,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,185,188,189,190,191,192,193,209,216,220,231,238,241,256,260,261,263,273,],[47,52,53,54,-105,64,65,68,-119,-100,-101,-102,-103,-104,-118,109,-99,-105,-122,-123,-124,-125,-126,-127,132,-116,-117,156,159,-96,-95,-94,-114,-115,-121,198,-71,-72,-73,-74,-75,204,205,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-97,-106,-108,-109,-110,-111,-112,-113,-120,-76,-107,243,255,-98,262,275,-79,-80,277,285,]),'IG':([19,29,35,41,42,43,44,45,50,61,73,75,76,77,78,80,81,82,91,92,123,127,128,138,139,141,148,149,150,151,152,153,154,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,185,188,189,190,191,192,193,202,209,216,229,234,238,257,260,261,],[48,62,-119,-100,-101,-102,-103,-104,-118,102,-99,-105,-122,-123,-124,-125,-126,-127,-116,-117,-96,-95,-94,-114,-115,-121,200,201,-71,-72,-73,-74,-75,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-97,-106,-108,-109,-110,-111,-112,-113,-120,232,-76,-107,201,-45,-98,-44,-79,-80,]),'PUNTO':([19,23,29,35,41,42,43,44,45,50,69,73,75,76,77,78,80,81,82,91,92,123,127,128,138,139,141,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,185,188,189,190,191,192,193,216,238,260,261,],[49,55,-105,-119,-100,-101,-102,-103,-104,-118,125,49,-105,-122,-123,-124,-125,-126,-127,-116,-117,-96,-95,-94,-114,-115,-121,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-97,-106,-108,-109,-110,-111,-112,-113,-120,-107,-98,-79,-80,]),'CORIZQ':([19,29,33,35,36,37,38,41,42,43,44,45,48,50,51,56,57,58,61,62,63,70,71,72,73,74,75,76,77,78,80,81,82,89,90,91,92,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,127,128,130,138,139,141,142,148,149,150,151,152,153,154,158,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,185,188,189,190,191,192,193,198,201,202,209,213,214,215,216,226,232,234,237,238,255,257,260,261,272,288,290,],[51,51,74,-119,74,74,74,-100,-101,-102,-103,-104,74,93,74,74,74,74,93,74,74,74,74,74,51,74,-105,-122,-123,-124,-125,-126,-127,74,74,-116,-117,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-96,74,-95,-94,74,-114,-115,-121,74,-76,203,-71,-72,-73,-74,-75,74,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-97,-106,-108,-109,-110,-111,-112,-113,-120,74,74,233,-76,74,74,74,-107,74,74,-45,259,-98,-41,-44,-79,-80,74,74,74,]),'PARIZQ':([24,25,26,27,29,33,36,37,38,48,51,56,57,58,62,63,66,70,71,72,74,75,84,85,86,87,88,89,90,93,95,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,180,181,198,201,213,214,215,226,232,255,272,281,288,290,],[56,57,58,59,63,70,70,70,70,70,70,70,70,70,70,70,108,70,70,70,70,130,133,134,135,136,137,70,70,70,142,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,214,215,70,70,70,70,70,70,70,-41,70,288,70,70,]),'OBJECT':([33,36,37,38,48,51,56,57,58,62,63,70,71,72,74,89,90,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,198,201,213,214,215,226,232,255,272,288,290,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-41,69,69,69,]),'NOT':([33,36,37,38,48,51,56,57,58,62,63,70,71,72,74,89,90,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,198,201,213,214,215,226,232,255,272,288,290,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-41,72,72,72,]),'MENOS':([33,35,36,37,38,41,42,43,44,45,48,50,51,56,57,58,62,63,67,70,71,72,73,74,75,76,77,78,80,81,82,83,89,90,91,92,93,94,96,97,98,99,102,103,106,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,130,138,139,140,141,142,146,155,158,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,198,201,206,213,214,215,216,226,228,231,232,238,239,240,250,255,256,260,261,272,284,288,290,292,293,],[71,-119,71,71,71,-100,-101,-102,-103,-104,71,-118,71,71,71,71,71,71,111,71,71,71,-99,71,-105,-122,-123,-124,111,111,111,111,71,71,-116,-117,71,111,111,111,111,71,71,111,111,71,71,71,71,71,71,71,71,71,71,71,71,71,-96,71,111,-95,-94,71,111,111,111,-121,71,111,111,71,-81,-82,-83,-84,-85,111,111,111,111,111,111,111,111,111,-97,-106,-108,-109,-110,-111,-112,-113,-120,71,71,111,71,71,71,-107,71,111,111,71,111,111,111,111,-41,111,-79,-80,71,111,71,71,111,111,]),'MAS':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,110,-99,-105,-122,-123,-124,110,110,110,110,-116,-117,110,110,110,110,110,110,-96,110,-95,-94,110,110,110,-121,110,110,-81,-82,-83,-84,-85,110,110,110,110,110,110,110,110,110,-97,-106,-108,-109,-110,-111,-112,-113,-120,110,-107,110,110,110,110,110,110,110,-79,-80,110,110,110,]),'POR':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,112,-99,-105,-122,-123,-124,112,112,112,112,-116,-117,112,112,112,112,112,112,-96,112,-95,-94,112,112,112,-121,112,112,112,112,-83,-84,-85,112,112,112,112,112,112,112,112,112,-97,-106,-108,-109,-110,-111,-112,-113,-120,112,-107,112,112,112,112,112,112,112,-79,-80,112,112,112,]),'DIVIDIDO':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,113,-99,-105,-122,-123,-124,113,113,113,113,-116,-117,113,113,113,113,113,113,-96,113,-95,-94,113,113,113,-121,113,113,113,113,-83,-84,-85,113,113,113,113,113,113,113,113,113,-97,-106,-108,-109,-110,-111,-112,-113,-120,113,-107,113,113,113,113,113,113,113,-79,-80,113,113,113,]),'MODULO':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,114,-99,-105,-122,-123,-124,114,114,114,114,-116,-117,114,114,114,114,114,114,-96,114,-95,-94,114,114,114,-121,114,114,114,114,-83,-84,-85,114,114,114,114,114,114,114,114,114,-97,-106,-108,-109,-110,-111,-112,-113,-120,114,-107,114,114,114,114,114,114,114,-79,-80,114,114,114,]),'MAYOR':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,115,-99,-105,-122,-123,-124,115,115,115,115,-116,-117,115,115,115,115,115,115,-96,115,-95,-94,115,115,115,-121,115,115,-81,-82,-83,-84,-85,-86,-87,-88,-89,115,115,115,115,115,-97,-106,-108,-109,-110,-111,-112,-113,-120,115,-107,115,115,115,115,115,115,115,-79,-80,115,115,115,]),'MENOR':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,116,-99,-105,-122,-123,-124,116,116,116,116,-116,-117,116,116,116,116,116,116,-96,116,-95,-94,116,116,116,-121,116,116,-81,-82,-83,-84,-85,-86,-87,-88,-89,116,116,116,116,116,-97,-106,-108,-109,-110,-111,-112,-113,-120,116,-107,116,116,116,116,116,116,116,-79,-80,116,116,116,]),'MAYORIG':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,117,-99,-105,-122,-123,-124,117,117,117,117,-116,-117,117,117,117,117,117,117,-96,117,-95,-94,117,117,117,-121,117,117,-81,-82,-83,-84,-85,-86,-87,-88,-89,117,117,117,117,117,-97,-106,-108,-109,-110,-111,-112,-113,-120,117,-107,117,117,117,117,117,117,117,-79,-80,117,117,117,]),'MENORIG':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,118,-99,-105,-122,-123,-124,118,118,118,118,-116,-117,118,118,118,118,118,118,-96,118,-95,-94,118,118,118,-121,118,118,-81,-82,-83,-84,-85,-86,-87,-88,-89,118,118,118,118,118,-97,-106,-108,-109,-110,-111,-112,-113,-120,118,-107,118,118,118,118,118,118,118,-79,-80,118,118,118,]),'IGIG':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,119,-99,-105,-122,-123,-124,119,119,119,119,-116,-117,119,119,119,119,119,119,-96,119,-95,-94,119,119,119,-121,119,119,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,119,119,119,-97,-106,-108,-109,-110,-111,-112,-113,-120,119,-107,119,119,119,119,119,119,119,-79,-80,119,119,119,]),'DIF':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,120,-99,-105,-122,-123,-124,120,120,120,120,-116,-117,120,120,120,120,120,120,-96,120,-95,-94,120,120,120,-121,120,120,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,120,120,120,-97,-106,-108,-109,-110,-111,-112,-113,-120,120,-107,120,120,120,120,120,120,120,-79,-80,120,120,120,]),'AND':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,121,-99,-105,-122,-123,-124,121,121,121,121,-116,-117,121,121,121,121,121,121,-96,121,-95,-94,121,121,121,-121,121,121,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,121,121,-97,-106,-108,-109,-110,-111,-112,-113,-120,121,-107,121,121,121,121,121,121,121,-79,-80,121,121,121,]),'OR':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,122,-99,-105,-122,-123,-124,122,122,122,122,-116,-117,122,122,122,122,122,122,-96,122,-95,-94,122,122,122,-121,122,122,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,122,-97,-106,-108,-109,-110,-111,-112,-113,-120,122,-107,122,122,122,122,122,122,122,-79,-80,122,122,122,]),'INCREMENTO':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,123,-99,-105,-122,-123,-124,123,123,123,123,-116,-117,123,123,123,123,123,123,-96,123,-95,-94,123,123,123,-121,123,123,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,123,-97,-106,-108,-109,-110,-111,-112,-113,-120,123,-107,123,123,123,123,123,123,123,-79,-80,123,123,123,]),'TERN':([35,41,42,43,44,45,50,67,73,75,76,77,78,80,81,82,83,91,92,94,96,97,98,103,106,123,126,127,128,138,139,140,141,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,188,189,190,191,192,193,206,216,228,231,238,239,240,250,256,260,261,284,292,293,],[-119,-100,-101,-102,-103,-104,-118,124,-99,-105,-122,-123,-124,124,124,124,124,-116,-117,124,124,124,124,124,124,-96,124,-95,-94,124,124,124,-121,124,124,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,124,-97,-106,-108,-109,-110,-111,-112,-113,-120,124,-107,124,124,124,124,124,124,124,-79,-80,124,124,124,]),'CORDER':([35,41,42,43,44,45,50,73,75,76,77,78,80,81,82,91,92,94,106,123,127,128,129,138,139,140,141,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,185,188,189,190,191,192,193,203,206,216,233,238,259,260,261,],[-119,-100,-101,-102,-103,-104,-118,-99,-105,-122,-123,-124,-125,-126,-127,-116,-117,141,-78,-96,-95,-94,183,-114,-115,193,-121,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-97,-106,-108,-109,-110,-111,-112,-113,-120,234,-77,-107,257,-98,276,-79,-80,]),'PARDER':([35,41,42,43,44,45,50,63,73,75,76,77,78,80,81,82,91,92,96,97,98,104,106,108,123,126,127,128,130,133,134,135,136,137,138,139,141,150,151,152,153,154,162,164,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,184,185,188,189,190,191,192,193,194,206,209,216,228,236,237,238,239,240,260,261,276,292,],[-119,-100,-101,-102,-103,-104,-118,105,-99,-105,-122,-123,-124,-125,-126,-127,-116,-117,143,144,145,157,-78,163,-96,182,-95,-94,185,188,189,190,191,192,-114,-115,-121,-71,-72,-73,-74,-75,210,-64,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-97,-106,216,-108,-109,-110,-111,-112,-113,-120,220,-77,-76,-107,252,-63,-65,-98,260,261,-79,-80,-66,294,]),'COMA':([35,41,42,43,44,45,50,73,75,76,77,78,80,81,82,91,92,104,106,123,127,128,129,138,139,141,150,151,152,153,154,162,164,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,184,185,188,189,190,191,192,193,194,206,209,216,236,237,238,254,260,261,276,284,293,],[-119,-100,-101,-102,-103,-104,-118,-99,-105,-122,-123,-124,-125,-126,-127,-116,-117,158,-78,-96,-95,-94,158,-114,-115,-121,-71,-72,-73,-74,-75,211,-64,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-97,-106,158,-108,-109,-110,-111,-112,-113,-120,158,-77,-76,-107,-63,-65,-98,274,-79,-80,-66,-48,-47,]),'DOSPTS':([35,41,42,43,44,45,50,60,73,75,76,77,78,80,81,82,91,92,107,123,127,128,138,139,141,147,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,185,186,188,189,190,191,192,193,210,216,218,225,238,250,253,260,261,286,],[-119,-100,-101,-102,-103,-104,-118,101,-99,-105,-122,-123,-124,-125,-126,-127,-116,-117,161,-96,-95,-94,-114,-115,-121,199,-59,212,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,213,-97,-106,-108,217,-109,-110,-111,-112,-113,-120,-58,-107,242,249,-98,270,272,-79,-80,290,]),'TOSTRING':([49,],[84,]),'TOLOWERCASE':([49,],[85,]),'TOUPPERCASE':([49,],[86,]),'POP':([49,],[87,]),'JOIN':([49,],[88,]),'PUSH':([49,],[89,]),'INDEXOF':([49,],[90,]),'LENGTH':([49,],[91,]),'LOG':([55,],[95,]),'LLAVEIZQ':([79,107,143,144,145,150,151,152,153,154,160,163,200,208,209,210,252,267,294,],[131,-68,195,196,197,-71,-72,-73,-74,-75,207,-59,230,-67,-76,-58,271,280,295,]),'NUMBER':([101,161,199,212,217,242,],[150,150,150,150,150,150,]),'FLOAT':([101,161,199,212,217,242,],[151,151,151,151,151,151,]),'STRING':([101,161,199,212,217,242,],[152,152,152,152,152,152,]),'CHAR':([101,161,199,212,217,242,],[153,153,153,153,153,153,]),'BOOLEAN':([101,161,199,212,217,242,],[154,154,154,154,154,154,]),'KEYS':([125,],[180,]),'VALUES':([125,],[181,]),'ELSE':([244,264,266,279,297,],[267,267,-29,-28,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'block':([0,195,197,207,249,270,271,280,295,],[2,221,227,235,269,282,283,287,296,]),'instruccion':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[3,46,3,3,3,46,46,46,3,46,3,3,3,46,46,46,3,46,]),'print':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'ifinstruction':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'switchinstruction':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'whileinstruction':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'forinstruction':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'declaration':([0,2,59,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[9,9,99,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'arraydeclaration':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'assignment':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'breakstmt':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'continuestmt':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'functionstmt':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'call':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'returnstmt':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'interfacecreation':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'interdeclaration':([0,2,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'listArray':([0,2,33,36,37,38,48,51,56,57,58,62,63,70,71,72,74,89,90,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,195,197,198,201,207,213,214,215,221,226,227,232,235,249,269,270,271,272,280,282,283,287,288,290,295,296,],[19,19,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,19,19,73,73,19,73,73,73,19,73,19,73,19,19,19,19,19,73,19,19,19,19,73,73,19,19,]),'typeof':([0,2,33,36,37,38,48,51,56,57,58,62,63,70,71,72,74,89,90,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,195,197,198,201,207,213,214,215,221,226,227,232,235,249,269,270,271,272,280,282,283,287,288,290,295,296,],[20,20,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,20,20,76,76,20,76,76,76,20,76,20,76,20,20,20,20,20,76,20,20,20,20,76,76,20,20,]),'parseint':([0,2,33,36,37,38,48,51,56,57,58,62,63,70,71,72,74,89,90,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,195,197,198,201,207,213,214,215,221,226,227,232,235,249,269,270,271,272,280,282,283,287,288,290,295,296,],[21,21,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,21,21,77,77,21,77,77,77,21,77,21,77,21,21,21,21,21,77,21,21,21,21,77,77,21,21,]),'parsefloat':([0,2,33,36,37,38,48,51,56,57,58,62,63,70,71,72,74,89,90,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,195,197,198,201,207,213,214,215,221,226,227,232,235,249,269,270,271,272,280,282,283,287,288,290,295,296,],[22,22,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,22,22,78,78,22,78,78,78,22,78,22,78,22,22,22,22,22,78,22,22,22,22,78,78,22,22,]),'var_const':([0,2,59,195,197,207,221,227,235,249,269,270,271,280,282,283,287,295,296,],[28,28,100,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'valor':([0,2,33,36,37,38,48,51,56,57,58,62,63,70,71,72,74,89,90,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,195,197,198,201,207,213,214,215,221,226,227,232,235,249,269,270,271,272,280,282,283,287,288,290,295,296,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'indexes':([19,29,73,],[50,61,50,]),'expression':([33,36,37,38,48,51,56,57,58,62,63,70,71,72,74,89,90,93,99,102,110,111,112,113,114,115,116,117,118,119,120,121,122,124,130,142,158,198,201,213,214,215,226,232,272,288,290,],[67,80,81,82,83,94,96,97,98,103,106,126,127,128,106,138,139,140,146,155,166,167,168,169,170,171,172,173,174,175,176,177,178,179,106,106,206,228,231,238,239,240,250,256,284,292,293,]),'expressionList':([63,74,130,142,],[104,129,184,194,]),'funcparams':([66,],[107,]),'type':([101,161,199,212,217,242,],[149,208,229,237,241,263,]),'functype':([107,],[160,]),'paramsList':([108,],[162,]),'parametro':([108,211,],[164,236,]),'attributeList':([131,],[187,]),'dimension':([149,],[202,]),'caseList':([196,],[222,]),'default':([196,222,],[223,246,]),'case':([196,222,],[224,247,]),'interfaceContent':([230,],[254,]),'else_if_list':([244,],[264,]),'else':([244,264,],[265,278,]),'else_if':([244,264,],[266,279,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> block','s',1,'p_start','grammar.py',249),
  ('block -> block instruccion','block',2,'p_instruction_block','grammar.py',253),
  ('block -> instruccion','block',1,'p_instruction_block','grammar.py',254),
  ('instruccion -> print','instruccion',1,'p_instruction_list','grammar.py',263),
  ('instruccion -> ifinstruction','instruccion',1,'p_instruction_list','grammar.py',264),
  ('instruccion -> switchinstruction','instruccion',1,'p_instruction_list','grammar.py',265),
  ('instruccion -> whileinstruction','instruccion',1,'p_instruction_list','grammar.py',266),
  ('instruccion -> forinstruction','instruccion',1,'p_instruction_list','grammar.py',267),
  ('instruccion -> declaration','instruccion',1,'p_instruction_list','grammar.py',268),
  ('instruccion -> arraydeclaration','instruccion',1,'p_instruction_list','grammar.py',269),
  ('instruccion -> assignment','instruccion',1,'p_instruction_list','grammar.py',270),
  ('instruccion -> breakstmt','instruccion',1,'p_instruction_list','grammar.py',271),
  ('instruccion -> continuestmt','instruccion',1,'p_instruction_list','grammar.py',272),
  ('instruccion -> functionstmt','instruccion',1,'p_instruction_list','grammar.py',273),
  ('instruccion -> call','instruccion',1,'p_instruction_list','grammar.py',274),
  ('instruccion -> returnstmt','instruccion',1,'p_instruction_list','grammar.py',275),
  ('instruccion -> interfacecreation','instruccion',1,'p_instruction_list','grammar.py',276),
  ('instruccion -> interdeclaration','instruccion',1,'p_instruction_list','grammar.py',277),
  ('instruccion -> listArray PYC','instruccion',2,'p_instruction_list','grammar.py',278),
  ('instruccion -> typeof PYC','instruccion',2,'p_instruction_list','grammar.py',279),
  ('instruccion -> parseint PYC','instruccion',2,'p_instruction_list','grammar.py',280),
  ('instruccion -> parsefloat PYC','instruccion',2,'p_instruction_list','grammar.py',281),
  ('print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC','print',7,'p_instruction_console','grammar.py',285),
  ('ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER','ifinstruction',7,'p_instruction_if','grammar.py',290),
  ('ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list','ifinstruction',8,'p_instruction_if','grammar.py',291),
  ('ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else','ifinstruction',8,'p_instruction_if','grammar.py',292),
  ('ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else','ifinstruction',9,'p_instruction_if','grammar.py',293),
  ('else_if_list -> else_if_list else_if','else_if_list',2,'p_instruction_else_if_list','grammar.py',306),
  ('else_if_list -> else_if','else_if_list',1,'p_instruction_else_if_list','grammar.py',307),
  ('else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER','else_if',8,'p_instruction_else_if','grammar.py',315),
  ('else -> ELSE LLAVEIZQ block LLAVEDER','else',4,'p_instruction_else','grammar.py',320),
  ('switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER','switchinstruction',7,'p_instruction_switch','grammar.py',325),
  ('switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER','switchinstruction',7,'p_instruction_switch','grammar.py',326),
  ('switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER','switchinstruction',8,'p_instruction_switch','grammar.py',327),
  ('caseList -> caseList case','caseList',2,'p_instruction_case_list','grammar.py',338),
  ('caseList -> case','caseList',1,'p_instruction_case_list','grammar.py',339),
  ('case -> CASE expression DOSPTS block','case',4,'p_instruction_case','grammar.py',347),
  ('default -> DEFAULT DOSPTS block','default',3,'p_instruction_default','grammar.py',352),
  ('whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER','whileinstruction',7,'p_instruction_while','grammar.py',357),
  ('forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER','forinstruction',10,'p_instruction_for','grammar.py',362),
  ('declaration -> var_const ID DOSPTS type IG expression PYC','declaration',7,'p_instruction_declaration_var','grammar.py',367),
  ('arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC','arraydeclaration',8,'p_instruction_array_declaration','grammar.py',372),
  ('assignment -> ID indexes IG expression PYC','assignment',5,'p_instruction_array_assignment','grammar.py',377),
  ('dimension -> dimension CORIZQ CORDER','dimension',3,'p_dimension_array','grammar.py',383),
  ('dimension -> CORIZQ CORDER','dimension',2,'p_dimension_array','grammar.py',384),
  ('interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC','interdeclaration',9,'p_instruction_interface_declaration','grammar.py',387),
  ('interfaceContent -> interfaceContent COMA ID DOSPTS expression','interfaceContent',5,'p_instruction_interface_content','grammar.py',392),
  ('interfaceContent -> ID DOSPTS expression','interfaceContent',3,'p_instruction_interface_content','grammar.py',393),
  ('var_const -> VAR','var_const',1,'p_var_const','grammar.py',404),
  ('var_const -> CONST','var_const',1,'p_var_const','grammar.py',405),
  ('assignment -> listArray IG expression PYC','assignment',4,'p_interface_assignment','grammar.py',409),
  ('assignment -> ID IG expression PYC','assignment',4,'p_instruction_assignment','grammar.py',414),
  ('returnstmt -> RETURN expression PYC','returnstmt',3,'p_instruction_return','grammar.py',419),
  ('returnstmt -> RETURN PYC','returnstmt',2,'p_instruction_return','grammar.py',420),
  ('call -> ID PARIZQ expressionList PARDER PYC','call',5,'p_instruction_call_function','grammar.py',428),
  ('call -> ID PARIZQ PARDER PYC','call',4,'p_instruction_call_function','grammar.py',429),
  ('functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER','functionstmt',7,'p_instruction_function','grammar.py',437),
  ('funcparams -> PARIZQ paramsList PARDER','funcparams',3,'p_instruction_function_params_list','grammar.py',442),
  ('funcparams -> PARIZQ PARDER','funcparams',2,'p_instruction_function_params_list','grammar.py',443),
  ('interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER','interfacecreation',5,'p_instruction_interface_creation','grammar.py',450),
  ('attributeList -> attributeList ID DOSPTS type PYC','attributeList',5,'p_instruction_interface_attribute','grammar.py',455),
  ('attributeList -> ID DOSPTS type PYC','attributeList',4,'p_instruction_interface_attribute','grammar.py',456),
  ('paramsList -> paramsList COMA parametro','paramsList',3,'p_expression_param_list','grammar.py',467),
  ('paramsList -> parametro','paramsList',1,'p_expression_param_list','grammar.py',468),
  ('parametro -> ID DOSPTS type','parametro',3,'p_parametro','grammar.py',477),
  ('parametro -> ID DOSPTS type CORIZQ CORDER','parametro',5,'p_parametro','grammar.py',478),
  ('functype -> DOSPTS type','functype',2,'p_instruction_function_type','grammar.py',487),
  ('functype -> <empty>','functype',0,'p_instruction_function_type','grammar.py',488),
  ('breakstmt -> BREAK PYC','breakstmt',2,'p_instruction_break','grammar.py',495),
  ('continuestmt -> CONTINUE PYC','continuestmt',2,'p_instruction_continue','grammar.py',500),
  ('type -> NUMBER','type',1,'p_type_prod','grammar.py',505),
  ('type -> FLOAT','type',1,'p_type_prod','grammar.py',506),
  ('type -> STRING','type',1,'p_type_prod','grammar.py',507),
  ('type -> CHAR','type',1,'p_type_prod','grammar.py',508),
  ('type -> BOOLEAN','type',1,'p_type_prod','grammar.py',509),
  ('type -> ID','type',1,'p_type_prod','grammar.py',510),
  ('expressionList -> expressionList COMA expression','expressionList',3,'p_expression_list','grammar.py',525),
  ('expressionList -> expression','expressionList',1,'p_expression_list','grammar.py',526),
  ('expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER','expression',6,'p_interface_methods','grammar.py',535),
  ('expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER','expression',6,'p_interface_methods','grammar.py',536),
  ('expression -> expression MAS expression','expression',3,'p_expression_add','grammar.py',545),
  ('expression -> expression MENOS expression','expression',3,'p_expression_sub','grammar.py',550),
  ('expression -> expression POR expression','expression',3,'p_expression_mult','grammar.py',555),
  ('expression -> expression DIVIDIDO expression','expression',3,'p_expression_div','grammar.py',560),
  ('expression -> expression MODULO expression','expression',3,'p_expression_mod','grammar.py',565),
  ('expression -> expression MAYOR expression','expression',3,'p_expression_mayor','grammar.py',570),
  ('expression -> expression MENOR expression','expression',3,'p_expression_menor','grammar.py',575),
  ('expression -> expression MAYORIG expression','expression',3,'p_expression_mayor_igual','grammar.py',580),
  ('expression -> expression MENORIG expression','expression',3,'p_expression_menor_igual','grammar.py',585),
  ('expression -> expression IGIG expression','expression',3,'p_expression_igual','grammar.py',590),
  ('expression -> expression DIF expression','expression',3,'p_expression_diferente','grammar.py',595),
  ('expression -> expression AND expression','expression',3,'p_expression_and','grammar.py',600),
  ('expression -> expression OR expression','expression',3,'p_expression_or','grammar.py',605),
  ('expression -> NOT expression','expression',2,'p_expression_not','grammar.py',610),
  ('expression -> MENOS expression','expression',2,'p_expression_negativo','grammar.py',615),
  ('expression -> expression INCREMENTO','expression',2,'p_expression_incremento','grammar.py',620),
  ('expression -> PARIZQ expression PARDER','expression',3,'p_expression_agrupacion','grammar.py',625),
  ('expression -> expression TERN expression DOSPTS expression','expression',5,'p_expression_ternario','grammar.py',629),
  ('expression -> listArray','expression',1,'p_expression_valor','grammar.py',634),
  ('valor -> ENTERO','valor',1,'p_expression_primitiva','grammar.py',638),
  ('valor -> DECIMAL','valor',1,'p_expression_primitiva','grammar.py',639),
  ('valor -> CADENA','valor',1,'p_expression_primitiva','grammar.py',640),
  ('valor -> CARACTER','valor',1,'p_expression_primitiva','grammar.py',641),
  ('valor -> BOOLEANO','valor',1,'p_expression_primitiva','grammar.py',642),
  ('valor -> ID','valor',1,'p_expression_acceso','grammar.py',646),
  ('expression -> CORIZQ expressionList CORDER','expression',3,'p_expression_array_primitiva','grammar.py',651),
  ('expression -> ID PARIZQ expressionList PARDER','expression',4,'p_expression_call_function','grammar.py',656),
  ('expression -> ID PARIZQ PARDER','expression',3,'p_expression_call_function','grammar.py',657),
  ('listArray -> listArray PUNTO TOSTRING PARIZQ PARDER','listArray',5,'p_expression_list_array','grammar.py',665),
  ('listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER','listArray',5,'p_expression_list_array','grammar.py',666),
  ('listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER','listArray',5,'p_expression_list_array','grammar.py',667),
  ('listArray -> listArray PUNTO POP PARIZQ PARDER','listArray',5,'p_expression_list_array','grammar.py',668),
  ('listArray -> listArray PUNTO JOIN PARIZQ PARDER','listArray',5,'p_expression_list_array','grammar.py',669),
  ('listArray -> listArray PUNTO PUSH expression','listArray',4,'p_expression_list_array','grammar.py',670),
  ('listArray -> listArray PUNTO INDEXOF expression','listArray',4,'p_expression_list_array','grammar.py',671),
  ('listArray -> listArray PUNTO LENGTH','listArray',3,'p_expression_list_array','grammar.py',672),
  ('listArray -> listArray PUNTO ID','listArray',3,'p_expression_list_array','grammar.py',673),
  ('listArray -> listArray indexes','listArray',2,'p_expression_list_array','grammar.py',674),
  ('listArray -> valor','listArray',1,'p_expression_list_array','grammar.py',675),
  ('indexes -> indexes CORIZQ expression CORDER','indexes',4,'p_expression_access_array','grammar.py',695),
  ('indexes -> CORIZQ expression CORDER','indexes',3,'p_expression_access_array','grammar.py',696),
  ('expression -> typeof','expression',1,'p_func_embebidas','grammar.py',705),
  ('expression -> parseint','expression',1,'p_func_embebidas','grammar.py',706),
  ('expression -> parsefloat','expression',1,'p_func_embebidas','grammar.py',707),
  ('typeof -> TYPEOF expression','typeof',2,'p_expression_typeof','grammar.py',711),
  ('parseint -> PARSEINT expression','parseint',2,'p_expression_parseInt','grammar.py',716),
  ('parsefloat -> PARSEFLOAT expression','parsefloat',2,'p_expression_parseFloat','grammar.py',721),
]
