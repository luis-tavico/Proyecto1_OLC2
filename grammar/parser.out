Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruccion
Rule 3     block -> instruccion
Rule 4     instruccion -> print
Rule 5     instruccion -> ifinstruction
Rule 6     instruccion -> switchinstruction
Rule 7     instruccion -> whileinstruction
Rule 8     instruccion -> forinstruction
Rule 9     instruccion -> declaration
Rule 10    instruccion -> arraydeclaration
Rule 11    instruccion -> assignment
Rule 12    instruccion -> breakstmt
Rule 13    instruccion -> continuestmt
Rule 14    instruccion -> functionstmt
Rule 15    instruccion -> call
Rule 16    instruccion -> returnstmt
Rule 17    instruccion -> interfacecreation
Rule 18    instruccion -> interdeclaration
Rule 19    instruccion -> listArray PYC
Rule 20    instruccion -> typeof PYC
Rule 21    instruccion -> parseint PYC
Rule 22    instruccion -> parsefloat PYC
Rule 23    print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
Rule 24    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 25    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
Rule 26    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
Rule 27    ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
Rule 28    else_if_list -> else_if_list else_if
Rule 29    else_if_list -> else_if
Rule 30    else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 31    else -> ELSE LLAVEIZQ block LLAVEDER
Rule 32    switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
Rule 33    switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
Rule 34    switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
Rule 35    caseList -> caseList case
Rule 36    caseList -> case
Rule 37    case -> CASE expression DOSPTS block
Rule 38    default -> DEFAULT DOSPTS block
Rule 39    whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
Rule 40    forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
Rule 41    declaration -> var_const ID DOSPTS type IG expression PYC
Rule 42    arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC
Rule 43    assignment -> ID indexes IG expression PYC
Rule 44    dimension -> dimension CORIZQ CORDER
Rule 45    dimension -> CORIZQ CORDER
Rule 46    interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
Rule 47    interfaceContent -> interfaceContent COMA ID DOSPTS expression
Rule 48    interfaceContent -> ID DOSPTS expression
Rule 49    var_const -> VAR
Rule 50    var_const -> CONST
Rule 51    assignment -> listArray IG expression PYC
Rule 52    assignment -> ID IG expression PYC
Rule 53    returnstmt -> RETURN expression PYC
Rule 54    returnstmt -> RETURN PYC
Rule 55    call -> ID PARIZQ expressionList PARDER PYC
Rule 56    call -> ID PARIZQ PARDER PYC
Rule 57    functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
Rule 58    funcparams -> PARIZQ paramsList PARDER
Rule 59    funcparams -> PARIZQ PARDER
Rule 60    interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER
Rule 61    attributeList -> attributeList ID DOSPTS type PYC
Rule 62    attributeList -> ID DOSPTS type PYC
Rule 63    paramsList -> paramsList COMA parametro
Rule 64    paramsList -> parametro
Rule 65    parametro -> ID DOSPTS type
Rule 66    parametro -> ID DOSPTS type CORIZQ CORDER
Rule 67    functype -> DOSPTS type
Rule 68    functype -> <empty>
Rule 69    breakstmt -> BREAK PYC
Rule 70    continuestmt -> CONTINUE PYC
Rule 71    type -> NUMBER
Rule 72    type -> FLOAT
Rule 73    type -> STRING
Rule 74    type -> CHAR
Rule 75    type -> BOOLEAN
Rule 76    type -> ID
Rule 77    expressionList -> expressionList COMA expression
Rule 78    expressionList -> expression
Rule 79    expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER
Rule 80    expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER
Rule 81    expression -> expression MAS expression
Rule 82    expression -> expression MENOS expression
Rule 83    expression -> expression POR expression
Rule 84    expression -> expression DIVIDIDO expression
Rule 85    expression -> expression MODULO expression
Rule 86    expression -> expression MAYOR expression
Rule 87    expression -> expression MENOR expression
Rule 88    expression -> expression MAYORIG expression
Rule 89    expression -> expression MENORIG expression
Rule 90    expression -> expression IGIG expression
Rule 91    expression -> expression DIF expression
Rule 92    expression -> expression AND expression
Rule 93    expression -> expression OR expression
Rule 94    expression -> NOT expression
Rule 95    expression -> MENOS expression
Rule 96    expression -> expression INCREMENTO
Rule 97    expression -> PARIZQ expression PARDER
Rule 98    expression -> expression TERN expression DOSPTS expression
Rule 99    expression -> listArray
Rule 100   valor -> ENTERO
Rule 101   valor -> DECIMAL
Rule 102   valor -> CADENA
Rule 103   valor -> CARACTER
Rule 104   valor -> BOOLEANO
Rule 105   valor -> ID
Rule 106   expression -> CORIZQ expressionList CORDER
Rule 107   expression -> ID PARIZQ expressionList PARDER
Rule 108   expression -> ID PARIZQ PARDER
Rule 109   listArray -> listArray PUNTO TOSTRING PARIZQ PARDER
Rule 110   listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER
Rule 111   listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER
Rule 112   listArray -> listArray PUNTO POP PARIZQ PARDER
Rule 113   listArray -> listArray PUNTO JOIN PARIZQ PARDER
Rule 114   listArray -> listArray PUNTO PUSH expression
Rule 115   listArray -> listArray PUNTO INDEXOF expression
Rule 116   listArray -> listArray PUNTO LENGTH
Rule 117   listArray -> listArray PUNTO ID
Rule 118   listArray -> listArray indexes
Rule 119   listArray -> valor
Rule 120   indexes -> indexes CORIZQ expression CORDER
Rule 121   indexes -> CORIZQ expression CORDER
Rule 122   expression -> typeof
Rule 123   expression -> parseint
Rule 124   expression -> parsefloat
Rule 125   typeof -> TYPEOF expression
Rule 126   parseint -> PARSEINT expression
Rule 127   parsefloat -> PARSEFLOAT expression

Terminals, with rules where they appear

AND                  : 92
BOOLEAN              : 75
BOOLEANO             : 104
BREAK                : 69
CADENA               : 102
CARACTER             : 103
CASE                 : 37
CHAR                 : 74
COMA                 : 47 63 77
CONSOLE              : 23
CONST                : 50
CONTINUE             : 70
CORDER               : 44 45 66 106 120 121
CORIZQ               : 44 45 66 106 120 121
DECIMAL              : 101
DEFAULT              : 38
DIF                  : 91
DIVIDIDO             : 84
DOSPTS               : 37 38 41 42 46 47 48 61 62 65 66 67 98
ELSE                 : 30 31
ENTERO               : 100
FLOAT                : 72
FOR                  : 40
FUNCTION             : 57
ID                   : 41 42 43 46 46 47 48 52 55 56 57 60 61 62 65 66 76 105 107 108 117
IF                   : 24 25 26 27 30
IG                   : 41 42 43 46 51 52
IGIG                 : 90
INCREMENTO           : 96
INDEXOF              : 115
INTERFACE            : 60
JOIN                 : 113
KEYS                 : 79
LENGTH               : 116
LLAVEDER             : 24 25 26 27 30 31 32 33 34 39 40 46 57 60
LLAVEIZQ             : 24 25 26 27 30 31 32 33 34 39 40 46 57 60
LOG                  : 23
MAS                  : 81
MAYOR                : 86
MAYORIG              : 88
MENOR                : 87
MENORIG              : 89
MENOS                : 82 95
MODULO               : 85
NOT                  : 94
NUMBER               : 71
OBJECT               : 79 80
OR                   : 93
PARDER               : 23 24 25 26 27 30 32 33 34 39 40 55 56 58 59 79 80 97 107 108 109 110 111 112 113
PARIZQ               : 23 24 25 26 27 30 32 33 34 39 40 55 56 58 59 79 80 97 107 108 109 110 111 112 113
PARSEFLOAT           : 127
PARSEINT             : 126
POP                  : 112
POR                  : 83
PUNTO                : 23 79 80 109 110 111 112 113 114 115 116 117
PUSH                 : 114
PYC                  : 19 20 21 22 23 40 41 42 43 46 51 52 53 54 55 56 61 62 69 70
RETURN               : 53 54
STRING               : 73
SWITCH               : 32 33 34
TERN                 : 98
TOLOWERCASE          : 110
TOSTRING             : 109
TOUPPERCASE          : 111
TYPEOF               : 125
VALUES               : 80
VAR                  : 49
WHILE                : 39
error                : 

Nonterminals, with rules where they appear

arraydeclaration     : 10
assignment           : 11
attributeList        : 60 61
block                : 1 2 24 25 26 27 30 31 37 38 39 40 57
breakstmt            : 12
call                 : 15
case                 : 35 36
caseList             : 32 34 35
continuestmt         : 13
declaration          : 9 40
default              : 33 34
dimension            : 42 44
else                 : 26 27
else_if              : 28 29
else_if_list         : 25 27 28
expression           : 24 25 26 27 30 32 33 34 37 39 40 40 41 42 43 47 48 51 52 53 77 78 79 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 95 96 97 98 98 98 114 115 120 121 125 126 127
expressionList       : 23 55 77 106 107
forinstruction       : 8
funcparams           : 57
functionstmt         : 14
functype             : 57
ifinstruction        : 5
indexes              : 43 118 120
instruccion          : 2 3
interdeclaration     : 18
interfaceContent     : 46 47
interfacecreation    : 17
listArray            : 19 51 99 109 110 111 112 113 114 115 116 117 118
parametro            : 63 64
paramsList           : 58 63
parsefloat           : 22 124
parseint             : 21 123
print                : 4
returnstmt           : 16
s                    : 0
switchinstruction    : 6
type                 : 41 42 61 62 65 66 67
typeof               : 20 122
valor                : 119
var_const            : 41 42 46
whileinstruction     : 7

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 3

    (3) block -> instruccion .

    CONSOLE         reduce using rule 3 (block -> instruccion .)
    IF              reduce using rule 3 (block -> instruccion .)
    SWITCH          reduce using rule 3 (block -> instruccion .)
    WHILE           reduce using rule 3 (block -> instruccion .)
    FOR             reduce using rule 3 (block -> instruccion .)
    ID              reduce using rule 3 (block -> instruccion .)
    BREAK           reduce using rule 3 (block -> instruccion .)
    CONTINUE        reduce using rule 3 (block -> instruccion .)
    FUNCTION        reduce using rule 3 (block -> instruccion .)
    RETURN          reduce using rule 3 (block -> instruccion .)
    INTERFACE       reduce using rule 3 (block -> instruccion .)
    TYPEOF          reduce using rule 3 (block -> instruccion .)
    PARSEINT        reduce using rule 3 (block -> instruccion .)
    PARSEFLOAT      reduce using rule 3 (block -> instruccion .)
    VAR             reduce using rule 3 (block -> instruccion .)
    CONST           reduce using rule 3 (block -> instruccion .)
    ENTERO          reduce using rule 3 (block -> instruccion .)
    DECIMAL         reduce using rule 3 (block -> instruccion .)
    CADENA          reduce using rule 3 (block -> instruccion .)
    CARACTER        reduce using rule 3 (block -> instruccion .)
    BOOLEANO        reduce using rule 3 (block -> instruccion .)
    $end            reduce using rule 3 (block -> instruccion .)
    LLAVEDER        reduce using rule 3 (block -> instruccion .)
    DEFAULT         reduce using rule 3 (block -> instruccion .)
    CASE            reduce using rule 3 (block -> instruccion .)


state 4

    (4) instruccion -> print .

    CONSOLE         reduce using rule 4 (instruccion -> print .)
    IF              reduce using rule 4 (instruccion -> print .)
    SWITCH          reduce using rule 4 (instruccion -> print .)
    WHILE           reduce using rule 4 (instruccion -> print .)
    FOR             reduce using rule 4 (instruccion -> print .)
    ID              reduce using rule 4 (instruccion -> print .)
    BREAK           reduce using rule 4 (instruccion -> print .)
    CONTINUE        reduce using rule 4 (instruccion -> print .)
    FUNCTION        reduce using rule 4 (instruccion -> print .)
    RETURN          reduce using rule 4 (instruccion -> print .)
    INTERFACE       reduce using rule 4 (instruccion -> print .)
    TYPEOF          reduce using rule 4 (instruccion -> print .)
    PARSEINT        reduce using rule 4 (instruccion -> print .)
    PARSEFLOAT      reduce using rule 4 (instruccion -> print .)
    VAR             reduce using rule 4 (instruccion -> print .)
    CONST           reduce using rule 4 (instruccion -> print .)
    ENTERO          reduce using rule 4 (instruccion -> print .)
    DECIMAL         reduce using rule 4 (instruccion -> print .)
    CADENA          reduce using rule 4 (instruccion -> print .)
    CARACTER        reduce using rule 4 (instruccion -> print .)
    BOOLEANO        reduce using rule 4 (instruccion -> print .)
    $end            reduce using rule 4 (instruccion -> print .)
    LLAVEDER        reduce using rule 4 (instruccion -> print .)
    DEFAULT         reduce using rule 4 (instruccion -> print .)
    CASE            reduce using rule 4 (instruccion -> print .)


state 5

    (5) instruccion -> ifinstruction .

    CONSOLE         reduce using rule 5 (instruccion -> ifinstruction .)
    IF              reduce using rule 5 (instruccion -> ifinstruction .)
    SWITCH          reduce using rule 5 (instruccion -> ifinstruction .)
    WHILE           reduce using rule 5 (instruccion -> ifinstruction .)
    FOR             reduce using rule 5 (instruccion -> ifinstruction .)
    ID              reduce using rule 5 (instruccion -> ifinstruction .)
    BREAK           reduce using rule 5 (instruccion -> ifinstruction .)
    CONTINUE        reduce using rule 5 (instruccion -> ifinstruction .)
    FUNCTION        reduce using rule 5 (instruccion -> ifinstruction .)
    RETURN          reduce using rule 5 (instruccion -> ifinstruction .)
    INTERFACE       reduce using rule 5 (instruccion -> ifinstruction .)
    TYPEOF          reduce using rule 5 (instruccion -> ifinstruction .)
    PARSEINT        reduce using rule 5 (instruccion -> ifinstruction .)
    PARSEFLOAT      reduce using rule 5 (instruccion -> ifinstruction .)
    VAR             reduce using rule 5 (instruccion -> ifinstruction .)
    CONST           reduce using rule 5 (instruccion -> ifinstruction .)
    ENTERO          reduce using rule 5 (instruccion -> ifinstruction .)
    DECIMAL         reduce using rule 5 (instruccion -> ifinstruction .)
    CADENA          reduce using rule 5 (instruccion -> ifinstruction .)
    CARACTER        reduce using rule 5 (instruccion -> ifinstruction .)
    BOOLEANO        reduce using rule 5 (instruccion -> ifinstruction .)
    $end            reduce using rule 5 (instruccion -> ifinstruction .)
    LLAVEDER        reduce using rule 5 (instruccion -> ifinstruction .)
    DEFAULT         reduce using rule 5 (instruccion -> ifinstruction .)
    CASE            reduce using rule 5 (instruccion -> ifinstruction .)


state 6

    (6) instruccion -> switchinstruction .

    CONSOLE         reduce using rule 6 (instruccion -> switchinstruction .)
    IF              reduce using rule 6 (instruccion -> switchinstruction .)
    SWITCH          reduce using rule 6 (instruccion -> switchinstruction .)
    WHILE           reduce using rule 6 (instruccion -> switchinstruction .)
    FOR             reduce using rule 6 (instruccion -> switchinstruction .)
    ID              reduce using rule 6 (instruccion -> switchinstruction .)
    BREAK           reduce using rule 6 (instruccion -> switchinstruction .)
    CONTINUE        reduce using rule 6 (instruccion -> switchinstruction .)
    FUNCTION        reduce using rule 6 (instruccion -> switchinstruction .)
    RETURN          reduce using rule 6 (instruccion -> switchinstruction .)
    INTERFACE       reduce using rule 6 (instruccion -> switchinstruction .)
    TYPEOF          reduce using rule 6 (instruccion -> switchinstruction .)
    PARSEINT        reduce using rule 6 (instruccion -> switchinstruction .)
    PARSEFLOAT      reduce using rule 6 (instruccion -> switchinstruction .)
    VAR             reduce using rule 6 (instruccion -> switchinstruction .)
    CONST           reduce using rule 6 (instruccion -> switchinstruction .)
    ENTERO          reduce using rule 6 (instruccion -> switchinstruction .)
    DECIMAL         reduce using rule 6 (instruccion -> switchinstruction .)
    CADENA          reduce using rule 6 (instruccion -> switchinstruction .)
    CARACTER        reduce using rule 6 (instruccion -> switchinstruction .)
    BOOLEANO        reduce using rule 6 (instruccion -> switchinstruction .)
    $end            reduce using rule 6 (instruccion -> switchinstruction .)
    LLAVEDER        reduce using rule 6 (instruccion -> switchinstruction .)
    DEFAULT         reduce using rule 6 (instruccion -> switchinstruction .)
    CASE            reduce using rule 6 (instruccion -> switchinstruction .)


state 7

    (7) instruccion -> whileinstruction .

    CONSOLE         reduce using rule 7 (instruccion -> whileinstruction .)
    IF              reduce using rule 7 (instruccion -> whileinstruction .)
    SWITCH          reduce using rule 7 (instruccion -> whileinstruction .)
    WHILE           reduce using rule 7 (instruccion -> whileinstruction .)
    FOR             reduce using rule 7 (instruccion -> whileinstruction .)
    ID              reduce using rule 7 (instruccion -> whileinstruction .)
    BREAK           reduce using rule 7 (instruccion -> whileinstruction .)
    CONTINUE        reduce using rule 7 (instruccion -> whileinstruction .)
    FUNCTION        reduce using rule 7 (instruccion -> whileinstruction .)
    RETURN          reduce using rule 7 (instruccion -> whileinstruction .)
    INTERFACE       reduce using rule 7 (instruccion -> whileinstruction .)
    TYPEOF          reduce using rule 7 (instruccion -> whileinstruction .)
    PARSEINT        reduce using rule 7 (instruccion -> whileinstruction .)
    PARSEFLOAT      reduce using rule 7 (instruccion -> whileinstruction .)
    VAR             reduce using rule 7 (instruccion -> whileinstruction .)
    CONST           reduce using rule 7 (instruccion -> whileinstruction .)
    ENTERO          reduce using rule 7 (instruccion -> whileinstruction .)
    DECIMAL         reduce using rule 7 (instruccion -> whileinstruction .)
    CADENA          reduce using rule 7 (instruccion -> whileinstruction .)
    CARACTER        reduce using rule 7 (instruccion -> whileinstruction .)
    BOOLEANO        reduce using rule 7 (instruccion -> whileinstruction .)
    $end            reduce using rule 7 (instruccion -> whileinstruction .)
    LLAVEDER        reduce using rule 7 (instruccion -> whileinstruction .)
    DEFAULT         reduce using rule 7 (instruccion -> whileinstruction .)
    CASE            reduce using rule 7 (instruccion -> whileinstruction .)


state 8

    (8) instruccion -> forinstruction .

    CONSOLE         reduce using rule 8 (instruccion -> forinstruction .)
    IF              reduce using rule 8 (instruccion -> forinstruction .)
    SWITCH          reduce using rule 8 (instruccion -> forinstruction .)
    WHILE           reduce using rule 8 (instruccion -> forinstruction .)
    FOR             reduce using rule 8 (instruccion -> forinstruction .)
    ID              reduce using rule 8 (instruccion -> forinstruction .)
    BREAK           reduce using rule 8 (instruccion -> forinstruction .)
    CONTINUE        reduce using rule 8 (instruccion -> forinstruction .)
    FUNCTION        reduce using rule 8 (instruccion -> forinstruction .)
    RETURN          reduce using rule 8 (instruccion -> forinstruction .)
    INTERFACE       reduce using rule 8 (instruccion -> forinstruction .)
    TYPEOF          reduce using rule 8 (instruccion -> forinstruction .)
    PARSEINT        reduce using rule 8 (instruccion -> forinstruction .)
    PARSEFLOAT      reduce using rule 8 (instruccion -> forinstruction .)
    VAR             reduce using rule 8 (instruccion -> forinstruction .)
    CONST           reduce using rule 8 (instruccion -> forinstruction .)
    ENTERO          reduce using rule 8 (instruccion -> forinstruction .)
    DECIMAL         reduce using rule 8 (instruccion -> forinstruction .)
    CADENA          reduce using rule 8 (instruccion -> forinstruction .)
    CARACTER        reduce using rule 8 (instruccion -> forinstruction .)
    BOOLEANO        reduce using rule 8 (instruccion -> forinstruction .)
    $end            reduce using rule 8 (instruccion -> forinstruction .)
    LLAVEDER        reduce using rule 8 (instruccion -> forinstruction .)
    DEFAULT         reduce using rule 8 (instruccion -> forinstruction .)
    CASE            reduce using rule 8 (instruccion -> forinstruction .)


state 9

    (9) instruccion -> declaration .

    CONSOLE         reduce using rule 9 (instruccion -> declaration .)
    IF              reduce using rule 9 (instruccion -> declaration .)
    SWITCH          reduce using rule 9 (instruccion -> declaration .)
    WHILE           reduce using rule 9 (instruccion -> declaration .)
    FOR             reduce using rule 9 (instruccion -> declaration .)
    ID              reduce using rule 9 (instruccion -> declaration .)
    BREAK           reduce using rule 9 (instruccion -> declaration .)
    CONTINUE        reduce using rule 9 (instruccion -> declaration .)
    FUNCTION        reduce using rule 9 (instruccion -> declaration .)
    RETURN          reduce using rule 9 (instruccion -> declaration .)
    INTERFACE       reduce using rule 9 (instruccion -> declaration .)
    TYPEOF          reduce using rule 9 (instruccion -> declaration .)
    PARSEINT        reduce using rule 9 (instruccion -> declaration .)
    PARSEFLOAT      reduce using rule 9 (instruccion -> declaration .)
    VAR             reduce using rule 9 (instruccion -> declaration .)
    CONST           reduce using rule 9 (instruccion -> declaration .)
    ENTERO          reduce using rule 9 (instruccion -> declaration .)
    DECIMAL         reduce using rule 9 (instruccion -> declaration .)
    CADENA          reduce using rule 9 (instruccion -> declaration .)
    CARACTER        reduce using rule 9 (instruccion -> declaration .)
    BOOLEANO        reduce using rule 9 (instruccion -> declaration .)
    $end            reduce using rule 9 (instruccion -> declaration .)
    LLAVEDER        reduce using rule 9 (instruccion -> declaration .)
    DEFAULT         reduce using rule 9 (instruccion -> declaration .)
    CASE            reduce using rule 9 (instruccion -> declaration .)


state 10

    (10) instruccion -> arraydeclaration .

    CONSOLE         reduce using rule 10 (instruccion -> arraydeclaration .)
    IF              reduce using rule 10 (instruccion -> arraydeclaration .)
    SWITCH          reduce using rule 10 (instruccion -> arraydeclaration .)
    WHILE           reduce using rule 10 (instruccion -> arraydeclaration .)
    FOR             reduce using rule 10 (instruccion -> arraydeclaration .)
    ID              reduce using rule 10 (instruccion -> arraydeclaration .)
    BREAK           reduce using rule 10 (instruccion -> arraydeclaration .)
    CONTINUE        reduce using rule 10 (instruccion -> arraydeclaration .)
    FUNCTION        reduce using rule 10 (instruccion -> arraydeclaration .)
    RETURN          reduce using rule 10 (instruccion -> arraydeclaration .)
    INTERFACE       reduce using rule 10 (instruccion -> arraydeclaration .)
    TYPEOF          reduce using rule 10 (instruccion -> arraydeclaration .)
    PARSEINT        reduce using rule 10 (instruccion -> arraydeclaration .)
    PARSEFLOAT      reduce using rule 10 (instruccion -> arraydeclaration .)
    VAR             reduce using rule 10 (instruccion -> arraydeclaration .)
    CONST           reduce using rule 10 (instruccion -> arraydeclaration .)
    ENTERO          reduce using rule 10 (instruccion -> arraydeclaration .)
    DECIMAL         reduce using rule 10 (instruccion -> arraydeclaration .)
    CADENA          reduce using rule 10 (instruccion -> arraydeclaration .)
    CARACTER        reduce using rule 10 (instruccion -> arraydeclaration .)
    BOOLEANO        reduce using rule 10 (instruccion -> arraydeclaration .)
    $end            reduce using rule 10 (instruccion -> arraydeclaration .)
    LLAVEDER        reduce using rule 10 (instruccion -> arraydeclaration .)
    DEFAULT         reduce using rule 10 (instruccion -> arraydeclaration .)
    CASE            reduce using rule 10 (instruccion -> arraydeclaration .)


state 11

    (11) instruccion -> assignment .

    CONSOLE         reduce using rule 11 (instruccion -> assignment .)
    IF              reduce using rule 11 (instruccion -> assignment .)
    SWITCH          reduce using rule 11 (instruccion -> assignment .)
    WHILE           reduce using rule 11 (instruccion -> assignment .)
    FOR             reduce using rule 11 (instruccion -> assignment .)
    ID              reduce using rule 11 (instruccion -> assignment .)
    BREAK           reduce using rule 11 (instruccion -> assignment .)
    CONTINUE        reduce using rule 11 (instruccion -> assignment .)
    FUNCTION        reduce using rule 11 (instruccion -> assignment .)
    RETURN          reduce using rule 11 (instruccion -> assignment .)
    INTERFACE       reduce using rule 11 (instruccion -> assignment .)
    TYPEOF          reduce using rule 11 (instruccion -> assignment .)
    PARSEINT        reduce using rule 11 (instruccion -> assignment .)
    PARSEFLOAT      reduce using rule 11 (instruccion -> assignment .)
    VAR             reduce using rule 11 (instruccion -> assignment .)
    CONST           reduce using rule 11 (instruccion -> assignment .)
    ENTERO          reduce using rule 11 (instruccion -> assignment .)
    DECIMAL         reduce using rule 11 (instruccion -> assignment .)
    CADENA          reduce using rule 11 (instruccion -> assignment .)
    CARACTER        reduce using rule 11 (instruccion -> assignment .)
    BOOLEANO        reduce using rule 11 (instruccion -> assignment .)
    $end            reduce using rule 11 (instruccion -> assignment .)
    LLAVEDER        reduce using rule 11 (instruccion -> assignment .)
    DEFAULT         reduce using rule 11 (instruccion -> assignment .)
    CASE            reduce using rule 11 (instruccion -> assignment .)


state 12

    (12) instruccion -> breakstmt .

    CONSOLE         reduce using rule 12 (instruccion -> breakstmt .)
    IF              reduce using rule 12 (instruccion -> breakstmt .)
    SWITCH          reduce using rule 12 (instruccion -> breakstmt .)
    WHILE           reduce using rule 12 (instruccion -> breakstmt .)
    FOR             reduce using rule 12 (instruccion -> breakstmt .)
    ID              reduce using rule 12 (instruccion -> breakstmt .)
    BREAK           reduce using rule 12 (instruccion -> breakstmt .)
    CONTINUE        reduce using rule 12 (instruccion -> breakstmt .)
    FUNCTION        reduce using rule 12 (instruccion -> breakstmt .)
    RETURN          reduce using rule 12 (instruccion -> breakstmt .)
    INTERFACE       reduce using rule 12 (instruccion -> breakstmt .)
    TYPEOF          reduce using rule 12 (instruccion -> breakstmt .)
    PARSEINT        reduce using rule 12 (instruccion -> breakstmt .)
    PARSEFLOAT      reduce using rule 12 (instruccion -> breakstmt .)
    VAR             reduce using rule 12 (instruccion -> breakstmt .)
    CONST           reduce using rule 12 (instruccion -> breakstmt .)
    ENTERO          reduce using rule 12 (instruccion -> breakstmt .)
    DECIMAL         reduce using rule 12 (instruccion -> breakstmt .)
    CADENA          reduce using rule 12 (instruccion -> breakstmt .)
    CARACTER        reduce using rule 12 (instruccion -> breakstmt .)
    BOOLEANO        reduce using rule 12 (instruccion -> breakstmt .)
    $end            reduce using rule 12 (instruccion -> breakstmt .)
    LLAVEDER        reduce using rule 12 (instruccion -> breakstmt .)
    DEFAULT         reduce using rule 12 (instruccion -> breakstmt .)
    CASE            reduce using rule 12 (instruccion -> breakstmt .)


state 13

    (13) instruccion -> continuestmt .

    CONSOLE         reduce using rule 13 (instruccion -> continuestmt .)
    IF              reduce using rule 13 (instruccion -> continuestmt .)
    SWITCH          reduce using rule 13 (instruccion -> continuestmt .)
    WHILE           reduce using rule 13 (instruccion -> continuestmt .)
    FOR             reduce using rule 13 (instruccion -> continuestmt .)
    ID              reduce using rule 13 (instruccion -> continuestmt .)
    BREAK           reduce using rule 13 (instruccion -> continuestmt .)
    CONTINUE        reduce using rule 13 (instruccion -> continuestmt .)
    FUNCTION        reduce using rule 13 (instruccion -> continuestmt .)
    RETURN          reduce using rule 13 (instruccion -> continuestmt .)
    INTERFACE       reduce using rule 13 (instruccion -> continuestmt .)
    TYPEOF          reduce using rule 13 (instruccion -> continuestmt .)
    PARSEINT        reduce using rule 13 (instruccion -> continuestmt .)
    PARSEFLOAT      reduce using rule 13 (instruccion -> continuestmt .)
    VAR             reduce using rule 13 (instruccion -> continuestmt .)
    CONST           reduce using rule 13 (instruccion -> continuestmt .)
    ENTERO          reduce using rule 13 (instruccion -> continuestmt .)
    DECIMAL         reduce using rule 13 (instruccion -> continuestmt .)
    CADENA          reduce using rule 13 (instruccion -> continuestmt .)
    CARACTER        reduce using rule 13 (instruccion -> continuestmt .)
    BOOLEANO        reduce using rule 13 (instruccion -> continuestmt .)
    $end            reduce using rule 13 (instruccion -> continuestmt .)
    LLAVEDER        reduce using rule 13 (instruccion -> continuestmt .)
    DEFAULT         reduce using rule 13 (instruccion -> continuestmt .)
    CASE            reduce using rule 13 (instruccion -> continuestmt .)


state 14

    (14) instruccion -> functionstmt .

    CONSOLE         reduce using rule 14 (instruccion -> functionstmt .)
    IF              reduce using rule 14 (instruccion -> functionstmt .)
    SWITCH          reduce using rule 14 (instruccion -> functionstmt .)
    WHILE           reduce using rule 14 (instruccion -> functionstmt .)
    FOR             reduce using rule 14 (instruccion -> functionstmt .)
    ID              reduce using rule 14 (instruccion -> functionstmt .)
    BREAK           reduce using rule 14 (instruccion -> functionstmt .)
    CONTINUE        reduce using rule 14 (instruccion -> functionstmt .)
    FUNCTION        reduce using rule 14 (instruccion -> functionstmt .)
    RETURN          reduce using rule 14 (instruccion -> functionstmt .)
    INTERFACE       reduce using rule 14 (instruccion -> functionstmt .)
    TYPEOF          reduce using rule 14 (instruccion -> functionstmt .)
    PARSEINT        reduce using rule 14 (instruccion -> functionstmt .)
    PARSEFLOAT      reduce using rule 14 (instruccion -> functionstmt .)
    VAR             reduce using rule 14 (instruccion -> functionstmt .)
    CONST           reduce using rule 14 (instruccion -> functionstmt .)
    ENTERO          reduce using rule 14 (instruccion -> functionstmt .)
    DECIMAL         reduce using rule 14 (instruccion -> functionstmt .)
    CADENA          reduce using rule 14 (instruccion -> functionstmt .)
    CARACTER        reduce using rule 14 (instruccion -> functionstmt .)
    BOOLEANO        reduce using rule 14 (instruccion -> functionstmt .)
    $end            reduce using rule 14 (instruccion -> functionstmt .)
    LLAVEDER        reduce using rule 14 (instruccion -> functionstmt .)
    DEFAULT         reduce using rule 14 (instruccion -> functionstmt .)
    CASE            reduce using rule 14 (instruccion -> functionstmt .)


state 15

    (15) instruccion -> call .

    CONSOLE         reduce using rule 15 (instruccion -> call .)
    IF              reduce using rule 15 (instruccion -> call .)
    SWITCH          reduce using rule 15 (instruccion -> call .)
    WHILE           reduce using rule 15 (instruccion -> call .)
    FOR             reduce using rule 15 (instruccion -> call .)
    ID              reduce using rule 15 (instruccion -> call .)
    BREAK           reduce using rule 15 (instruccion -> call .)
    CONTINUE        reduce using rule 15 (instruccion -> call .)
    FUNCTION        reduce using rule 15 (instruccion -> call .)
    RETURN          reduce using rule 15 (instruccion -> call .)
    INTERFACE       reduce using rule 15 (instruccion -> call .)
    TYPEOF          reduce using rule 15 (instruccion -> call .)
    PARSEINT        reduce using rule 15 (instruccion -> call .)
    PARSEFLOAT      reduce using rule 15 (instruccion -> call .)
    VAR             reduce using rule 15 (instruccion -> call .)
    CONST           reduce using rule 15 (instruccion -> call .)
    ENTERO          reduce using rule 15 (instruccion -> call .)
    DECIMAL         reduce using rule 15 (instruccion -> call .)
    CADENA          reduce using rule 15 (instruccion -> call .)
    CARACTER        reduce using rule 15 (instruccion -> call .)
    BOOLEANO        reduce using rule 15 (instruccion -> call .)
    $end            reduce using rule 15 (instruccion -> call .)
    LLAVEDER        reduce using rule 15 (instruccion -> call .)
    DEFAULT         reduce using rule 15 (instruccion -> call .)
    CASE            reduce using rule 15 (instruccion -> call .)


state 16

    (16) instruccion -> returnstmt .

    CONSOLE         reduce using rule 16 (instruccion -> returnstmt .)
    IF              reduce using rule 16 (instruccion -> returnstmt .)
    SWITCH          reduce using rule 16 (instruccion -> returnstmt .)
    WHILE           reduce using rule 16 (instruccion -> returnstmt .)
    FOR             reduce using rule 16 (instruccion -> returnstmt .)
    ID              reduce using rule 16 (instruccion -> returnstmt .)
    BREAK           reduce using rule 16 (instruccion -> returnstmt .)
    CONTINUE        reduce using rule 16 (instruccion -> returnstmt .)
    FUNCTION        reduce using rule 16 (instruccion -> returnstmt .)
    RETURN          reduce using rule 16 (instruccion -> returnstmt .)
    INTERFACE       reduce using rule 16 (instruccion -> returnstmt .)
    TYPEOF          reduce using rule 16 (instruccion -> returnstmt .)
    PARSEINT        reduce using rule 16 (instruccion -> returnstmt .)
    PARSEFLOAT      reduce using rule 16 (instruccion -> returnstmt .)
    VAR             reduce using rule 16 (instruccion -> returnstmt .)
    CONST           reduce using rule 16 (instruccion -> returnstmt .)
    ENTERO          reduce using rule 16 (instruccion -> returnstmt .)
    DECIMAL         reduce using rule 16 (instruccion -> returnstmt .)
    CADENA          reduce using rule 16 (instruccion -> returnstmt .)
    CARACTER        reduce using rule 16 (instruccion -> returnstmt .)
    BOOLEANO        reduce using rule 16 (instruccion -> returnstmt .)
    $end            reduce using rule 16 (instruccion -> returnstmt .)
    LLAVEDER        reduce using rule 16 (instruccion -> returnstmt .)
    DEFAULT         reduce using rule 16 (instruccion -> returnstmt .)
    CASE            reduce using rule 16 (instruccion -> returnstmt .)


state 17

    (17) instruccion -> interfacecreation .

    CONSOLE         reduce using rule 17 (instruccion -> interfacecreation .)
    IF              reduce using rule 17 (instruccion -> interfacecreation .)
    SWITCH          reduce using rule 17 (instruccion -> interfacecreation .)
    WHILE           reduce using rule 17 (instruccion -> interfacecreation .)
    FOR             reduce using rule 17 (instruccion -> interfacecreation .)
    ID              reduce using rule 17 (instruccion -> interfacecreation .)
    BREAK           reduce using rule 17 (instruccion -> interfacecreation .)
    CONTINUE        reduce using rule 17 (instruccion -> interfacecreation .)
    FUNCTION        reduce using rule 17 (instruccion -> interfacecreation .)
    RETURN          reduce using rule 17 (instruccion -> interfacecreation .)
    INTERFACE       reduce using rule 17 (instruccion -> interfacecreation .)
    TYPEOF          reduce using rule 17 (instruccion -> interfacecreation .)
    PARSEINT        reduce using rule 17 (instruccion -> interfacecreation .)
    PARSEFLOAT      reduce using rule 17 (instruccion -> interfacecreation .)
    VAR             reduce using rule 17 (instruccion -> interfacecreation .)
    CONST           reduce using rule 17 (instruccion -> interfacecreation .)
    ENTERO          reduce using rule 17 (instruccion -> interfacecreation .)
    DECIMAL         reduce using rule 17 (instruccion -> interfacecreation .)
    CADENA          reduce using rule 17 (instruccion -> interfacecreation .)
    CARACTER        reduce using rule 17 (instruccion -> interfacecreation .)
    BOOLEANO        reduce using rule 17 (instruccion -> interfacecreation .)
    $end            reduce using rule 17 (instruccion -> interfacecreation .)
    LLAVEDER        reduce using rule 17 (instruccion -> interfacecreation .)
    DEFAULT         reduce using rule 17 (instruccion -> interfacecreation .)
    CASE            reduce using rule 17 (instruccion -> interfacecreation .)


state 18

    (18) instruccion -> interdeclaration .

    CONSOLE         reduce using rule 18 (instruccion -> interdeclaration .)
    IF              reduce using rule 18 (instruccion -> interdeclaration .)
    SWITCH          reduce using rule 18 (instruccion -> interdeclaration .)
    WHILE           reduce using rule 18 (instruccion -> interdeclaration .)
    FOR             reduce using rule 18 (instruccion -> interdeclaration .)
    ID              reduce using rule 18 (instruccion -> interdeclaration .)
    BREAK           reduce using rule 18 (instruccion -> interdeclaration .)
    CONTINUE        reduce using rule 18 (instruccion -> interdeclaration .)
    FUNCTION        reduce using rule 18 (instruccion -> interdeclaration .)
    RETURN          reduce using rule 18 (instruccion -> interdeclaration .)
    INTERFACE       reduce using rule 18 (instruccion -> interdeclaration .)
    TYPEOF          reduce using rule 18 (instruccion -> interdeclaration .)
    PARSEINT        reduce using rule 18 (instruccion -> interdeclaration .)
    PARSEFLOAT      reduce using rule 18 (instruccion -> interdeclaration .)
    VAR             reduce using rule 18 (instruccion -> interdeclaration .)
    CONST           reduce using rule 18 (instruccion -> interdeclaration .)
    ENTERO          reduce using rule 18 (instruccion -> interdeclaration .)
    DECIMAL         reduce using rule 18 (instruccion -> interdeclaration .)
    CADENA          reduce using rule 18 (instruccion -> interdeclaration .)
    CARACTER        reduce using rule 18 (instruccion -> interdeclaration .)
    BOOLEANO        reduce using rule 18 (instruccion -> interdeclaration .)
    $end            reduce using rule 18 (instruccion -> interdeclaration .)
    LLAVEDER        reduce using rule 18 (instruccion -> interdeclaration .)
    DEFAULT         reduce using rule 18 (instruccion -> interdeclaration .)
    CASE            reduce using rule 18 (instruccion -> interdeclaration .)


state 19

    (19) instruccion -> listArray . PYC
    (51) assignment -> listArray . IG expression PYC
    (109) listArray -> listArray . PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> listArray . PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> listArray . PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> listArray . PUNTO POP PARIZQ PARDER
    (113) listArray -> listArray . PUNTO JOIN PARIZQ PARDER
    (114) listArray -> listArray . PUNTO PUSH expression
    (115) listArray -> listArray . PUNTO INDEXOF expression
    (116) listArray -> listArray . PUNTO LENGTH
    (117) listArray -> listArray . PUNTO ID
    (118) listArray -> listArray . indexes
    (120) indexes -> . indexes CORIZQ expression CORDER
    (121) indexes -> . CORIZQ expression CORDER

    PYC             shift and go to state 47
    IG              shift and go to state 48
    PUNTO           shift and go to state 49
    CORIZQ          shift and go to state 51

    indexes                        shift and go to state 50

state 20

    (20) instruccion -> typeof . PYC

    PYC             shift and go to state 52


state 21

    (21) instruccion -> parseint . PYC

    PYC             shift and go to state 53


state 22

    (22) instruccion -> parsefloat . PYC

    PYC             shift and go to state 54


state 23

    (23) print -> CONSOLE . PUNTO LOG PARIZQ expressionList PARDER PYC

    PUNTO           shift and go to state 55


state 24

    (24) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else

    PARIZQ          shift and go to state 56


state 25

    (32) switchinstruction -> SWITCH . PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> SWITCH . PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> SWITCH . PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER

    PARIZQ          shift and go to state 57


state 26

    (39) whileinstruction -> WHILE . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 58


state 27

    (40) forinstruction -> FOR . PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 59


state 28

    (41) declaration -> var_const . ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> var_const . ID DOSPTS type dimension IG expression PYC
    (46) interdeclaration -> var_const . ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    ID              shift and go to state 60


state 29

    (43) assignment -> ID . indexes IG expression PYC
    (52) assignment -> ID . IG expression PYC
    (55) call -> ID . PARIZQ expressionList PARDER PYC
    (56) call -> ID . PARIZQ PARDER PYC
    (105) valor -> ID .
    (120) indexes -> . indexes CORIZQ expression CORDER
    (121) indexes -> . CORIZQ expression CORDER

  ! shift/reduce conflict for IG resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
    IG              shift and go to state 62
    PARIZQ          shift and go to state 63
    PYC             reduce using rule 105 (valor -> ID .)
    PUNTO           reduce using rule 105 (valor -> ID .)
    CORIZQ          shift and go to state 51

  ! IG              [ reduce using rule 105 (valor -> ID .) ]
  ! CORIZQ          [ reduce using rule 105 (valor -> ID .) ]

    indexes                        shift and go to state 61

state 30

    (69) breakstmt -> BREAK . PYC

    PYC             shift and go to state 64


state 31

    (70) continuestmt -> CONTINUE . PYC

    PYC             shift and go to state 65


state 32

    (57) functionstmt -> FUNCTION . ID funcparams functype LLAVEIZQ block LLAVEDER

    ID              shift and go to state 66


state 33

    (53) returnstmt -> RETURN . expression PYC
    (54) returnstmt -> RETURN . PYC
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    PYC             shift and go to state 68
    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 67
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 34

    (60) interfacecreation -> INTERFACE . ID LLAVEIZQ attributeList LLAVEDER

    ID              shift and go to state 79


state 35

    (119) listArray -> valor .

    PYC             reduce using rule 119 (listArray -> valor .)
    IG              reduce using rule 119 (listArray -> valor .)
    PUNTO           reduce using rule 119 (listArray -> valor .)
    CORIZQ          reduce using rule 119 (listArray -> valor .)
    MAS             reduce using rule 119 (listArray -> valor .)
    MENOS           reduce using rule 119 (listArray -> valor .)
    POR             reduce using rule 119 (listArray -> valor .)
    DIVIDIDO        reduce using rule 119 (listArray -> valor .)
    MODULO          reduce using rule 119 (listArray -> valor .)
    MAYOR           reduce using rule 119 (listArray -> valor .)
    MENOR           reduce using rule 119 (listArray -> valor .)
    MAYORIG         reduce using rule 119 (listArray -> valor .)
    MENORIG         reduce using rule 119 (listArray -> valor .)
    IGIG            reduce using rule 119 (listArray -> valor .)
    DIF             reduce using rule 119 (listArray -> valor .)
    AND             reduce using rule 119 (listArray -> valor .)
    OR              reduce using rule 119 (listArray -> valor .)
    INCREMENTO      reduce using rule 119 (listArray -> valor .)
    TERN            reduce using rule 119 (listArray -> valor .)
    CORDER          reduce using rule 119 (listArray -> valor .)
    PARDER          reduce using rule 119 (listArray -> valor .)
    COMA            reduce using rule 119 (listArray -> valor .)
    DOSPTS          reduce using rule 119 (listArray -> valor .)
    LLAVEDER        reduce using rule 119 (listArray -> valor .)


state 36

    (125) typeof -> TYPEOF . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 80
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 37

    (126) parseint -> PARSEINT . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 81
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 38

    (127) parsefloat -> PARSEFLOAT . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 82
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 39

    (49) var_const -> VAR .

    ID              reduce using rule 49 (var_const -> VAR .)


state 40

    (50) var_const -> CONST .

    ID              reduce using rule 50 (var_const -> CONST .)


state 41

    (100) valor -> ENTERO .

    PYC             reduce using rule 100 (valor -> ENTERO .)
    IG              reduce using rule 100 (valor -> ENTERO .)
    PUNTO           reduce using rule 100 (valor -> ENTERO .)
    CORIZQ          reduce using rule 100 (valor -> ENTERO .)
    MAS             reduce using rule 100 (valor -> ENTERO .)
    MENOS           reduce using rule 100 (valor -> ENTERO .)
    POR             reduce using rule 100 (valor -> ENTERO .)
    DIVIDIDO        reduce using rule 100 (valor -> ENTERO .)
    MODULO          reduce using rule 100 (valor -> ENTERO .)
    MAYOR           reduce using rule 100 (valor -> ENTERO .)
    MENOR           reduce using rule 100 (valor -> ENTERO .)
    MAYORIG         reduce using rule 100 (valor -> ENTERO .)
    MENORIG         reduce using rule 100 (valor -> ENTERO .)
    IGIG            reduce using rule 100 (valor -> ENTERO .)
    DIF             reduce using rule 100 (valor -> ENTERO .)
    AND             reduce using rule 100 (valor -> ENTERO .)
    OR              reduce using rule 100 (valor -> ENTERO .)
    INCREMENTO      reduce using rule 100 (valor -> ENTERO .)
    TERN            reduce using rule 100 (valor -> ENTERO .)
    CORDER          reduce using rule 100 (valor -> ENTERO .)
    PARDER          reduce using rule 100 (valor -> ENTERO .)
    COMA            reduce using rule 100 (valor -> ENTERO .)
    DOSPTS          reduce using rule 100 (valor -> ENTERO .)
    LLAVEDER        reduce using rule 100 (valor -> ENTERO .)


state 42

    (101) valor -> DECIMAL .

    PYC             reduce using rule 101 (valor -> DECIMAL .)
    IG              reduce using rule 101 (valor -> DECIMAL .)
    PUNTO           reduce using rule 101 (valor -> DECIMAL .)
    CORIZQ          reduce using rule 101 (valor -> DECIMAL .)
    MAS             reduce using rule 101 (valor -> DECIMAL .)
    MENOS           reduce using rule 101 (valor -> DECIMAL .)
    POR             reduce using rule 101 (valor -> DECIMAL .)
    DIVIDIDO        reduce using rule 101 (valor -> DECIMAL .)
    MODULO          reduce using rule 101 (valor -> DECIMAL .)
    MAYOR           reduce using rule 101 (valor -> DECIMAL .)
    MENOR           reduce using rule 101 (valor -> DECIMAL .)
    MAYORIG         reduce using rule 101 (valor -> DECIMAL .)
    MENORIG         reduce using rule 101 (valor -> DECIMAL .)
    IGIG            reduce using rule 101 (valor -> DECIMAL .)
    DIF             reduce using rule 101 (valor -> DECIMAL .)
    AND             reduce using rule 101 (valor -> DECIMAL .)
    OR              reduce using rule 101 (valor -> DECIMAL .)
    INCREMENTO      reduce using rule 101 (valor -> DECIMAL .)
    TERN            reduce using rule 101 (valor -> DECIMAL .)
    CORDER          reduce using rule 101 (valor -> DECIMAL .)
    PARDER          reduce using rule 101 (valor -> DECIMAL .)
    COMA            reduce using rule 101 (valor -> DECIMAL .)
    DOSPTS          reduce using rule 101 (valor -> DECIMAL .)
    LLAVEDER        reduce using rule 101 (valor -> DECIMAL .)


state 43

    (102) valor -> CADENA .

    PYC             reduce using rule 102 (valor -> CADENA .)
    IG              reduce using rule 102 (valor -> CADENA .)
    PUNTO           reduce using rule 102 (valor -> CADENA .)
    CORIZQ          reduce using rule 102 (valor -> CADENA .)
    MAS             reduce using rule 102 (valor -> CADENA .)
    MENOS           reduce using rule 102 (valor -> CADENA .)
    POR             reduce using rule 102 (valor -> CADENA .)
    DIVIDIDO        reduce using rule 102 (valor -> CADENA .)
    MODULO          reduce using rule 102 (valor -> CADENA .)
    MAYOR           reduce using rule 102 (valor -> CADENA .)
    MENOR           reduce using rule 102 (valor -> CADENA .)
    MAYORIG         reduce using rule 102 (valor -> CADENA .)
    MENORIG         reduce using rule 102 (valor -> CADENA .)
    IGIG            reduce using rule 102 (valor -> CADENA .)
    DIF             reduce using rule 102 (valor -> CADENA .)
    AND             reduce using rule 102 (valor -> CADENA .)
    OR              reduce using rule 102 (valor -> CADENA .)
    INCREMENTO      reduce using rule 102 (valor -> CADENA .)
    TERN            reduce using rule 102 (valor -> CADENA .)
    CORDER          reduce using rule 102 (valor -> CADENA .)
    PARDER          reduce using rule 102 (valor -> CADENA .)
    COMA            reduce using rule 102 (valor -> CADENA .)
    DOSPTS          reduce using rule 102 (valor -> CADENA .)
    LLAVEDER        reduce using rule 102 (valor -> CADENA .)


state 44

    (103) valor -> CARACTER .

    PYC             reduce using rule 103 (valor -> CARACTER .)
    IG              reduce using rule 103 (valor -> CARACTER .)
    PUNTO           reduce using rule 103 (valor -> CARACTER .)
    CORIZQ          reduce using rule 103 (valor -> CARACTER .)
    MAS             reduce using rule 103 (valor -> CARACTER .)
    MENOS           reduce using rule 103 (valor -> CARACTER .)
    POR             reduce using rule 103 (valor -> CARACTER .)
    DIVIDIDO        reduce using rule 103 (valor -> CARACTER .)
    MODULO          reduce using rule 103 (valor -> CARACTER .)
    MAYOR           reduce using rule 103 (valor -> CARACTER .)
    MENOR           reduce using rule 103 (valor -> CARACTER .)
    MAYORIG         reduce using rule 103 (valor -> CARACTER .)
    MENORIG         reduce using rule 103 (valor -> CARACTER .)
    IGIG            reduce using rule 103 (valor -> CARACTER .)
    DIF             reduce using rule 103 (valor -> CARACTER .)
    AND             reduce using rule 103 (valor -> CARACTER .)
    OR              reduce using rule 103 (valor -> CARACTER .)
    INCREMENTO      reduce using rule 103 (valor -> CARACTER .)
    TERN            reduce using rule 103 (valor -> CARACTER .)
    CORDER          reduce using rule 103 (valor -> CARACTER .)
    PARDER          reduce using rule 103 (valor -> CARACTER .)
    COMA            reduce using rule 103 (valor -> CARACTER .)
    DOSPTS          reduce using rule 103 (valor -> CARACTER .)
    LLAVEDER        reduce using rule 103 (valor -> CARACTER .)


state 45

    (104) valor -> BOOLEANO .

    PYC             reduce using rule 104 (valor -> BOOLEANO .)
    IG              reduce using rule 104 (valor -> BOOLEANO .)
    PUNTO           reduce using rule 104 (valor -> BOOLEANO .)
    CORIZQ          reduce using rule 104 (valor -> BOOLEANO .)
    MAS             reduce using rule 104 (valor -> BOOLEANO .)
    MENOS           reduce using rule 104 (valor -> BOOLEANO .)
    POR             reduce using rule 104 (valor -> BOOLEANO .)
    DIVIDIDO        reduce using rule 104 (valor -> BOOLEANO .)
    MODULO          reduce using rule 104 (valor -> BOOLEANO .)
    MAYOR           reduce using rule 104 (valor -> BOOLEANO .)
    MENOR           reduce using rule 104 (valor -> BOOLEANO .)
    MAYORIG         reduce using rule 104 (valor -> BOOLEANO .)
    MENORIG         reduce using rule 104 (valor -> BOOLEANO .)
    IGIG            reduce using rule 104 (valor -> BOOLEANO .)
    DIF             reduce using rule 104 (valor -> BOOLEANO .)
    AND             reduce using rule 104 (valor -> BOOLEANO .)
    OR              reduce using rule 104 (valor -> BOOLEANO .)
    INCREMENTO      reduce using rule 104 (valor -> BOOLEANO .)
    TERN            reduce using rule 104 (valor -> BOOLEANO .)
    CORDER          reduce using rule 104 (valor -> BOOLEANO .)
    PARDER          reduce using rule 104 (valor -> BOOLEANO .)
    COMA            reduce using rule 104 (valor -> BOOLEANO .)
    DOSPTS          reduce using rule 104 (valor -> BOOLEANO .)
    LLAVEDER        reduce using rule 104 (valor -> BOOLEANO .)


state 46

    (2) block -> block instruccion .

    CONSOLE         reduce using rule 2 (block -> block instruccion .)
    IF              reduce using rule 2 (block -> block instruccion .)
    SWITCH          reduce using rule 2 (block -> block instruccion .)
    WHILE           reduce using rule 2 (block -> block instruccion .)
    FOR             reduce using rule 2 (block -> block instruccion .)
    ID              reduce using rule 2 (block -> block instruccion .)
    BREAK           reduce using rule 2 (block -> block instruccion .)
    CONTINUE        reduce using rule 2 (block -> block instruccion .)
    FUNCTION        reduce using rule 2 (block -> block instruccion .)
    RETURN          reduce using rule 2 (block -> block instruccion .)
    INTERFACE       reduce using rule 2 (block -> block instruccion .)
    TYPEOF          reduce using rule 2 (block -> block instruccion .)
    PARSEINT        reduce using rule 2 (block -> block instruccion .)
    PARSEFLOAT      reduce using rule 2 (block -> block instruccion .)
    VAR             reduce using rule 2 (block -> block instruccion .)
    CONST           reduce using rule 2 (block -> block instruccion .)
    ENTERO          reduce using rule 2 (block -> block instruccion .)
    DECIMAL         reduce using rule 2 (block -> block instruccion .)
    CADENA          reduce using rule 2 (block -> block instruccion .)
    CARACTER        reduce using rule 2 (block -> block instruccion .)
    BOOLEANO        reduce using rule 2 (block -> block instruccion .)
    $end            reduce using rule 2 (block -> block instruccion .)
    LLAVEDER        reduce using rule 2 (block -> block instruccion .)
    DEFAULT         reduce using rule 2 (block -> block instruccion .)
    CASE            reduce using rule 2 (block -> block instruccion .)


state 47

    (19) instruccion -> listArray PYC .

    CONSOLE         reduce using rule 19 (instruccion -> listArray PYC .)
    IF              reduce using rule 19 (instruccion -> listArray PYC .)
    SWITCH          reduce using rule 19 (instruccion -> listArray PYC .)
    WHILE           reduce using rule 19 (instruccion -> listArray PYC .)
    FOR             reduce using rule 19 (instruccion -> listArray PYC .)
    ID              reduce using rule 19 (instruccion -> listArray PYC .)
    BREAK           reduce using rule 19 (instruccion -> listArray PYC .)
    CONTINUE        reduce using rule 19 (instruccion -> listArray PYC .)
    FUNCTION        reduce using rule 19 (instruccion -> listArray PYC .)
    RETURN          reduce using rule 19 (instruccion -> listArray PYC .)
    INTERFACE       reduce using rule 19 (instruccion -> listArray PYC .)
    TYPEOF          reduce using rule 19 (instruccion -> listArray PYC .)
    PARSEINT        reduce using rule 19 (instruccion -> listArray PYC .)
    PARSEFLOAT      reduce using rule 19 (instruccion -> listArray PYC .)
    VAR             reduce using rule 19 (instruccion -> listArray PYC .)
    CONST           reduce using rule 19 (instruccion -> listArray PYC .)
    ENTERO          reduce using rule 19 (instruccion -> listArray PYC .)
    DECIMAL         reduce using rule 19 (instruccion -> listArray PYC .)
    CADENA          reduce using rule 19 (instruccion -> listArray PYC .)
    CARACTER        reduce using rule 19 (instruccion -> listArray PYC .)
    BOOLEANO        reduce using rule 19 (instruccion -> listArray PYC .)
    $end            reduce using rule 19 (instruccion -> listArray PYC .)
    LLAVEDER        reduce using rule 19 (instruccion -> listArray PYC .)
    DEFAULT         reduce using rule 19 (instruccion -> listArray PYC .)
    CASE            reduce using rule 19 (instruccion -> listArray PYC .)


state 48

    (51) assignment -> listArray IG . expression PYC
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    listArray                      shift and go to state 73
    expression                     shift and go to state 83
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 49

    (109) listArray -> listArray PUNTO . TOSTRING PARIZQ PARDER
    (110) listArray -> listArray PUNTO . TOLOWERCASE PARIZQ PARDER
    (111) listArray -> listArray PUNTO . TOUPPERCASE PARIZQ PARDER
    (112) listArray -> listArray PUNTO . POP PARIZQ PARDER
    (113) listArray -> listArray PUNTO . JOIN PARIZQ PARDER
    (114) listArray -> listArray PUNTO . PUSH expression
    (115) listArray -> listArray PUNTO . INDEXOF expression
    (116) listArray -> listArray PUNTO . LENGTH
    (117) listArray -> listArray PUNTO . ID

    TOSTRING        shift and go to state 84
    TOLOWERCASE     shift and go to state 85
    TOUPPERCASE     shift and go to state 86
    POP             shift and go to state 87
    JOIN            shift and go to state 88
    PUSH            shift and go to state 89
    INDEXOF         shift and go to state 90
    LENGTH          shift and go to state 91
    ID              shift and go to state 92


state 50

    (118) listArray -> listArray indexes .
    (120) indexes -> indexes . CORIZQ expression CORDER

  ! shift/reduce conflict for CORIZQ resolved as shift
    PYC             reduce using rule 118 (listArray -> listArray indexes .)
    IG              reduce using rule 118 (listArray -> listArray indexes .)
    PUNTO           reduce using rule 118 (listArray -> listArray indexes .)
    MAS             reduce using rule 118 (listArray -> listArray indexes .)
    MENOS           reduce using rule 118 (listArray -> listArray indexes .)
    POR             reduce using rule 118 (listArray -> listArray indexes .)
    DIVIDIDO        reduce using rule 118 (listArray -> listArray indexes .)
    MODULO          reduce using rule 118 (listArray -> listArray indexes .)
    MAYOR           reduce using rule 118 (listArray -> listArray indexes .)
    MENOR           reduce using rule 118 (listArray -> listArray indexes .)
    MAYORIG         reduce using rule 118 (listArray -> listArray indexes .)
    MENORIG         reduce using rule 118 (listArray -> listArray indexes .)
    IGIG            reduce using rule 118 (listArray -> listArray indexes .)
    DIF             reduce using rule 118 (listArray -> listArray indexes .)
    AND             reduce using rule 118 (listArray -> listArray indexes .)
    OR              reduce using rule 118 (listArray -> listArray indexes .)
    INCREMENTO      reduce using rule 118 (listArray -> listArray indexes .)
    TERN            reduce using rule 118 (listArray -> listArray indexes .)
    CORDER          reduce using rule 118 (listArray -> listArray indexes .)
    PARDER          reduce using rule 118 (listArray -> listArray indexes .)
    COMA            reduce using rule 118 (listArray -> listArray indexes .)
    DOSPTS          reduce using rule 118 (listArray -> listArray indexes .)
    LLAVEDER        reduce using rule 118 (listArray -> listArray indexes .)
    CORIZQ          shift and go to state 93

  ! CORIZQ          [ reduce using rule 118 (listArray -> listArray indexes .) ]


state 51

    (121) indexes -> CORIZQ . expression CORDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 94
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 52

    (20) instruccion -> typeof PYC .

    CONSOLE         reduce using rule 20 (instruccion -> typeof PYC .)
    IF              reduce using rule 20 (instruccion -> typeof PYC .)
    SWITCH          reduce using rule 20 (instruccion -> typeof PYC .)
    WHILE           reduce using rule 20 (instruccion -> typeof PYC .)
    FOR             reduce using rule 20 (instruccion -> typeof PYC .)
    ID              reduce using rule 20 (instruccion -> typeof PYC .)
    BREAK           reduce using rule 20 (instruccion -> typeof PYC .)
    CONTINUE        reduce using rule 20 (instruccion -> typeof PYC .)
    FUNCTION        reduce using rule 20 (instruccion -> typeof PYC .)
    RETURN          reduce using rule 20 (instruccion -> typeof PYC .)
    INTERFACE       reduce using rule 20 (instruccion -> typeof PYC .)
    TYPEOF          reduce using rule 20 (instruccion -> typeof PYC .)
    PARSEINT        reduce using rule 20 (instruccion -> typeof PYC .)
    PARSEFLOAT      reduce using rule 20 (instruccion -> typeof PYC .)
    VAR             reduce using rule 20 (instruccion -> typeof PYC .)
    CONST           reduce using rule 20 (instruccion -> typeof PYC .)
    ENTERO          reduce using rule 20 (instruccion -> typeof PYC .)
    DECIMAL         reduce using rule 20 (instruccion -> typeof PYC .)
    CADENA          reduce using rule 20 (instruccion -> typeof PYC .)
    CARACTER        reduce using rule 20 (instruccion -> typeof PYC .)
    BOOLEANO        reduce using rule 20 (instruccion -> typeof PYC .)
    $end            reduce using rule 20 (instruccion -> typeof PYC .)
    LLAVEDER        reduce using rule 20 (instruccion -> typeof PYC .)
    DEFAULT         reduce using rule 20 (instruccion -> typeof PYC .)
    CASE            reduce using rule 20 (instruccion -> typeof PYC .)


state 53

    (21) instruccion -> parseint PYC .

    CONSOLE         reduce using rule 21 (instruccion -> parseint PYC .)
    IF              reduce using rule 21 (instruccion -> parseint PYC .)
    SWITCH          reduce using rule 21 (instruccion -> parseint PYC .)
    WHILE           reduce using rule 21 (instruccion -> parseint PYC .)
    FOR             reduce using rule 21 (instruccion -> parseint PYC .)
    ID              reduce using rule 21 (instruccion -> parseint PYC .)
    BREAK           reduce using rule 21 (instruccion -> parseint PYC .)
    CONTINUE        reduce using rule 21 (instruccion -> parseint PYC .)
    FUNCTION        reduce using rule 21 (instruccion -> parseint PYC .)
    RETURN          reduce using rule 21 (instruccion -> parseint PYC .)
    INTERFACE       reduce using rule 21 (instruccion -> parseint PYC .)
    TYPEOF          reduce using rule 21 (instruccion -> parseint PYC .)
    PARSEINT        reduce using rule 21 (instruccion -> parseint PYC .)
    PARSEFLOAT      reduce using rule 21 (instruccion -> parseint PYC .)
    VAR             reduce using rule 21 (instruccion -> parseint PYC .)
    CONST           reduce using rule 21 (instruccion -> parseint PYC .)
    ENTERO          reduce using rule 21 (instruccion -> parseint PYC .)
    DECIMAL         reduce using rule 21 (instruccion -> parseint PYC .)
    CADENA          reduce using rule 21 (instruccion -> parseint PYC .)
    CARACTER        reduce using rule 21 (instruccion -> parseint PYC .)
    BOOLEANO        reduce using rule 21 (instruccion -> parseint PYC .)
    $end            reduce using rule 21 (instruccion -> parseint PYC .)
    LLAVEDER        reduce using rule 21 (instruccion -> parseint PYC .)
    DEFAULT         reduce using rule 21 (instruccion -> parseint PYC .)
    CASE            reduce using rule 21 (instruccion -> parseint PYC .)


state 54

    (22) instruccion -> parsefloat PYC .

    CONSOLE         reduce using rule 22 (instruccion -> parsefloat PYC .)
    IF              reduce using rule 22 (instruccion -> parsefloat PYC .)
    SWITCH          reduce using rule 22 (instruccion -> parsefloat PYC .)
    WHILE           reduce using rule 22 (instruccion -> parsefloat PYC .)
    FOR             reduce using rule 22 (instruccion -> parsefloat PYC .)
    ID              reduce using rule 22 (instruccion -> parsefloat PYC .)
    BREAK           reduce using rule 22 (instruccion -> parsefloat PYC .)
    CONTINUE        reduce using rule 22 (instruccion -> parsefloat PYC .)
    FUNCTION        reduce using rule 22 (instruccion -> parsefloat PYC .)
    RETURN          reduce using rule 22 (instruccion -> parsefloat PYC .)
    INTERFACE       reduce using rule 22 (instruccion -> parsefloat PYC .)
    TYPEOF          reduce using rule 22 (instruccion -> parsefloat PYC .)
    PARSEINT        reduce using rule 22 (instruccion -> parsefloat PYC .)
    PARSEFLOAT      reduce using rule 22 (instruccion -> parsefloat PYC .)
    VAR             reduce using rule 22 (instruccion -> parsefloat PYC .)
    CONST           reduce using rule 22 (instruccion -> parsefloat PYC .)
    ENTERO          reduce using rule 22 (instruccion -> parsefloat PYC .)
    DECIMAL         reduce using rule 22 (instruccion -> parsefloat PYC .)
    CADENA          reduce using rule 22 (instruccion -> parsefloat PYC .)
    CARACTER        reduce using rule 22 (instruccion -> parsefloat PYC .)
    BOOLEANO        reduce using rule 22 (instruccion -> parsefloat PYC .)
    $end            reduce using rule 22 (instruccion -> parsefloat PYC .)
    LLAVEDER        reduce using rule 22 (instruccion -> parsefloat PYC .)
    DEFAULT         reduce using rule 22 (instruccion -> parsefloat PYC .)
    CASE            reduce using rule 22 (instruccion -> parsefloat PYC .)


state 55

    (23) print -> CONSOLE PUNTO . LOG PARIZQ expressionList PARDER PYC

    LOG             shift and go to state 95


state 56

    (24) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 96
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 57

    (32) switchinstruction -> SWITCH PARIZQ . expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> SWITCH PARIZQ . expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> SWITCH PARIZQ . expression PARDER LLAVEIZQ caseList default LLAVEDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 97
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 58

    (39) whileinstruction -> WHILE PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 98
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 59

    (40) forinstruction -> FOR PARIZQ . declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (49) var_const -> . VAR
    (50) var_const -> . CONST

    VAR             shift and go to state 39
    CONST           shift and go to state 40

    declaration                    shift and go to state 99
    var_const                      shift and go to state 100

state 60

    (41) declaration -> var_const ID . DOSPTS type IG expression PYC
    (42) arraydeclaration -> var_const ID . DOSPTS type dimension IG expression PYC
    (46) interdeclaration -> var_const ID . DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC

    DOSPTS          shift and go to state 101


state 61

    (43) assignment -> ID indexes . IG expression PYC
    (120) indexes -> indexes . CORIZQ expression CORDER

    IG              shift and go to state 102
    CORIZQ          shift and go to state 93


state 62

    (52) assignment -> ID IG . expression PYC
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 103
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 63

    (55) call -> ID PARIZQ . expressionList PARDER PYC
    (56) call -> ID PARIZQ . PARDER PYC
    (77) expressionList -> . expressionList COMA expression
    (78) expressionList -> . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    PARDER          shift and go to state 105
    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expressionList                 shift and go to state 104
    expression                     shift and go to state 106
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 64

    (69) breakstmt -> BREAK PYC .

    CONSOLE         reduce using rule 69 (breakstmt -> BREAK PYC .)
    IF              reduce using rule 69 (breakstmt -> BREAK PYC .)
    SWITCH          reduce using rule 69 (breakstmt -> BREAK PYC .)
    WHILE           reduce using rule 69 (breakstmt -> BREAK PYC .)
    FOR             reduce using rule 69 (breakstmt -> BREAK PYC .)
    ID              reduce using rule 69 (breakstmt -> BREAK PYC .)
    BREAK           reduce using rule 69 (breakstmt -> BREAK PYC .)
    CONTINUE        reduce using rule 69 (breakstmt -> BREAK PYC .)
    FUNCTION        reduce using rule 69 (breakstmt -> BREAK PYC .)
    RETURN          reduce using rule 69 (breakstmt -> BREAK PYC .)
    INTERFACE       reduce using rule 69 (breakstmt -> BREAK PYC .)
    TYPEOF          reduce using rule 69 (breakstmt -> BREAK PYC .)
    PARSEINT        reduce using rule 69 (breakstmt -> BREAK PYC .)
    PARSEFLOAT      reduce using rule 69 (breakstmt -> BREAK PYC .)
    VAR             reduce using rule 69 (breakstmt -> BREAK PYC .)
    CONST           reduce using rule 69 (breakstmt -> BREAK PYC .)
    ENTERO          reduce using rule 69 (breakstmt -> BREAK PYC .)
    DECIMAL         reduce using rule 69 (breakstmt -> BREAK PYC .)
    CADENA          reduce using rule 69 (breakstmt -> BREAK PYC .)
    CARACTER        reduce using rule 69 (breakstmt -> BREAK PYC .)
    BOOLEANO        reduce using rule 69 (breakstmt -> BREAK PYC .)
    $end            reduce using rule 69 (breakstmt -> BREAK PYC .)
    LLAVEDER        reduce using rule 69 (breakstmt -> BREAK PYC .)
    DEFAULT         reduce using rule 69 (breakstmt -> BREAK PYC .)
    CASE            reduce using rule 69 (breakstmt -> BREAK PYC .)


state 65

    (70) continuestmt -> CONTINUE PYC .

    CONSOLE         reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    IF              reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    SWITCH          reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    WHILE           reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    FOR             reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    ID              reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    BREAK           reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    CONTINUE        reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    FUNCTION        reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    RETURN          reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    INTERFACE       reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    TYPEOF          reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    PARSEINT        reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    PARSEFLOAT      reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    VAR             reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    CONST           reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    ENTERO          reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    DECIMAL         reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    CADENA          reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    CARACTER        reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    BOOLEANO        reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    $end            reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    LLAVEDER        reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    DEFAULT         reduce using rule 70 (continuestmt -> CONTINUE PYC .)
    CASE            reduce using rule 70 (continuestmt -> CONTINUE PYC .)


state 66

    (57) functionstmt -> FUNCTION ID . funcparams functype LLAVEIZQ block LLAVEDER
    (58) funcparams -> . PARIZQ paramsList PARDER
    (59) funcparams -> . PARIZQ PARDER

    PARIZQ          shift and go to state 108

    funcparams                     shift and go to state 107

state 67

    (53) returnstmt -> RETURN expression . PYC
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 68

    (54) returnstmt -> RETURN PYC .

    CONSOLE         reduce using rule 54 (returnstmt -> RETURN PYC .)
    IF              reduce using rule 54 (returnstmt -> RETURN PYC .)
    SWITCH          reduce using rule 54 (returnstmt -> RETURN PYC .)
    WHILE           reduce using rule 54 (returnstmt -> RETURN PYC .)
    FOR             reduce using rule 54 (returnstmt -> RETURN PYC .)
    ID              reduce using rule 54 (returnstmt -> RETURN PYC .)
    BREAK           reduce using rule 54 (returnstmt -> RETURN PYC .)
    CONTINUE        reduce using rule 54 (returnstmt -> RETURN PYC .)
    FUNCTION        reduce using rule 54 (returnstmt -> RETURN PYC .)
    RETURN          reduce using rule 54 (returnstmt -> RETURN PYC .)
    INTERFACE       reduce using rule 54 (returnstmt -> RETURN PYC .)
    TYPEOF          reduce using rule 54 (returnstmt -> RETURN PYC .)
    PARSEINT        reduce using rule 54 (returnstmt -> RETURN PYC .)
    PARSEFLOAT      reduce using rule 54 (returnstmt -> RETURN PYC .)
    VAR             reduce using rule 54 (returnstmt -> RETURN PYC .)
    CONST           reduce using rule 54 (returnstmt -> RETURN PYC .)
    ENTERO          reduce using rule 54 (returnstmt -> RETURN PYC .)
    DECIMAL         reduce using rule 54 (returnstmt -> RETURN PYC .)
    CADENA          reduce using rule 54 (returnstmt -> RETURN PYC .)
    CARACTER        reduce using rule 54 (returnstmt -> RETURN PYC .)
    BOOLEANO        reduce using rule 54 (returnstmt -> RETURN PYC .)
    $end            reduce using rule 54 (returnstmt -> RETURN PYC .)
    LLAVEDER        reduce using rule 54 (returnstmt -> RETURN PYC .)
    DEFAULT         reduce using rule 54 (returnstmt -> RETURN PYC .)
    CASE            reduce using rule 54 (returnstmt -> RETURN PYC .)


state 69

    (79) expression -> OBJECT . PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> OBJECT . PUNTO VALUES PARIZQ expression PARDER

    PUNTO           shift and go to state 125


state 70

    (97) expression -> PARIZQ . expression PARDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 126
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 71

    (95) expression -> MENOS . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 127
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 72

    (94) expression -> NOT . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 128
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 73

    (99) expression -> listArray .
    (109) listArray -> listArray . PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> listArray . PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> listArray . PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> listArray . PUNTO POP PARIZQ PARDER
    (113) listArray -> listArray . PUNTO JOIN PARIZQ PARDER
    (114) listArray -> listArray . PUNTO PUSH expression
    (115) listArray -> listArray . PUNTO INDEXOF expression
    (116) listArray -> listArray . PUNTO LENGTH
    (117) listArray -> listArray . PUNTO ID
    (118) listArray -> listArray . indexes
    (120) indexes -> . indexes CORIZQ expression CORDER
    (121) indexes -> . CORIZQ expression CORDER

  ! shift/reduce conflict for PUNTO resolved as shift
  ! shift/reduce conflict for CORIZQ resolved as shift
    PYC             reduce using rule 99 (expression -> listArray .)
    MAS             reduce using rule 99 (expression -> listArray .)
    MENOS           reduce using rule 99 (expression -> listArray .)
    POR             reduce using rule 99 (expression -> listArray .)
    DIVIDIDO        reduce using rule 99 (expression -> listArray .)
    MODULO          reduce using rule 99 (expression -> listArray .)
    MAYOR           reduce using rule 99 (expression -> listArray .)
    MENOR           reduce using rule 99 (expression -> listArray .)
    MAYORIG         reduce using rule 99 (expression -> listArray .)
    MENORIG         reduce using rule 99 (expression -> listArray .)
    IGIG            reduce using rule 99 (expression -> listArray .)
    DIF             reduce using rule 99 (expression -> listArray .)
    AND             reduce using rule 99 (expression -> listArray .)
    OR              reduce using rule 99 (expression -> listArray .)
    INCREMENTO      reduce using rule 99 (expression -> listArray .)
    TERN            reduce using rule 99 (expression -> listArray .)
    CORDER          reduce using rule 99 (expression -> listArray .)
    PARDER          reduce using rule 99 (expression -> listArray .)
    COMA            reduce using rule 99 (expression -> listArray .)
    IG              reduce using rule 99 (expression -> listArray .)
    DOSPTS          reduce using rule 99 (expression -> listArray .)
    LLAVEDER        reduce using rule 99 (expression -> listArray .)
    PUNTO           shift and go to state 49
    CORIZQ          shift and go to state 51

  ! PUNTO           [ reduce using rule 99 (expression -> listArray .) ]
  ! CORIZQ          [ reduce using rule 99 (expression -> listArray .) ]

    indexes                        shift and go to state 50

state 74

    (106) expression -> CORIZQ . expressionList CORDER
    (77) expressionList -> . expressionList COMA expression
    (78) expressionList -> . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expressionList                 shift and go to state 129
    expression                     shift and go to state 106
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 75

    (107) expression -> ID . PARIZQ expressionList PARDER
    (108) expression -> ID . PARIZQ PARDER
    (105) valor -> ID .

    PARIZQ          shift and go to state 130
    PUNTO           reduce using rule 105 (valor -> ID .)
    CORIZQ          reduce using rule 105 (valor -> ID .)
    PYC             reduce using rule 105 (valor -> ID .)
    MAS             reduce using rule 105 (valor -> ID .)
    MENOS           reduce using rule 105 (valor -> ID .)
    POR             reduce using rule 105 (valor -> ID .)
    DIVIDIDO        reduce using rule 105 (valor -> ID .)
    MODULO          reduce using rule 105 (valor -> ID .)
    MAYOR           reduce using rule 105 (valor -> ID .)
    MENOR           reduce using rule 105 (valor -> ID .)
    MAYORIG         reduce using rule 105 (valor -> ID .)
    MENORIG         reduce using rule 105 (valor -> ID .)
    IGIG            reduce using rule 105 (valor -> ID .)
    DIF             reduce using rule 105 (valor -> ID .)
    AND             reduce using rule 105 (valor -> ID .)
    OR              reduce using rule 105 (valor -> ID .)
    INCREMENTO      reduce using rule 105 (valor -> ID .)
    TERN            reduce using rule 105 (valor -> ID .)
    CORDER          reduce using rule 105 (valor -> ID .)
    PARDER          reduce using rule 105 (valor -> ID .)
    COMA            reduce using rule 105 (valor -> ID .)
    IG              reduce using rule 105 (valor -> ID .)
    DOSPTS          reduce using rule 105 (valor -> ID .)
    LLAVEDER        reduce using rule 105 (valor -> ID .)


state 76

    (122) expression -> typeof .

    PYC             reduce using rule 122 (expression -> typeof .)
    MAS             reduce using rule 122 (expression -> typeof .)
    MENOS           reduce using rule 122 (expression -> typeof .)
    POR             reduce using rule 122 (expression -> typeof .)
    DIVIDIDO        reduce using rule 122 (expression -> typeof .)
    MODULO          reduce using rule 122 (expression -> typeof .)
    MAYOR           reduce using rule 122 (expression -> typeof .)
    MENOR           reduce using rule 122 (expression -> typeof .)
    MAYORIG         reduce using rule 122 (expression -> typeof .)
    MENORIG         reduce using rule 122 (expression -> typeof .)
    IGIG            reduce using rule 122 (expression -> typeof .)
    DIF             reduce using rule 122 (expression -> typeof .)
    AND             reduce using rule 122 (expression -> typeof .)
    OR              reduce using rule 122 (expression -> typeof .)
    INCREMENTO      reduce using rule 122 (expression -> typeof .)
    TERN            reduce using rule 122 (expression -> typeof .)
    CORDER          reduce using rule 122 (expression -> typeof .)
    PARDER          reduce using rule 122 (expression -> typeof .)
    COMA            reduce using rule 122 (expression -> typeof .)
    IG              reduce using rule 122 (expression -> typeof .)
    PUNTO           reduce using rule 122 (expression -> typeof .)
    CORIZQ          reduce using rule 122 (expression -> typeof .)
    DOSPTS          reduce using rule 122 (expression -> typeof .)
    LLAVEDER        reduce using rule 122 (expression -> typeof .)


state 77

    (123) expression -> parseint .

    PYC             reduce using rule 123 (expression -> parseint .)
    MAS             reduce using rule 123 (expression -> parseint .)
    MENOS           reduce using rule 123 (expression -> parseint .)
    POR             reduce using rule 123 (expression -> parseint .)
    DIVIDIDO        reduce using rule 123 (expression -> parseint .)
    MODULO          reduce using rule 123 (expression -> parseint .)
    MAYOR           reduce using rule 123 (expression -> parseint .)
    MENOR           reduce using rule 123 (expression -> parseint .)
    MAYORIG         reduce using rule 123 (expression -> parseint .)
    MENORIG         reduce using rule 123 (expression -> parseint .)
    IGIG            reduce using rule 123 (expression -> parseint .)
    DIF             reduce using rule 123 (expression -> parseint .)
    AND             reduce using rule 123 (expression -> parseint .)
    OR              reduce using rule 123 (expression -> parseint .)
    INCREMENTO      reduce using rule 123 (expression -> parseint .)
    TERN            reduce using rule 123 (expression -> parseint .)
    CORDER          reduce using rule 123 (expression -> parseint .)
    PARDER          reduce using rule 123 (expression -> parseint .)
    COMA            reduce using rule 123 (expression -> parseint .)
    IG              reduce using rule 123 (expression -> parseint .)
    PUNTO           reduce using rule 123 (expression -> parseint .)
    CORIZQ          reduce using rule 123 (expression -> parseint .)
    DOSPTS          reduce using rule 123 (expression -> parseint .)
    LLAVEDER        reduce using rule 123 (expression -> parseint .)


state 78

    (124) expression -> parsefloat .

    PYC             reduce using rule 124 (expression -> parsefloat .)
    MAS             reduce using rule 124 (expression -> parsefloat .)
    MENOS           reduce using rule 124 (expression -> parsefloat .)
    POR             reduce using rule 124 (expression -> parsefloat .)
    DIVIDIDO        reduce using rule 124 (expression -> parsefloat .)
    MODULO          reduce using rule 124 (expression -> parsefloat .)
    MAYOR           reduce using rule 124 (expression -> parsefloat .)
    MENOR           reduce using rule 124 (expression -> parsefloat .)
    MAYORIG         reduce using rule 124 (expression -> parsefloat .)
    MENORIG         reduce using rule 124 (expression -> parsefloat .)
    IGIG            reduce using rule 124 (expression -> parsefloat .)
    DIF             reduce using rule 124 (expression -> parsefloat .)
    AND             reduce using rule 124 (expression -> parsefloat .)
    OR              reduce using rule 124 (expression -> parsefloat .)
    INCREMENTO      reduce using rule 124 (expression -> parsefloat .)
    TERN            reduce using rule 124 (expression -> parsefloat .)
    CORDER          reduce using rule 124 (expression -> parsefloat .)
    PARDER          reduce using rule 124 (expression -> parsefloat .)
    COMA            reduce using rule 124 (expression -> parsefloat .)
    IG              reduce using rule 124 (expression -> parsefloat .)
    PUNTO           reduce using rule 124 (expression -> parsefloat .)
    CORIZQ          reduce using rule 124 (expression -> parsefloat .)
    DOSPTS          reduce using rule 124 (expression -> parsefloat .)
    LLAVEDER        reduce using rule 124 (expression -> parsefloat .)


state 79

    (60) interfacecreation -> INTERFACE ID . LLAVEIZQ attributeList LLAVEDER

    LLAVEIZQ        shift and go to state 131


state 80

    (125) typeof -> TYPEOF expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 125 (typeof -> TYPEOF expression .)
    CORDER          reduce using rule 125 (typeof -> TYPEOF expression .)
    PARDER          reduce using rule 125 (typeof -> TYPEOF expression .)
    COMA            reduce using rule 125 (typeof -> TYPEOF expression .)
    IG              reduce using rule 125 (typeof -> TYPEOF expression .)
    PUNTO           reduce using rule 125 (typeof -> TYPEOF expression .)
    CORIZQ          reduce using rule 125 (typeof -> TYPEOF expression .)
    DOSPTS          reduce using rule 125 (typeof -> TYPEOF expression .)
    LLAVEDER        reduce using rule 125 (typeof -> TYPEOF expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124

  ! MAS             [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! MENOS           [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! POR             [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! DIVIDIDO        [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! MODULO          [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! MAYOR           [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! MENOR           [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! MAYORIG         [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! MENORIG         [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! IGIG            [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! DIF             [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! AND             [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! OR              [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! INCREMENTO      [ reduce using rule 125 (typeof -> TYPEOF expression .) ]
  ! TERN            [ reduce using rule 125 (typeof -> TYPEOF expression .) ]


state 81

    (126) parseint -> PARSEINT expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 126 (parseint -> PARSEINT expression .)
    CORDER          reduce using rule 126 (parseint -> PARSEINT expression .)
    PARDER          reduce using rule 126 (parseint -> PARSEINT expression .)
    COMA            reduce using rule 126 (parseint -> PARSEINT expression .)
    IG              reduce using rule 126 (parseint -> PARSEINT expression .)
    PUNTO           reduce using rule 126 (parseint -> PARSEINT expression .)
    CORIZQ          reduce using rule 126 (parseint -> PARSEINT expression .)
    DOSPTS          reduce using rule 126 (parseint -> PARSEINT expression .)
    LLAVEDER        reduce using rule 126 (parseint -> PARSEINT expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124

  ! MAS             [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! MENOS           [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! POR             [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! DIVIDIDO        [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! MODULO          [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! MAYOR           [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! MENOR           [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! MAYORIG         [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! MENORIG         [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! IGIG            [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! DIF             [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! AND             [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! OR              [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! INCREMENTO      [ reduce using rule 126 (parseint -> PARSEINT expression .) ]
  ! TERN            [ reduce using rule 126 (parseint -> PARSEINT expression .) ]


state 82

    (127) parsefloat -> PARSEFLOAT expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    CORDER          reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    PARDER          reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    COMA            reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    IG              reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    PUNTO           reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    CORIZQ          reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    DOSPTS          reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    LLAVEDER        reduce using rule 127 (parsefloat -> PARSEFLOAT expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124

  ! MAS             [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! MENOS           [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! POR             [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! DIVIDIDO        [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! MODULO          [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! MAYOR           [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! MENOR           [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! MAYORIG         [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! MENORIG         [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! IGIG            [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! DIF             [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! AND             [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! OR              [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! INCREMENTO      [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]
  ! TERN            [ reduce using rule 127 (parsefloat -> PARSEFLOAT expression .) ]


state 83

    (51) assignment -> listArray IG expression . PYC
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 132
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 84

    (109) listArray -> listArray PUNTO TOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 133


state 85

    (110) listArray -> listArray PUNTO TOLOWERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 134


state 86

    (111) listArray -> listArray PUNTO TOUPPERCASE . PARIZQ PARDER

    PARIZQ          shift and go to state 135


state 87

    (112) listArray -> listArray PUNTO POP . PARIZQ PARDER

    PARIZQ          shift and go to state 136


state 88

    (113) listArray -> listArray PUNTO JOIN . PARIZQ PARDER

    PARIZQ          shift and go to state 137


state 89

    (114) listArray -> listArray PUNTO PUSH . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    listArray                      shift and go to state 73
    expression                     shift and go to state 138
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 90

    (115) listArray -> listArray PUNTO INDEXOF . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    listArray                      shift and go to state 73
    expression                     shift and go to state 139
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 91

    (116) listArray -> listArray PUNTO LENGTH .

    PYC             reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    IG              reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    PUNTO           reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    CORIZQ          reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    MAS             reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    MENOS           reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    POR             reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    DIVIDIDO        reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    MODULO          reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    MAYOR           reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    MENOR           reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    MAYORIG         reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    MENORIG         reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    IGIG            reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    DIF             reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    AND             reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    OR              reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    INCREMENTO      reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    TERN            reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    CORDER          reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    PARDER          reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    COMA            reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    DOSPTS          reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)
    LLAVEDER        reduce using rule 116 (listArray -> listArray PUNTO LENGTH .)


state 92

    (117) listArray -> listArray PUNTO ID .

    PYC             reduce using rule 117 (listArray -> listArray PUNTO ID .)
    IG              reduce using rule 117 (listArray -> listArray PUNTO ID .)
    PUNTO           reduce using rule 117 (listArray -> listArray PUNTO ID .)
    CORIZQ          reduce using rule 117 (listArray -> listArray PUNTO ID .)
    MAS             reduce using rule 117 (listArray -> listArray PUNTO ID .)
    MENOS           reduce using rule 117 (listArray -> listArray PUNTO ID .)
    POR             reduce using rule 117 (listArray -> listArray PUNTO ID .)
    DIVIDIDO        reduce using rule 117 (listArray -> listArray PUNTO ID .)
    MODULO          reduce using rule 117 (listArray -> listArray PUNTO ID .)
    MAYOR           reduce using rule 117 (listArray -> listArray PUNTO ID .)
    MENOR           reduce using rule 117 (listArray -> listArray PUNTO ID .)
    MAYORIG         reduce using rule 117 (listArray -> listArray PUNTO ID .)
    MENORIG         reduce using rule 117 (listArray -> listArray PUNTO ID .)
    IGIG            reduce using rule 117 (listArray -> listArray PUNTO ID .)
    DIF             reduce using rule 117 (listArray -> listArray PUNTO ID .)
    AND             reduce using rule 117 (listArray -> listArray PUNTO ID .)
    OR              reduce using rule 117 (listArray -> listArray PUNTO ID .)
    INCREMENTO      reduce using rule 117 (listArray -> listArray PUNTO ID .)
    TERN            reduce using rule 117 (listArray -> listArray PUNTO ID .)
    CORDER          reduce using rule 117 (listArray -> listArray PUNTO ID .)
    PARDER          reduce using rule 117 (listArray -> listArray PUNTO ID .)
    COMA            reduce using rule 117 (listArray -> listArray PUNTO ID .)
    DOSPTS          reduce using rule 117 (listArray -> listArray PUNTO ID .)
    LLAVEDER        reduce using rule 117 (listArray -> listArray PUNTO ID .)


state 93

    (120) indexes -> indexes CORIZQ . expression CORDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 140
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 94

    (121) indexes -> CORIZQ expression . CORDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    CORDER          shift and go to state 141
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 95

    (23) print -> CONSOLE PUNTO LOG . PARIZQ expressionList PARDER PYC

    PARIZQ          shift and go to state 142


state 96

    (24) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 143
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 97

    (32) switchinstruction -> SWITCH PARIZQ expression . PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> SWITCH PARIZQ expression . PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> SWITCH PARIZQ expression . PARDER LLAVEIZQ caseList default LLAVEDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 144
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 98

    (39) whileinstruction -> WHILE PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 145
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 99

    (40) forinstruction -> FOR PARIZQ declaration . expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 146
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 100

    (41) declaration -> var_const . ID DOSPTS type IG expression PYC

    ID              shift and go to state 147


state 101

    (41) declaration -> var_const ID DOSPTS . type IG expression PYC
    (42) arraydeclaration -> var_const ID DOSPTS . type dimension IG expression PYC
    (46) interdeclaration -> var_const ID DOSPTS . ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (71) type -> . NUMBER
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . CHAR
    (75) type -> . BOOLEAN
    (76) type -> . ID

    ID              shift and go to state 148
    NUMBER          shift and go to state 150
    FLOAT           shift and go to state 151
    STRING          shift and go to state 152
    CHAR            shift and go to state 153
    BOOLEAN         shift and go to state 154

    type                           shift and go to state 149

state 102

    (43) assignment -> ID indexes IG . expression PYC
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 155
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 103

    (52) assignment -> ID IG expression . PYC
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 156
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 104

    (55) call -> ID PARIZQ expressionList . PARDER PYC
    (77) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 157
    COMA            shift and go to state 158


state 105

    (56) call -> ID PARIZQ PARDER . PYC

    PYC             shift and go to state 159


state 106

    (78) expressionList -> expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 78 (expressionList -> expression .)
    COMA            reduce using rule 78 (expressionList -> expression .)
    CORDER          reduce using rule 78 (expressionList -> expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 107

    (57) functionstmt -> FUNCTION ID funcparams . functype LLAVEIZQ block LLAVEDER
    (67) functype -> . DOSPTS type
    (68) functype -> .

    DOSPTS          shift and go to state 161
    LLAVEIZQ        reduce using rule 68 (functype -> .)

    functype                       shift and go to state 160

state 108

    (58) funcparams -> PARIZQ . paramsList PARDER
    (59) funcparams -> PARIZQ . PARDER
    (63) paramsList -> . paramsList COMA parametro
    (64) paramsList -> . parametro
    (65) parametro -> . ID DOSPTS type
    (66) parametro -> . ID DOSPTS type CORIZQ CORDER

    PARDER          shift and go to state 163
    ID              shift and go to state 165

    paramsList                     shift and go to state 162
    parametro                      shift and go to state 164

state 109

    (53) returnstmt -> RETURN expression PYC .

    CONSOLE         reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    IF              reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    SWITCH          reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    WHILE           reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    FOR             reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    ID              reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    BREAK           reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    CONTINUE        reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    FUNCTION        reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    RETURN          reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    INTERFACE       reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    TYPEOF          reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    PARSEINT        reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    PARSEFLOAT      reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    VAR             reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    CONST           reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    ENTERO          reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    DECIMAL         reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    CADENA          reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    CARACTER        reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    BOOLEANO        reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    $end            reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    LLAVEDER        reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    DEFAULT         reduce using rule 53 (returnstmt -> RETURN expression PYC .)
    CASE            reduce using rule 53 (returnstmt -> RETURN expression PYC .)


state 110

    (81) expression -> expression MAS . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 166
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 111

    (82) expression -> expression MENOS . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 167
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 112

    (83) expression -> expression POR . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 168
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 113

    (84) expression -> expression DIVIDIDO . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 169
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 114

    (85) expression -> expression MODULO . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 170
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 115

    (86) expression -> expression MAYOR . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 171
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 116

    (87) expression -> expression MENOR . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 172
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 117

    (88) expression -> expression MAYORIG . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 173
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 118

    (89) expression -> expression MENORIG . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 174
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 119

    (90) expression -> expression IGIG . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 175
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 120

    (91) expression -> expression DIF . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 176
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 121

    (92) expression -> expression AND . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 177
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 122

    (93) expression -> expression OR . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 178
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 123

    (96) expression -> expression INCREMENTO .

    PYC             reduce using rule 96 (expression -> expression INCREMENTO .)
    MAS             reduce using rule 96 (expression -> expression INCREMENTO .)
    MENOS           reduce using rule 96 (expression -> expression INCREMENTO .)
    POR             reduce using rule 96 (expression -> expression INCREMENTO .)
    DIVIDIDO        reduce using rule 96 (expression -> expression INCREMENTO .)
    MODULO          reduce using rule 96 (expression -> expression INCREMENTO .)
    MAYOR           reduce using rule 96 (expression -> expression INCREMENTO .)
    MENOR           reduce using rule 96 (expression -> expression INCREMENTO .)
    MAYORIG         reduce using rule 96 (expression -> expression INCREMENTO .)
    MENORIG         reduce using rule 96 (expression -> expression INCREMENTO .)
    IGIG            reduce using rule 96 (expression -> expression INCREMENTO .)
    DIF             reduce using rule 96 (expression -> expression INCREMENTO .)
    AND             reduce using rule 96 (expression -> expression INCREMENTO .)
    OR              reduce using rule 96 (expression -> expression INCREMENTO .)
    INCREMENTO      reduce using rule 96 (expression -> expression INCREMENTO .)
    TERN            reduce using rule 96 (expression -> expression INCREMENTO .)
    CORDER          reduce using rule 96 (expression -> expression INCREMENTO .)
    PARDER          reduce using rule 96 (expression -> expression INCREMENTO .)
    COMA            reduce using rule 96 (expression -> expression INCREMENTO .)
    IG              reduce using rule 96 (expression -> expression INCREMENTO .)
    PUNTO           reduce using rule 96 (expression -> expression INCREMENTO .)
    CORIZQ          reduce using rule 96 (expression -> expression INCREMENTO .)
    DOSPTS          reduce using rule 96 (expression -> expression INCREMENTO .)
    LLAVEDER        reduce using rule 96 (expression -> expression INCREMENTO .)


state 124

    (98) expression -> expression TERN . expression DOSPTS expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 179
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 125

    (79) expression -> OBJECT PUNTO . KEYS PARIZQ expression PARDER
    (80) expression -> OBJECT PUNTO . VALUES PARIZQ expression PARDER

    KEYS            shift and go to state 180
    VALUES          shift and go to state 181


state 126

    (97) expression -> PARIZQ expression . PARDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 182
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 127

    (95) expression -> MENOS expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 95 (expression -> MENOS expression .)
    MAS             reduce using rule 95 (expression -> MENOS expression .)
    MENOS           reduce using rule 95 (expression -> MENOS expression .)
    POR             reduce using rule 95 (expression -> MENOS expression .)
    DIVIDIDO        reduce using rule 95 (expression -> MENOS expression .)
    MODULO          reduce using rule 95 (expression -> MENOS expression .)
    MAYOR           reduce using rule 95 (expression -> MENOS expression .)
    MENOR           reduce using rule 95 (expression -> MENOS expression .)
    MAYORIG         reduce using rule 95 (expression -> MENOS expression .)
    MENORIG         reduce using rule 95 (expression -> MENOS expression .)
    IGIG            reduce using rule 95 (expression -> MENOS expression .)
    DIF             reduce using rule 95 (expression -> MENOS expression .)
    AND             reduce using rule 95 (expression -> MENOS expression .)
    OR              reduce using rule 95 (expression -> MENOS expression .)
    INCREMENTO      reduce using rule 95 (expression -> MENOS expression .)
    TERN            reduce using rule 95 (expression -> MENOS expression .)
    CORDER          reduce using rule 95 (expression -> MENOS expression .)
    PARDER          reduce using rule 95 (expression -> MENOS expression .)
    COMA            reduce using rule 95 (expression -> MENOS expression .)
    IG              reduce using rule 95 (expression -> MENOS expression .)
    PUNTO           reduce using rule 95 (expression -> MENOS expression .)
    CORIZQ          reduce using rule 95 (expression -> MENOS expression .)
    DOSPTS          reduce using rule 95 (expression -> MENOS expression .)
    LLAVEDER        reduce using rule 95 (expression -> MENOS expression .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 128

    (94) expression -> NOT expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 94 (expression -> NOT expression .)
    MAS             reduce using rule 94 (expression -> NOT expression .)
    MENOS           reduce using rule 94 (expression -> NOT expression .)
    POR             reduce using rule 94 (expression -> NOT expression .)
    DIVIDIDO        reduce using rule 94 (expression -> NOT expression .)
    MODULO          reduce using rule 94 (expression -> NOT expression .)
    MAYOR           reduce using rule 94 (expression -> NOT expression .)
    MENOR           reduce using rule 94 (expression -> NOT expression .)
    MAYORIG         reduce using rule 94 (expression -> NOT expression .)
    MENORIG         reduce using rule 94 (expression -> NOT expression .)
    IGIG            reduce using rule 94 (expression -> NOT expression .)
    DIF             reduce using rule 94 (expression -> NOT expression .)
    AND             reduce using rule 94 (expression -> NOT expression .)
    OR              reduce using rule 94 (expression -> NOT expression .)
    INCREMENTO      reduce using rule 94 (expression -> NOT expression .)
    TERN            reduce using rule 94 (expression -> NOT expression .)
    CORDER          reduce using rule 94 (expression -> NOT expression .)
    PARDER          reduce using rule 94 (expression -> NOT expression .)
    COMA            reduce using rule 94 (expression -> NOT expression .)
    IG              reduce using rule 94 (expression -> NOT expression .)
    PUNTO           reduce using rule 94 (expression -> NOT expression .)
    CORIZQ          reduce using rule 94 (expression -> NOT expression .)
    DOSPTS          reduce using rule 94 (expression -> NOT expression .)
    LLAVEDER        reduce using rule 94 (expression -> NOT expression .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 129

    (106) expression -> CORIZQ expressionList . CORDER
    (77) expressionList -> expressionList . COMA expression

    CORDER          shift and go to state 183
    COMA            shift and go to state 158


state 130

    (107) expression -> ID PARIZQ . expressionList PARDER
    (108) expression -> ID PARIZQ . PARDER
    (77) expressionList -> . expressionList COMA expression
    (78) expressionList -> . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    PARDER          shift and go to state 185
    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expressionList                 shift and go to state 184
    expression                     shift and go to state 106
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 131

    (60) interfacecreation -> INTERFACE ID LLAVEIZQ . attributeList LLAVEDER
    (61) attributeList -> . attributeList ID DOSPTS type PYC
    (62) attributeList -> . ID DOSPTS type PYC

    ID              shift and go to state 186

    attributeList                  shift and go to state 187

state 132

    (51) assignment -> listArray IG expression PYC .

    CONSOLE         reduce using rule 51 (assignment -> listArray IG expression PYC .)
    IF              reduce using rule 51 (assignment -> listArray IG expression PYC .)
    SWITCH          reduce using rule 51 (assignment -> listArray IG expression PYC .)
    WHILE           reduce using rule 51 (assignment -> listArray IG expression PYC .)
    FOR             reduce using rule 51 (assignment -> listArray IG expression PYC .)
    ID              reduce using rule 51 (assignment -> listArray IG expression PYC .)
    BREAK           reduce using rule 51 (assignment -> listArray IG expression PYC .)
    CONTINUE        reduce using rule 51 (assignment -> listArray IG expression PYC .)
    FUNCTION        reduce using rule 51 (assignment -> listArray IG expression PYC .)
    RETURN          reduce using rule 51 (assignment -> listArray IG expression PYC .)
    INTERFACE       reduce using rule 51 (assignment -> listArray IG expression PYC .)
    TYPEOF          reduce using rule 51 (assignment -> listArray IG expression PYC .)
    PARSEINT        reduce using rule 51 (assignment -> listArray IG expression PYC .)
    PARSEFLOAT      reduce using rule 51 (assignment -> listArray IG expression PYC .)
    VAR             reduce using rule 51 (assignment -> listArray IG expression PYC .)
    CONST           reduce using rule 51 (assignment -> listArray IG expression PYC .)
    ENTERO          reduce using rule 51 (assignment -> listArray IG expression PYC .)
    DECIMAL         reduce using rule 51 (assignment -> listArray IG expression PYC .)
    CADENA          reduce using rule 51 (assignment -> listArray IG expression PYC .)
    CARACTER        reduce using rule 51 (assignment -> listArray IG expression PYC .)
    BOOLEANO        reduce using rule 51 (assignment -> listArray IG expression PYC .)
    $end            reduce using rule 51 (assignment -> listArray IG expression PYC .)
    LLAVEDER        reduce using rule 51 (assignment -> listArray IG expression PYC .)
    DEFAULT         reduce using rule 51 (assignment -> listArray IG expression PYC .)
    CASE            reduce using rule 51 (assignment -> listArray IG expression PYC .)


state 133

    (109) listArray -> listArray PUNTO TOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 188


state 134

    (110) listArray -> listArray PUNTO TOLOWERCASE PARIZQ . PARDER

    PARDER          shift and go to state 189


state 135

    (111) listArray -> listArray PUNTO TOUPPERCASE PARIZQ . PARDER

    PARDER          shift and go to state 190


state 136

    (112) listArray -> listArray PUNTO POP PARIZQ . PARDER

    PARDER          shift and go to state 191


state 137

    (113) listArray -> listArray PUNTO JOIN PARIZQ . PARDER

    PARDER          shift and go to state 192


state 138

    (114) listArray -> listArray PUNTO PUSH expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    IG              reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    PUNTO           reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    CORIZQ          reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    CORDER          reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    PARDER          reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    COMA            reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    DOSPTS          reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    LLAVEDER        reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124

  ! MAS             [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! MENOS           [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! POR             [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! DIVIDIDO        [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! MODULO          [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! MAYOR           [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! MENOR           [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! MAYORIG         [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! MENORIG         [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! IGIG            [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! DIF             [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! AND             [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! OR              [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! INCREMENTO      [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]
  ! TERN            [ reduce using rule 114 (listArray -> listArray PUNTO PUSH expression .) ]


state 139

    (115) listArray -> listArray PUNTO INDEXOF expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    IG              reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    PUNTO           reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    CORIZQ          reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    CORDER          reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    PARDER          reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    COMA            reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    DOSPTS          reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    LLAVEDER        reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124

  ! MAS             [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! MENOS           [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! POR             [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! DIVIDIDO        [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! MODULO          [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! MAYOR           [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! MENOR           [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! MAYORIG         [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! MENORIG         [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! IGIG            [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! DIF             [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! AND             [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! OR              [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! INCREMENTO      [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]
  ! TERN            [ reduce using rule 115 (listArray -> listArray PUNTO INDEXOF expression .) ]


state 140

    (120) indexes -> indexes CORIZQ expression . CORDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    CORDER          shift and go to state 193
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 141

    (121) indexes -> CORIZQ expression CORDER .

    CORIZQ          reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    PYC             reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    IG              reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    PUNTO           reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    MAS             reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    MENOS           reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    POR             reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    MODULO          reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    MAYOR           reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    MENOR           reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    MAYORIG         reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    MENORIG         reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    IGIG            reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    DIF             reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    AND             reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    OR              reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    INCREMENTO      reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    TERN            reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    CORDER          reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    PARDER          reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    COMA            reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    DOSPTS          reduce using rule 121 (indexes -> CORIZQ expression CORDER .)
    LLAVEDER        reduce using rule 121 (indexes -> CORIZQ expression CORDER .)


state 142

    (23) print -> CONSOLE PUNTO LOG PARIZQ . expressionList PARDER PYC
    (77) expressionList -> . expressionList COMA expression
    (78) expressionList -> . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expressionList                 shift and go to state 194
    expression                     shift and go to state 106
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 143

    (24) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER else_if_list else

    LLAVEIZQ        shift and go to state 195


state 144

    (32) switchinstruction -> SWITCH PARIZQ expression PARDER . LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> SWITCH PARIZQ expression PARDER . LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> SWITCH PARIZQ expression PARDER . LLAVEIZQ caseList default LLAVEDER

    LLAVEIZQ        shift and go to state 196


state 145

    (39) whileinstruction -> WHILE PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 197


state 146

    (40) forinstruction -> FOR PARIZQ declaration expression . PYC expression PARDER LLAVEIZQ block LLAVEDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 198
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 147

    (41) declaration -> var_const ID . DOSPTS type IG expression PYC

    DOSPTS          shift and go to state 199


state 148

    (46) interdeclaration -> var_const ID DOSPTS ID . IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (76) type -> ID .

  ! shift/reduce conflict for IG resolved as shift
    IG              shift and go to state 200
    CORIZQ          reduce using rule 76 (type -> ID .)

  ! IG              [ reduce using rule 76 (type -> ID .) ]


state 149

    (41) declaration -> var_const ID DOSPTS type . IG expression PYC
    (42) arraydeclaration -> var_const ID DOSPTS type . dimension IG expression PYC
    (44) dimension -> . dimension CORIZQ CORDER
    (45) dimension -> . CORIZQ CORDER

    IG              shift and go to state 201
    CORIZQ          shift and go to state 203

    dimension                      shift and go to state 202

state 150

    (71) type -> NUMBER .

    IG              reduce using rule 71 (type -> NUMBER .)
    CORIZQ          reduce using rule 71 (type -> NUMBER .)
    LLAVEIZQ        reduce using rule 71 (type -> NUMBER .)
    PARDER          reduce using rule 71 (type -> NUMBER .)
    COMA            reduce using rule 71 (type -> NUMBER .)
    PYC             reduce using rule 71 (type -> NUMBER .)


state 151

    (72) type -> FLOAT .

    IG              reduce using rule 72 (type -> FLOAT .)
    CORIZQ          reduce using rule 72 (type -> FLOAT .)
    LLAVEIZQ        reduce using rule 72 (type -> FLOAT .)
    PARDER          reduce using rule 72 (type -> FLOAT .)
    COMA            reduce using rule 72 (type -> FLOAT .)
    PYC             reduce using rule 72 (type -> FLOAT .)


state 152

    (73) type -> STRING .

    IG              reduce using rule 73 (type -> STRING .)
    CORIZQ          reduce using rule 73 (type -> STRING .)
    LLAVEIZQ        reduce using rule 73 (type -> STRING .)
    PARDER          reduce using rule 73 (type -> STRING .)
    COMA            reduce using rule 73 (type -> STRING .)
    PYC             reduce using rule 73 (type -> STRING .)


state 153

    (74) type -> CHAR .

    IG              reduce using rule 74 (type -> CHAR .)
    CORIZQ          reduce using rule 74 (type -> CHAR .)
    LLAVEIZQ        reduce using rule 74 (type -> CHAR .)
    PARDER          reduce using rule 74 (type -> CHAR .)
    COMA            reduce using rule 74 (type -> CHAR .)
    PYC             reduce using rule 74 (type -> CHAR .)


state 154

    (75) type -> BOOLEAN .

    IG              reduce using rule 75 (type -> BOOLEAN .)
    CORIZQ          reduce using rule 75 (type -> BOOLEAN .)
    LLAVEIZQ        reduce using rule 75 (type -> BOOLEAN .)
    PARDER          reduce using rule 75 (type -> BOOLEAN .)
    COMA            reduce using rule 75 (type -> BOOLEAN .)
    PYC             reduce using rule 75 (type -> BOOLEAN .)


state 155

    (43) assignment -> ID indexes IG expression . PYC
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 204
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 156

    (52) assignment -> ID IG expression PYC .

    CONSOLE         reduce using rule 52 (assignment -> ID IG expression PYC .)
    IF              reduce using rule 52 (assignment -> ID IG expression PYC .)
    SWITCH          reduce using rule 52 (assignment -> ID IG expression PYC .)
    WHILE           reduce using rule 52 (assignment -> ID IG expression PYC .)
    FOR             reduce using rule 52 (assignment -> ID IG expression PYC .)
    ID              reduce using rule 52 (assignment -> ID IG expression PYC .)
    BREAK           reduce using rule 52 (assignment -> ID IG expression PYC .)
    CONTINUE        reduce using rule 52 (assignment -> ID IG expression PYC .)
    FUNCTION        reduce using rule 52 (assignment -> ID IG expression PYC .)
    RETURN          reduce using rule 52 (assignment -> ID IG expression PYC .)
    INTERFACE       reduce using rule 52 (assignment -> ID IG expression PYC .)
    TYPEOF          reduce using rule 52 (assignment -> ID IG expression PYC .)
    PARSEINT        reduce using rule 52 (assignment -> ID IG expression PYC .)
    PARSEFLOAT      reduce using rule 52 (assignment -> ID IG expression PYC .)
    VAR             reduce using rule 52 (assignment -> ID IG expression PYC .)
    CONST           reduce using rule 52 (assignment -> ID IG expression PYC .)
    ENTERO          reduce using rule 52 (assignment -> ID IG expression PYC .)
    DECIMAL         reduce using rule 52 (assignment -> ID IG expression PYC .)
    CADENA          reduce using rule 52 (assignment -> ID IG expression PYC .)
    CARACTER        reduce using rule 52 (assignment -> ID IG expression PYC .)
    BOOLEANO        reduce using rule 52 (assignment -> ID IG expression PYC .)
    $end            reduce using rule 52 (assignment -> ID IG expression PYC .)
    LLAVEDER        reduce using rule 52 (assignment -> ID IG expression PYC .)
    DEFAULT         reduce using rule 52 (assignment -> ID IG expression PYC .)
    CASE            reduce using rule 52 (assignment -> ID IG expression PYC .)


state 157

    (55) call -> ID PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 205


state 158

    (77) expressionList -> expressionList COMA . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 206
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 159

    (56) call -> ID PARIZQ PARDER PYC .

    CONSOLE         reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    IF              reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    SWITCH          reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    WHILE           reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    FOR             reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    ID              reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    BREAK           reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    CONTINUE        reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    FUNCTION        reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    RETURN          reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    INTERFACE       reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    TYPEOF          reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    PARSEINT        reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    PARSEFLOAT      reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    VAR             reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    CONST           reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    ENTERO          reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    DECIMAL         reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    CADENA          reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    CARACTER        reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    BOOLEANO        reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    $end            reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    LLAVEDER        reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    DEFAULT         reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)
    CASE            reduce using rule 56 (call -> ID PARIZQ PARDER PYC .)


state 160

    (57) functionstmt -> FUNCTION ID funcparams functype . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 207


state 161

    (67) functype -> DOSPTS . type
    (71) type -> . NUMBER
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . CHAR
    (75) type -> . BOOLEAN
    (76) type -> . ID

    NUMBER          shift and go to state 150
    FLOAT           shift and go to state 151
    STRING          shift and go to state 152
    CHAR            shift and go to state 153
    BOOLEAN         shift and go to state 154
    ID              shift and go to state 209

    type                           shift and go to state 208

state 162

    (58) funcparams -> PARIZQ paramsList . PARDER
    (63) paramsList -> paramsList . COMA parametro

    PARDER          shift and go to state 210
    COMA            shift and go to state 211


state 163

    (59) funcparams -> PARIZQ PARDER .

    DOSPTS          reduce using rule 59 (funcparams -> PARIZQ PARDER .)
    LLAVEIZQ        reduce using rule 59 (funcparams -> PARIZQ PARDER .)


state 164

    (64) paramsList -> parametro .

    PARDER          reduce using rule 64 (paramsList -> parametro .)
    COMA            reduce using rule 64 (paramsList -> parametro .)


state 165

    (65) parametro -> ID . DOSPTS type
    (66) parametro -> ID . DOSPTS type CORIZQ CORDER

    DOSPTS          shift and go to state 212


state 166

    (81) expression -> expression MAS expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 81 (expression -> expression MAS expression .)
    MAS             reduce using rule 81 (expression -> expression MAS expression .)
    MENOS           reduce using rule 81 (expression -> expression MAS expression .)
    MAYOR           reduce using rule 81 (expression -> expression MAS expression .)
    MENOR           reduce using rule 81 (expression -> expression MAS expression .)
    MAYORIG         reduce using rule 81 (expression -> expression MAS expression .)
    MENORIG         reduce using rule 81 (expression -> expression MAS expression .)
    IGIG            reduce using rule 81 (expression -> expression MAS expression .)
    DIF             reduce using rule 81 (expression -> expression MAS expression .)
    AND             reduce using rule 81 (expression -> expression MAS expression .)
    OR              reduce using rule 81 (expression -> expression MAS expression .)
    INCREMENTO      reduce using rule 81 (expression -> expression MAS expression .)
    TERN            reduce using rule 81 (expression -> expression MAS expression .)
    CORDER          reduce using rule 81 (expression -> expression MAS expression .)
    PARDER          reduce using rule 81 (expression -> expression MAS expression .)
    COMA            reduce using rule 81 (expression -> expression MAS expression .)
    IG              reduce using rule 81 (expression -> expression MAS expression .)
    PUNTO           reduce using rule 81 (expression -> expression MAS expression .)
    CORIZQ          reduce using rule 81 (expression -> expression MAS expression .)
    DOSPTS          reduce using rule 81 (expression -> expression MAS expression .)
    LLAVEDER        reduce using rule 81 (expression -> expression MAS expression .)
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! POR             [ reduce using rule 81 (expression -> expression MAS expression .) ]
  ! DIVIDIDO        [ reduce using rule 81 (expression -> expression MAS expression .) ]
  ! MODULO          [ reduce using rule 81 (expression -> expression MAS expression .) ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 167

    (82) expression -> expression MENOS expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 82 (expression -> expression MENOS expression .)
    MAS             reduce using rule 82 (expression -> expression MENOS expression .)
    MENOS           reduce using rule 82 (expression -> expression MENOS expression .)
    MAYOR           reduce using rule 82 (expression -> expression MENOS expression .)
    MENOR           reduce using rule 82 (expression -> expression MENOS expression .)
    MAYORIG         reduce using rule 82 (expression -> expression MENOS expression .)
    MENORIG         reduce using rule 82 (expression -> expression MENOS expression .)
    IGIG            reduce using rule 82 (expression -> expression MENOS expression .)
    DIF             reduce using rule 82 (expression -> expression MENOS expression .)
    AND             reduce using rule 82 (expression -> expression MENOS expression .)
    OR              reduce using rule 82 (expression -> expression MENOS expression .)
    INCREMENTO      reduce using rule 82 (expression -> expression MENOS expression .)
    TERN            reduce using rule 82 (expression -> expression MENOS expression .)
    CORDER          reduce using rule 82 (expression -> expression MENOS expression .)
    PARDER          reduce using rule 82 (expression -> expression MENOS expression .)
    COMA            reduce using rule 82 (expression -> expression MENOS expression .)
    IG              reduce using rule 82 (expression -> expression MENOS expression .)
    PUNTO           reduce using rule 82 (expression -> expression MENOS expression .)
    CORIZQ          reduce using rule 82 (expression -> expression MENOS expression .)
    DOSPTS          reduce using rule 82 (expression -> expression MENOS expression .)
    LLAVEDER        reduce using rule 82 (expression -> expression MENOS expression .)
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! POR             [ reduce using rule 82 (expression -> expression MENOS expression .) ]
  ! DIVIDIDO        [ reduce using rule 82 (expression -> expression MENOS expression .) ]
  ! MODULO          [ reduce using rule 82 (expression -> expression MENOS expression .) ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 168

    (83) expression -> expression POR expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 83 (expression -> expression POR expression .)
    MAS             reduce using rule 83 (expression -> expression POR expression .)
    MENOS           reduce using rule 83 (expression -> expression POR expression .)
    POR             reduce using rule 83 (expression -> expression POR expression .)
    DIVIDIDO        reduce using rule 83 (expression -> expression POR expression .)
    MODULO          reduce using rule 83 (expression -> expression POR expression .)
    MAYOR           reduce using rule 83 (expression -> expression POR expression .)
    MENOR           reduce using rule 83 (expression -> expression POR expression .)
    MAYORIG         reduce using rule 83 (expression -> expression POR expression .)
    MENORIG         reduce using rule 83 (expression -> expression POR expression .)
    IGIG            reduce using rule 83 (expression -> expression POR expression .)
    DIF             reduce using rule 83 (expression -> expression POR expression .)
    AND             reduce using rule 83 (expression -> expression POR expression .)
    OR              reduce using rule 83 (expression -> expression POR expression .)
    INCREMENTO      reduce using rule 83 (expression -> expression POR expression .)
    TERN            reduce using rule 83 (expression -> expression POR expression .)
    CORDER          reduce using rule 83 (expression -> expression POR expression .)
    PARDER          reduce using rule 83 (expression -> expression POR expression .)
    COMA            reduce using rule 83 (expression -> expression POR expression .)
    IG              reduce using rule 83 (expression -> expression POR expression .)
    PUNTO           reduce using rule 83 (expression -> expression POR expression .)
    CORIZQ          reduce using rule 83 (expression -> expression POR expression .)
    DOSPTS          reduce using rule 83 (expression -> expression POR expression .)
    LLAVEDER        reduce using rule 83 (expression -> expression POR expression .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 169

    (84) expression -> expression DIVIDIDO expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    MAS             reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    MENOS           reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    POR             reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    DIVIDIDO        reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    MODULO          reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    MAYOR           reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    MENOR           reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    MAYORIG         reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    MENORIG         reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    IGIG            reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    DIF             reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    AND             reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    OR              reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    INCREMENTO      reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    TERN            reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    CORDER          reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    PARDER          reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    COMA            reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    IG              reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    PUNTO           reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    CORIZQ          reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    DOSPTS          reduce using rule 84 (expression -> expression DIVIDIDO expression .)
    LLAVEDER        reduce using rule 84 (expression -> expression DIVIDIDO expression .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 170

    (85) expression -> expression MODULO expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 85 (expression -> expression MODULO expression .)
    MAS             reduce using rule 85 (expression -> expression MODULO expression .)
    MENOS           reduce using rule 85 (expression -> expression MODULO expression .)
    POR             reduce using rule 85 (expression -> expression MODULO expression .)
    DIVIDIDO        reduce using rule 85 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 85 (expression -> expression MODULO expression .)
    MAYOR           reduce using rule 85 (expression -> expression MODULO expression .)
    MENOR           reduce using rule 85 (expression -> expression MODULO expression .)
    MAYORIG         reduce using rule 85 (expression -> expression MODULO expression .)
    MENORIG         reduce using rule 85 (expression -> expression MODULO expression .)
    IGIG            reduce using rule 85 (expression -> expression MODULO expression .)
    DIF             reduce using rule 85 (expression -> expression MODULO expression .)
    AND             reduce using rule 85 (expression -> expression MODULO expression .)
    OR              reduce using rule 85 (expression -> expression MODULO expression .)
    INCREMENTO      reduce using rule 85 (expression -> expression MODULO expression .)
    TERN            reduce using rule 85 (expression -> expression MODULO expression .)
    CORDER          reduce using rule 85 (expression -> expression MODULO expression .)
    PARDER          reduce using rule 85 (expression -> expression MODULO expression .)
    COMA            reduce using rule 85 (expression -> expression MODULO expression .)
    IG              reduce using rule 85 (expression -> expression MODULO expression .)
    PUNTO           reduce using rule 85 (expression -> expression MODULO expression .)
    CORIZQ          reduce using rule 85 (expression -> expression MODULO expression .)
    DOSPTS          reduce using rule 85 (expression -> expression MODULO expression .)
    LLAVEDER        reduce using rule 85 (expression -> expression MODULO expression .)

  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! POR             [ shift and go to state 112 ]
  ! DIVIDIDO        [ shift and go to state 113 ]
  ! MODULO          [ shift and go to state 114 ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 171

    (86) expression -> expression MAYOR expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 86 (expression -> expression MAYOR expression .)
    MAYOR           reduce using rule 86 (expression -> expression MAYOR expression .)
    MENOR           reduce using rule 86 (expression -> expression MAYOR expression .)
    MAYORIG         reduce using rule 86 (expression -> expression MAYOR expression .)
    MENORIG         reduce using rule 86 (expression -> expression MAYOR expression .)
    IGIG            reduce using rule 86 (expression -> expression MAYOR expression .)
    DIF             reduce using rule 86 (expression -> expression MAYOR expression .)
    AND             reduce using rule 86 (expression -> expression MAYOR expression .)
    OR              reduce using rule 86 (expression -> expression MAYOR expression .)
    INCREMENTO      reduce using rule 86 (expression -> expression MAYOR expression .)
    TERN            reduce using rule 86 (expression -> expression MAYOR expression .)
    CORDER          reduce using rule 86 (expression -> expression MAYOR expression .)
    PARDER          reduce using rule 86 (expression -> expression MAYOR expression .)
    COMA            reduce using rule 86 (expression -> expression MAYOR expression .)
    IG              reduce using rule 86 (expression -> expression MAYOR expression .)
    PUNTO           reduce using rule 86 (expression -> expression MAYOR expression .)
    CORIZQ          reduce using rule 86 (expression -> expression MAYOR expression .)
    DOSPTS          reduce using rule 86 (expression -> expression MAYOR expression .)
    LLAVEDER        reduce using rule 86 (expression -> expression MAYOR expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 86 (expression -> expression MAYOR expression .) ]
  ! MENOS           [ reduce using rule 86 (expression -> expression MAYOR expression .) ]
  ! POR             [ reduce using rule 86 (expression -> expression MAYOR expression .) ]
  ! DIVIDIDO        [ reduce using rule 86 (expression -> expression MAYOR expression .) ]
  ! MODULO          [ reduce using rule 86 (expression -> expression MAYOR expression .) ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 172

    (87) expression -> expression MENOR expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 87 (expression -> expression MENOR expression .)
    MAYOR           reduce using rule 87 (expression -> expression MENOR expression .)
    MENOR           reduce using rule 87 (expression -> expression MENOR expression .)
    MAYORIG         reduce using rule 87 (expression -> expression MENOR expression .)
    MENORIG         reduce using rule 87 (expression -> expression MENOR expression .)
    IGIG            reduce using rule 87 (expression -> expression MENOR expression .)
    DIF             reduce using rule 87 (expression -> expression MENOR expression .)
    AND             reduce using rule 87 (expression -> expression MENOR expression .)
    OR              reduce using rule 87 (expression -> expression MENOR expression .)
    INCREMENTO      reduce using rule 87 (expression -> expression MENOR expression .)
    TERN            reduce using rule 87 (expression -> expression MENOR expression .)
    CORDER          reduce using rule 87 (expression -> expression MENOR expression .)
    PARDER          reduce using rule 87 (expression -> expression MENOR expression .)
    COMA            reduce using rule 87 (expression -> expression MENOR expression .)
    IG              reduce using rule 87 (expression -> expression MENOR expression .)
    PUNTO           reduce using rule 87 (expression -> expression MENOR expression .)
    CORIZQ          reduce using rule 87 (expression -> expression MENOR expression .)
    DOSPTS          reduce using rule 87 (expression -> expression MENOR expression .)
    LLAVEDER        reduce using rule 87 (expression -> expression MENOR expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 87 (expression -> expression MENOR expression .) ]
  ! MENOS           [ reduce using rule 87 (expression -> expression MENOR expression .) ]
  ! POR             [ reduce using rule 87 (expression -> expression MENOR expression .) ]
  ! DIVIDIDO        [ reduce using rule 87 (expression -> expression MENOR expression .) ]
  ! MODULO          [ reduce using rule 87 (expression -> expression MENOR expression .) ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 173

    (88) expression -> expression MAYORIG expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 88 (expression -> expression MAYORIG expression .)
    MAYOR           reduce using rule 88 (expression -> expression MAYORIG expression .)
    MENOR           reduce using rule 88 (expression -> expression MAYORIG expression .)
    MAYORIG         reduce using rule 88 (expression -> expression MAYORIG expression .)
    MENORIG         reduce using rule 88 (expression -> expression MAYORIG expression .)
    IGIG            reduce using rule 88 (expression -> expression MAYORIG expression .)
    DIF             reduce using rule 88 (expression -> expression MAYORIG expression .)
    AND             reduce using rule 88 (expression -> expression MAYORIG expression .)
    OR              reduce using rule 88 (expression -> expression MAYORIG expression .)
    INCREMENTO      reduce using rule 88 (expression -> expression MAYORIG expression .)
    TERN            reduce using rule 88 (expression -> expression MAYORIG expression .)
    CORDER          reduce using rule 88 (expression -> expression MAYORIG expression .)
    PARDER          reduce using rule 88 (expression -> expression MAYORIG expression .)
    COMA            reduce using rule 88 (expression -> expression MAYORIG expression .)
    IG              reduce using rule 88 (expression -> expression MAYORIG expression .)
    PUNTO           reduce using rule 88 (expression -> expression MAYORIG expression .)
    CORIZQ          reduce using rule 88 (expression -> expression MAYORIG expression .)
    DOSPTS          reduce using rule 88 (expression -> expression MAYORIG expression .)
    LLAVEDER        reduce using rule 88 (expression -> expression MAYORIG expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 88 (expression -> expression MAYORIG expression .) ]
  ! MENOS           [ reduce using rule 88 (expression -> expression MAYORIG expression .) ]
  ! POR             [ reduce using rule 88 (expression -> expression MAYORIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 88 (expression -> expression MAYORIG expression .) ]
  ! MODULO          [ reduce using rule 88 (expression -> expression MAYORIG expression .) ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 174

    (89) expression -> expression MENORIG expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 89 (expression -> expression MENORIG expression .)
    MAYOR           reduce using rule 89 (expression -> expression MENORIG expression .)
    MENOR           reduce using rule 89 (expression -> expression MENORIG expression .)
    MAYORIG         reduce using rule 89 (expression -> expression MENORIG expression .)
    MENORIG         reduce using rule 89 (expression -> expression MENORIG expression .)
    IGIG            reduce using rule 89 (expression -> expression MENORIG expression .)
    DIF             reduce using rule 89 (expression -> expression MENORIG expression .)
    AND             reduce using rule 89 (expression -> expression MENORIG expression .)
    OR              reduce using rule 89 (expression -> expression MENORIG expression .)
    INCREMENTO      reduce using rule 89 (expression -> expression MENORIG expression .)
    TERN            reduce using rule 89 (expression -> expression MENORIG expression .)
    CORDER          reduce using rule 89 (expression -> expression MENORIG expression .)
    PARDER          reduce using rule 89 (expression -> expression MENORIG expression .)
    COMA            reduce using rule 89 (expression -> expression MENORIG expression .)
    IG              reduce using rule 89 (expression -> expression MENORIG expression .)
    PUNTO           reduce using rule 89 (expression -> expression MENORIG expression .)
    CORIZQ          reduce using rule 89 (expression -> expression MENORIG expression .)
    DOSPTS          reduce using rule 89 (expression -> expression MENORIG expression .)
    LLAVEDER        reduce using rule 89 (expression -> expression MENORIG expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114

  ! MAS             [ reduce using rule 89 (expression -> expression MENORIG expression .) ]
  ! MENOS           [ reduce using rule 89 (expression -> expression MENORIG expression .) ]
  ! POR             [ reduce using rule 89 (expression -> expression MENORIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 89 (expression -> expression MENORIG expression .) ]
  ! MODULO          [ reduce using rule 89 (expression -> expression MENORIG expression .) ]
  ! MAYOR           [ shift and go to state 115 ]
  ! MENOR           [ shift and go to state 116 ]
  ! MAYORIG         [ shift and go to state 117 ]
  ! MENORIG         [ shift and go to state 118 ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 175

    (90) expression -> expression IGIG expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 90 (expression -> expression IGIG expression .)
    IGIG            reduce using rule 90 (expression -> expression IGIG expression .)
    DIF             reduce using rule 90 (expression -> expression IGIG expression .)
    AND             reduce using rule 90 (expression -> expression IGIG expression .)
    OR              reduce using rule 90 (expression -> expression IGIG expression .)
    INCREMENTO      reduce using rule 90 (expression -> expression IGIG expression .)
    TERN            reduce using rule 90 (expression -> expression IGIG expression .)
    CORDER          reduce using rule 90 (expression -> expression IGIG expression .)
    PARDER          reduce using rule 90 (expression -> expression IGIG expression .)
    COMA            reduce using rule 90 (expression -> expression IGIG expression .)
    IG              reduce using rule 90 (expression -> expression IGIG expression .)
    PUNTO           reduce using rule 90 (expression -> expression IGIG expression .)
    CORIZQ          reduce using rule 90 (expression -> expression IGIG expression .)
    DOSPTS          reduce using rule 90 (expression -> expression IGIG expression .)
    LLAVEDER        reduce using rule 90 (expression -> expression IGIG expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118

  ! MAS             [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! MENOS           [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! POR             [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! DIVIDIDO        [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! MODULO          [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! MAYOR           [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! MENOR           [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! MAYORIG         [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! MENORIG         [ reduce using rule 90 (expression -> expression IGIG expression .) ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 176

    (91) expression -> expression DIF expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 91 (expression -> expression DIF expression .)
    IGIG            reduce using rule 91 (expression -> expression DIF expression .)
    DIF             reduce using rule 91 (expression -> expression DIF expression .)
    AND             reduce using rule 91 (expression -> expression DIF expression .)
    OR              reduce using rule 91 (expression -> expression DIF expression .)
    INCREMENTO      reduce using rule 91 (expression -> expression DIF expression .)
    TERN            reduce using rule 91 (expression -> expression DIF expression .)
    CORDER          reduce using rule 91 (expression -> expression DIF expression .)
    PARDER          reduce using rule 91 (expression -> expression DIF expression .)
    COMA            reduce using rule 91 (expression -> expression DIF expression .)
    IG              reduce using rule 91 (expression -> expression DIF expression .)
    PUNTO           reduce using rule 91 (expression -> expression DIF expression .)
    CORIZQ          reduce using rule 91 (expression -> expression DIF expression .)
    DOSPTS          reduce using rule 91 (expression -> expression DIF expression .)
    LLAVEDER        reduce using rule 91 (expression -> expression DIF expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118

  ! MAS             [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! MENOS           [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! POR             [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! DIVIDIDO        [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! MODULO          [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! MAYOR           [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! MENOR           [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! MAYORIG         [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! MENORIG         [ reduce using rule 91 (expression -> expression DIF expression .) ]
  ! IGIG            [ shift and go to state 119 ]
  ! DIF             [ shift and go to state 120 ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 177

    (92) expression -> expression AND expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 92 (expression -> expression AND expression .)
    AND             reduce using rule 92 (expression -> expression AND expression .)
    OR              reduce using rule 92 (expression -> expression AND expression .)
    INCREMENTO      reduce using rule 92 (expression -> expression AND expression .)
    TERN            reduce using rule 92 (expression -> expression AND expression .)
    CORDER          reduce using rule 92 (expression -> expression AND expression .)
    PARDER          reduce using rule 92 (expression -> expression AND expression .)
    COMA            reduce using rule 92 (expression -> expression AND expression .)
    IG              reduce using rule 92 (expression -> expression AND expression .)
    PUNTO           reduce using rule 92 (expression -> expression AND expression .)
    CORIZQ          reduce using rule 92 (expression -> expression AND expression .)
    DOSPTS          reduce using rule 92 (expression -> expression AND expression .)
    LLAVEDER        reduce using rule 92 (expression -> expression AND expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120

  ! MAS             [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! MENOS           [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! POR             [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! DIVIDIDO        [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! MODULO          [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! MAYOR           [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! MENOR           [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! MAYORIG         [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! MENORIG         [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! IGIG            [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! DIF             [ reduce using rule 92 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 121 ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 178

    (93) expression -> expression OR expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             reduce using rule 93 (expression -> expression OR expression .)
    OR              reduce using rule 93 (expression -> expression OR expression .)
    INCREMENTO      reduce using rule 93 (expression -> expression OR expression .)
    TERN            reduce using rule 93 (expression -> expression OR expression .)
    CORDER          reduce using rule 93 (expression -> expression OR expression .)
    PARDER          reduce using rule 93 (expression -> expression OR expression .)
    COMA            reduce using rule 93 (expression -> expression OR expression .)
    IG              reduce using rule 93 (expression -> expression OR expression .)
    PUNTO           reduce using rule 93 (expression -> expression OR expression .)
    CORIZQ          reduce using rule 93 (expression -> expression OR expression .)
    DOSPTS          reduce using rule 93 (expression -> expression OR expression .)
    LLAVEDER        reduce using rule 93 (expression -> expression OR expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121

  ! MAS             [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! MENOS           [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! POR             [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! DIVIDIDO        [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! MODULO          [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! MAYOR           [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! MENOR           [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! MAYORIG         [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! MENORIG         [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! IGIG            [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! DIF             [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 93 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 122 ]
  ! INCREMENTO      [ shift and go to state 123 ]
  ! TERN            [ shift and go to state 124 ]


state 179

    (98) expression -> expression TERN expression . DOSPTS expression
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    DOSPTS          shift and go to state 213
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 180

    (79) expression -> OBJECT PUNTO KEYS . PARIZQ expression PARDER

    PARIZQ          shift and go to state 214


state 181

    (80) expression -> OBJECT PUNTO VALUES . PARIZQ expression PARDER

    PARIZQ          shift and go to state 215


state 182

    (97) expression -> PARIZQ expression PARDER .

    PYC             reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    MAS             reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    MENOS           reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    POR             reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    MODULO          reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    MAYOR           reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    MENOR           reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    MENORIG         reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    IGIG            reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    DIF             reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    AND             reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    OR              reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    INCREMENTO      reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    TERN            reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    CORDER          reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    PARDER          reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    COMA            reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    IG              reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    PUNTO           reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    CORIZQ          reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 97 (expression -> PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 97 (expression -> PARIZQ expression PARDER .)


state 183

    (106) expression -> CORIZQ expressionList CORDER .

    PYC             reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    MAS             reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    MENOS           reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    POR             reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    DIVIDIDO        reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    MODULO          reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    MAYOR           reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    MENOR           reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    MAYORIG         reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    MENORIG         reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    IGIG            reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    DIF             reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    AND             reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    OR              reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    INCREMENTO      reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    TERN            reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    CORDER          reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    PARDER          reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    COMA            reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    IG              reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    PUNTO           reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    CORIZQ          reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    DOSPTS          reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)
    LLAVEDER        reduce using rule 106 (expression -> CORIZQ expressionList CORDER .)


state 184

    (107) expression -> ID PARIZQ expressionList . PARDER
    (77) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 216
    COMA            shift and go to state 158


state 185

    (108) expression -> ID PARIZQ PARDER .

    PYC             reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    MAS             reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    POR             reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    MAYORIG         reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    MENORIG         reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    IGIG            reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    DIF             reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    AND             reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    OR              reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    INCREMENTO      reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    TERN            reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    COMA            reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    IG              reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    PUNTO           reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    CORIZQ          reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    DOSPTS          reduce using rule 108 (expression -> ID PARIZQ PARDER .)
    LLAVEDER        reduce using rule 108 (expression -> ID PARIZQ PARDER .)


state 186

    (62) attributeList -> ID . DOSPTS type PYC

    DOSPTS          shift and go to state 217


state 187

    (60) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList . LLAVEDER
    (61) attributeList -> attributeList . ID DOSPTS type PYC

    LLAVEDER        shift and go to state 219
    ID              shift and go to state 218


state 188

    (109) listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .

    PYC             reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    IG              reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    PUNTO           reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    CORIZQ          reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    POR             reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    MAYOR           reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    MENOR           reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    MAYORIG         reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    MENORIG         reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    IGIG            reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    DIF             reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    AND             reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    OR              reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    INCREMENTO      reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    TERN            reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    DOSPTS          reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)
    LLAVEDER        reduce using rule 109 (listArray -> listArray PUNTO TOSTRING PARIZQ PARDER .)


state 189

    (110) listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .

    PYC             reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    IG              reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    CORIZQ          reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAS             reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    POR             reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    MAYORIG         reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    MENORIG         reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    IGIG            reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    DIF             reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    AND             reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    OR              reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    INCREMENTO      reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    TERN            reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    CORDER          reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    COMA            reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    DOSPTS          reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)
    LLAVEDER        reduce using rule 110 (listArray -> listArray PUNTO TOLOWERCASE PARIZQ PARDER .)


state 190

    (111) listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .

    PYC             reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    IG              reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    PUNTO           reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    CORIZQ          reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAS             reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOS           reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    POR             reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    MODULO          reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYOR           reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENOR           reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    MAYORIG         reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    MENORIG         reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    IGIG            reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    DIF             reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    AND             reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    OR              reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    INCREMENTO      reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    TERN            reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    CORDER          reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    PARDER          reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    COMA            reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    DOSPTS          reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)
    LLAVEDER        reduce using rule 111 (listArray -> listArray PUNTO TOUPPERCASE PARIZQ PARDER .)


state 191

    (112) listArray -> listArray PUNTO POP PARIZQ PARDER .

    PYC             reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    IG              reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    PUNTO           reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    CORIZQ          reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    MAS             reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    MENOS           reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    POR             reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    MODULO          reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    MAYOR           reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    MENOR           reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    MAYORIG         reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    MENORIG         reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    IGIG            reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    DIF             reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    AND             reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    OR              reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    INCREMENTO      reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    TERN            reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    CORDER          reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    PARDER          reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    COMA            reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    DOSPTS          reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)
    LLAVEDER        reduce using rule 112 (listArray -> listArray PUNTO POP PARIZQ PARDER .)


state 192

    (113) listArray -> listArray PUNTO JOIN PARIZQ PARDER .

    PYC             reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    IG              reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    PUNTO           reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    CORIZQ          reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    MAS             reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    MENOS           reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    POR             reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    MODULO          reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    MAYOR           reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    MENOR           reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    MAYORIG         reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    MENORIG         reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    IGIG            reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    DIF             reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    AND             reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    OR              reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    INCREMENTO      reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    TERN            reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    CORDER          reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    PARDER          reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    COMA            reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    DOSPTS          reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)
    LLAVEDER        reduce using rule 113 (listArray -> listArray PUNTO JOIN PARIZQ PARDER .)


state 193

    (120) indexes -> indexes CORIZQ expression CORDER .

    CORIZQ          reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    PYC             reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    IG              reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    PUNTO           reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    MAS             reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    MENOS           reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    POR             reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    DIVIDIDO        reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    MODULO          reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    MAYOR           reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    MENOR           reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    MAYORIG         reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    MENORIG         reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    IGIG            reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    DIF             reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    AND             reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    OR              reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    INCREMENTO      reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    TERN            reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    CORDER          reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    PARDER          reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    COMA            reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    DOSPTS          reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)
    LLAVEDER        reduce using rule 120 (indexes -> indexes CORIZQ expression CORDER .)


state 194

    (23) print -> CONSOLE PUNTO LOG PARIZQ expressionList . PARDER PYC
    (77) expressionList -> expressionList . COMA expression

    PARDER          shift and go to state 220
    COMA            shift and go to state 158


state 195

    (24) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (25) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER else_if_list
    (26) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER else
    (27) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER else_if_list else
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    block                          shift and go to state 221
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 196

    (32) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ . caseList LLAVEDER
    (33) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ . default LLAVEDER
    (34) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ . caseList default LLAVEDER
    (35) caseList -> . caseList case
    (36) caseList -> . case
    (38) default -> . DEFAULT DOSPTS block
    (37) case -> . CASE expression DOSPTS block

    DEFAULT         shift and go to state 225
    CASE            shift and go to state 226

    caseList                       shift and go to state 222
    default                        shift and go to state 223
    case                           shift and go to state 224

state 197

    (39) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    block                          shift and go to state 227
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 198

    (40) forinstruction -> FOR PARIZQ declaration expression PYC . expression PARDER LLAVEIZQ block LLAVEDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 228
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 199

    (41) declaration -> var_const ID DOSPTS . type IG expression PYC
    (71) type -> . NUMBER
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . CHAR
    (75) type -> . BOOLEAN
    (76) type -> . ID

    NUMBER          shift and go to state 150
    FLOAT           shift and go to state 151
    STRING          shift and go to state 152
    CHAR            shift and go to state 153
    BOOLEAN         shift and go to state 154
    ID              shift and go to state 209

    type                           shift and go to state 229

state 200

    (46) interdeclaration -> var_const ID DOSPTS ID IG . LLAVEIZQ interfaceContent LLAVEDER PYC

    LLAVEIZQ        shift and go to state 230


state 201

    (41) declaration -> var_const ID DOSPTS type IG . expression PYC
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 231
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 202

    (42) arraydeclaration -> var_const ID DOSPTS type dimension . IG expression PYC
    (44) dimension -> dimension . CORIZQ CORDER

    IG              shift and go to state 232
    CORIZQ          shift and go to state 233


state 203

    (45) dimension -> CORIZQ . CORDER

    CORDER          shift and go to state 234


state 204

    (43) assignment -> ID indexes IG expression PYC .

    CONSOLE         reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    IF              reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    SWITCH          reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    WHILE           reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    FOR             reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    ID              reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    BREAK           reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    CONTINUE        reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    FUNCTION        reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    RETURN          reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    INTERFACE       reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    TYPEOF          reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    PARSEINT        reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    PARSEFLOAT      reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    VAR             reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    CONST           reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    ENTERO          reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    DECIMAL         reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    CADENA          reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    CARACTER        reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    BOOLEANO        reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    $end            reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    LLAVEDER        reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    DEFAULT         reduce using rule 43 (assignment -> ID indexes IG expression PYC .)
    CASE            reduce using rule 43 (assignment -> ID indexes IG expression PYC .)


state 205

    (55) call -> ID PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    SWITCH          reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    FOR             reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    FUNCTION        reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    RETURN          reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    INTERFACE       reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    TYPEOF          reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    PARSEINT        reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    PARSEFLOAT      reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    CONST           reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    ENTERO          reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    DECIMAL         reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    CADENA          reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    CARACTER        reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    BOOLEANO        reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    DEFAULT         reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)
    CASE            reduce using rule 55 (call -> ID PARIZQ expressionList PARDER PYC .)


state 206

    (77) expressionList -> expressionList COMA expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          reduce using rule 77 (expressionList -> expressionList COMA expression .)
    COMA            reduce using rule 77 (expressionList -> expressionList COMA expression .)
    CORDER          reduce using rule 77 (expressionList -> expressionList COMA expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 207

    (57) functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    block                          shift and go to state 235
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 208

    (67) functype -> DOSPTS type .

    LLAVEIZQ        reduce using rule 67 (functype -> DOSPTS type .)


state 209

    (76) type -> ID .

    LLAVEIZQ        reduce using rule 76 (type -> ID .)
    IG              reduce using rule 76 (type -> ID .)
    CORIZQ          reduce using rule 76 (type -> ID .)
    PARDER          reduce using rule 76 (type -> ID .)
    COMA            reduce using rule 76 (type -> ID .)
    PYC             reduce using rule 76 (type -> ID .)


state 210

    (58) funcparams -> PARIZQ paramsList PARDER .

    DOSPTS          reduce using rule 58 (funcparams -> PARIZQ paramsList PARDER .)
    LLAVEIZQ        reduce using rule 58 (funcparams -> PARIZQ paramsList PARDER .)


state 211

    (63) paramsList -> paramsList COMA . parametro
    (65) parametro -> . ID DOSPTS type
    (66) parametro -> . ID DOSPTS type CORIZQ CORDER

    ID              shift and go to state 165

    parametro                      shift and go to state 236

state 212

    (65) parametro -> ID DOSPTS . type
    (66) parametro -> ID DOSPTS . type CORIZQ CORDER
    (71) type -> . NUMBER
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . CHAR
    (75) type -> . BOOLEAN
    (76) type -> . ID

    NUMBER          shift and go to state 150
    FLOAT           shift and go to state 151
    STRING          shift and go to state 152
    CHAR            shift and go to state 153
    BOOLEAN         shift and go to state 154
    ID              shift and go to state 209

    type                           shift and go to state 237

state 213

    (98) expression -> expression TERN expression DOSPTS . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 238
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 214

    (79) expression -> OBJECT PUNTO KEYS PARIZQ . expression PARDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 239
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 215

    (80) expression -> OBJECT PUNTO VALUES PARIZQ . expression PARDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 240
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 216

    (107) expression -> ID PARIZQ expressionList PARDER .

    PYC             reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    MAS             reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    MENOS           reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    POR             reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    DIVIDIDO        reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    MODULO          reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    MAYOR           reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    MENOR           reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    MAYORIG         reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    MENORIG         reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    IGIG            reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    DIF             reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    AND             reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    OR              reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    INCREMENTO      reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    TERN            reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    CORDER          reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    PARDER          reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    COMA            reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    IG              reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    PUNTO           reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    CORIZQ          reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    DOSPTS          reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)
    LLAVEDER        reduce using rule 107 (expression -> ID PARIZQ expressionList PARDER .)


state 217

    (62) attributeList -> ID DOSPTS . type PYC
    (71) type -> . NUMBER
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . CHAR
    (75) type -> . BOOLEAN
    (76) type -> . ID

    NUMBER          shift and go to state 150
    FLOAT           shift and go to state 151
    STRING          shift and go to state 152
    CHAR            shift and go to state 153
    BOOLEAN         shift and go to state 154
    ID              shift and go to state 209

    type                           shift and go to state 241

state 218

    (61) attributeList -> attributeList ID . DOSPTS type PYC

    DOSPTS          shift and go to state 242


state 219

    (60) interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .

    CONSOLE         reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    IF              reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    SWITCH          reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    WHILE           reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    FOR             reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    ID              reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    BREAK           reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    CONTINUE        reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    FUNCTION        reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    RETURN          reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    INTERFACE       reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    TYPEOF          reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    PARSEINT        reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    PARSEFLOAT      reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    VAR             reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    CONST           reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    ENTERO          reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    DECIMAL         reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    CADENA          reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    CARACTER        reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    BOOLEANO        reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    $end            reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    LLAVEDER        reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    DEFAULT         reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)
    CASE            reduce using rule 60 (interfacecreation -> INTERFACE ID LLAVEIZQ attributeList LLAVEDER .)


state 220

    (23) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER . PYC

    PYC             shift and go to state 243


state 221

    (24) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (25) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER else_if_list
    (26) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER else
    (27) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER else_if_list else
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    LLAVEDER        shift and go to state 244
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 222

    (32) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList . LLAVEDER
    (34) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList . default LLAVEDER
    (35) caseList -> caseList . case
    (38) default -> . DEFAULT DOSPTS block
    (37) case -> . CASE expression DOSPTS block

    LLAVEDER        shift and go to state 245
    DEFAULT         shift and go to state 225
    CASE            shift and go to state 226

    default                        shift and go to state 246
    case                           shift and go to state 247

state 223

    (33) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default . LLAVEDER

    LLAVEDER        shift and go to state 248


state 224

    (36) caseList -> case .

    LLAVEDER        reduce using rule 36 (caseList -> case .)
    DEFAULT         reduce using rule 36 (caseList -> case .)
    CASE            reduce using rule 36 (caseList -> case .)


state 225

    (38) default -> DEFAULT . DOSPTS block

    DOSPTS          shift and go to state 249


state 226

    (37) case -> CASE . expression DOSPTS block
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 250
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 227

    (39) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    LLAVEDER        shift and go to state 251
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 228

    (40) forinstruction -> FOR PARIZQ declaration expression PYC expression . PARDER LLAVEIZQ block LLAVEDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 252
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 229

    (41) declaration -> var_const ID DOSPTS type . IG expression PYC

    IG              shift and go to state 201


state 230

    (46) interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ . interfaceContent LLAVEDER PYC
    (47) interfaceContent -> . interfaceContent COMA ID DOSPTS expression
    (48) interfaceContent -> . ID DOSPTS expression

    ID              shift and go to state 253

    interfaceContent               shift and go to state 254

state 231

    (41) declaration -> var_const ID DOSPTS type IG expression . PYC
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 255
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 232

    (42) arraydeclaration -> var_const ID DOSPTS type dimension IG . expression PYC
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 256
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 233

    (44) dimension -> dimension CORIZQ . CORDER

    CORDER          shift and go to state 257


state 234

    (45) dimension -> CORIZQ CORDER .

    IG              reduce using rule 45 (dimension -> CORIZQ CORDER .)
    CORIZQ          reduce using rule 45 (dimension -> CORIZQ CORDER .)


state 235

    (57) functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    LLAVEDER        shift and go to state 258
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 236

    (63) paramsList -> paramsList COMA parametro .

    PARDER          reduce using rule 63 (paramsList -> paramsList COMA parametro .)
    COMA            reduce using rule 63 (paramsList -> paramsList COMA parametro .)


state 237

    (65) parametro -> ID DOSPTS type .
    (66) parametro -> ID DOSPTS type . CORIZQ CORDER

    PARDER          reduce using rule 65 (parametro -> ID DOSPTS type .)
    COMA            reduce using rule 65 (parametro -> ID DOSPTS type .)
    CORIZQ          shift and go to state 259


state 238

    (98) expression -> expression TERN expression DOSPTS expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVIDIDO resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIG resolved as shift
  ! shift/reduce conflict for MENORIG resolved as shift
  ! shift/reduce conflict for IGIG resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for INCREMENTO resolved as shift
  ! shift/reduce conflict for TERN resolved as shift
    PYC             reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    CORDER          reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    PARDER          reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    COMA            reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    IG              reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    PUNTO           reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    CORIZQ          reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    DOSPTS          reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    LLAVEDER        reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124

  ! MAS             [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOS           [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! POR             [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIVIDIDO        [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MODULO          [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYOR           [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENOR           [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MAYORIG         [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! MENORIG         [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! IGIG            [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! DIF             [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! AND             [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! OR              [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! INCREMENTO      [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]
  ! TERN            [ reduce using rule 98 (expression -> expression TERN expression DOSPTS expression .) ]


state 239

    (79) expression -> OBJECT PUNTO KEYS PARIZQ expression . PARDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 260
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 240

    (80) expression -> OBJECT PUNTO VALUES PARIZQ expression . PARDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 261
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 241

    (62) attributeList -> ID DOSPTS type . PYC

    PYC             shift and go to state 262


state 242

    (61) attributeList -> attributeList ID DOSPTS . type PYC
    (71) type -> . NUMBER
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . CHAR
    (75) type -> . BOOLEAN
    (76) type -> . ID

    NUMBER          shift and go to state 150
    FLOAT           shift and go to state 151
    STRING          shift and go to state 152
    CHAR            shift and go to state 153
    BOOLEAN         shift and go to state 154
    ID              shift and go to state 209

    type                           shift and go to state 263

state 243

    (23) print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .

    CONSOLE         reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    IF              reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    SWITCH          reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    WHILE           reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    FOR             reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    ID              reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    BREAK           reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CONTINUE        reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    FUNCTION        reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    RETURN          reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    INTERFACE       reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    TYPEOF          reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    PARSEINT        reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    PARSEFLOAT      reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    VAR             reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CONST           reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    ENTERO          reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    DECIMAL         reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CADENA          reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CARACTER        reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    BOOLEANO        reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    $end            reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    LLAVEDER        reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    DEFAULT         reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)
    CASE            reduce using rule 23 (print -> CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC .)


state 244

    (24) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .
    (25) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER . else_if_list
    (26) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER . else
    (27) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER . else_if_list else
    (28) else_if_list -> . else_if_list else_if
    (29) else_if_list -> . else_if
    (31) else -> . ELSE LLAVEIZQ block LLAVEDER
    (30) else_if -> . ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    CONSOLE         reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNCTION        reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    TYPEOF          reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    PARSEINT        reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    PARSEFLOAT      reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ENTERO          reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DECIMAL         reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CADENA          reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CARACTER        reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BOOLEANO        reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 24 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ELSE            shift and go to state 267

    else_if_list                   shift and go to state 264
    else                           shift and go to state 265
    else_if                        shift and go to state 266

state 245

    (32) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .

    CONSOLE         reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    IF              reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    SWITCH          reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    WHILE           reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    FOR             reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    ID              reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    BREAK           reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    CONTINUE        reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    FUNCTION        reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    RETURN          reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    INTERFACE       reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    TYPEOF          reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    PARSEINT        reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    PARSEFLOAT      reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    VAR             reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    CONST           reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    ENTERO          reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    DECIMAL         reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    CADENA          reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    CARACTER        reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    BOOLEANO        reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    $end            reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    LLAVEDER        reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    DEFAULT         reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)
    CASE            reduce using rule 32 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER .)


state 246

    (34) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default . LLAVEDER

    LLAVEDER        shift and go to state 268


state 247

    (35) caseList -> caseList case .

    LLAVEDER        reduce using rule 35 (caseList -> caseList case .)
    DEFAULT         reduce using rule 35 (caseList -> caseList case .)
    CASE            reduce using rule 35 (caseList -> caseList case .)


state 248

    (33) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .

    CONSOLE         reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    IF              reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    SWITCH          reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    WHILE           reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    FOR             reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    ID              reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    BREAK           reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    CONTINUE        reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    FUNCTION        reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    RETURN          reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    INTERFACE       reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    TYPEOF          reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    PARSEINT        reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    PARSEFLOAT      reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    VAR             reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    CONST           reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    ENTERO          reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    DECIMAL         reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    CADENA          reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    CARACTER        reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    BOOLEANO        reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    $end            reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    LLAVEDER        reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    DEFAULT         reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)
    CASE            reduce using rule 33 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER .)


state 249

    (38) default -> DEFAULT DOSPTS . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    block                          shift and go to state 269
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 250

    (37) case -> CASE expression . DOSPTS block
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    DOSPTS          shift and go to state 270
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 251

    (39) whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNCTION        reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    TYPEOF          reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    PARSEINT        reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    PARSEFLOAT      reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ENTERO          reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DECIMAL         reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CADENA          reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CARACTER        reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BOOLEANO        reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 39 (whileinstruction -> WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)


state 252

    (40) forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 271


state 253

    (48) interfaceContent -> ID . DOSPTS expression

    DOSPTS          shift and go to state 272


state 254

    (46) interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent . LLAVEDER PYC
    (47) interfaceContent -> interfaceContent . COMA ID DOSPTS expression

    LLAVEDER        shift and go to state 273
    COMA            shift and go to state 274


state 255

    (41) declaration -> var_const ID DOSPTS type IG expression PYC .

    CONSOLE         reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    IF              reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    SWITCH          reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    WHILE           reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    FOR             reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    ID              reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    BREAK           reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    CONTINUE        reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    FUNCTION        reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    RETURN          reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    INTERFACE       reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    TYPEOF          reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    PARSEINT        reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    PARSEFLOAT      reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    VAR             reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    CONST           reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    ENTERO          reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    DECIMAL         reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    CADENA          reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    CARACTER        reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    BOOLEANO        reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    $end            reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    OBJECT          reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    NOT             reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    MENOS           reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    PARIZQ          reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    CORIZQ          reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    LLAVEDER        reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    DEFAULT         reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)
    CASE            reduce using rule 41 (declaration -> var_const ID DOSPTS type IG expression PYC .)


state 256

    (42) arraydeclaration -> var_const ID DOSPTS type dimension IG expression . PYC
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PYC             shift and go to state 275
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 257

    (44) dimension -> dimension CORIZQ CORDER .

    IG              reduce using rule 44 (dimension -> dimension CORIZQ CORDER .)
    CORIZQ          reduce using rule 44 (dimension -> dimension CORIZQ CORDER .)


state 258

    (57) functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    FUNCTION        reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    TYPEOF          reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    PARSEINT        reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    PARSEFLOAT      reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    ENTERO          reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    DECIMAL         reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CADENA          reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CARACTER        reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    BOOLEANO        reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 57 (functionstmt -> FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER .)


state 259

    (66) parametro -> ID DOSPTS type CORIZQ . CORDER

    CORDER          shift and go to state 276


state 260

    (79) expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .

    PYC             reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MAS             reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MENOS           reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    POR             reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MODULO          reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MAYOR           reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MENOR           reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    MENORIG         reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    IGIG            reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    DIF             reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    AND             reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    OR              reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    INCREMENTO      reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    TERN            reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    CORDER          reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    PARDER          reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    COMA            reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    IG              reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    PUNTO           reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    CORIZQ          reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 79 (expression -> OBJECT PUNTO KEYS PARIZQ expression PARDER .)


state 261

    (80) expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .

    PYC             reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MAS             reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MENOS           reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    POR             reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    DIVIDIDO        reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MODULO          reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MAYOR           reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MENOR           reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MAYORIG         reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    MENORIG         reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    IGIG            reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    DIF             reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    AND             reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    OR              reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    INCREMENTO      reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    TERN            reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    CORDER          reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    PARDER          reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    COMA            reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    IG              reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    PUNTO           reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    CORIZQ          reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    DOSPTS          reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)
    LLAVEDER        reduce using rule 80 (expression -> OBJECT PUNTO VALUES PARIZQ expression PARDER .)


state 262

    (62) attributeList -> ID DOSPTS type PYC .

    LLAVEDER        reduce using rule 62 (attributeList -> ID DOSPTS type PYC .)
    ID              reduce using rule 62 (attributeList -> ID DOSPTS type PYC .)


state 263

    (61) attributeList -> attributeList ID DOSPTS type . PYC

    PYC             shift and go to state 277


state 264

    (25) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .
    (27) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list . else
    (28) else_if_list -> else_if_list . else_if
    (31) else -> . ELSE LLAVEIZQ block LLAVEDER
    (30) else_if -> . ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    CONSOLE         reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    IF              reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    SWITCH          reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    WHILE           reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    FOR             reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    ID              reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    BREAK           reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    CONTINUE        reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    FUNCTION        reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    RETURN          reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    INTERFACE       reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    TYPEOF          reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    PARSEINT        reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    PARSEFLOAT      reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    VAR             reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    CONST           reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    ENTERO          reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    DECIMAL         reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    CADENA          reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    CARACTER        reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    BOOLEANO        reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    $end            reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    LLAVEDER        reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    DEFAULT         reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    CASE            reduce using rule 25 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list .)
    ELSE            shift and go to state 267

    else                           shift and go to state 278
    else_if                        shift and go to state 279

state 265

    (26) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .

    CONSOLE         reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    IF              reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    SWITCH          reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    WHILE           reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    FOR             reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    ID              reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    BREAK           reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    CONTINUE        reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    FUNCTION        reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    RETURN          reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    INTERFACE       reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    TYPEOF          reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    PARSEINT        reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    PARSEFLOAT      reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    VAR             reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    CONST           reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    ENTERO          reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    DECIMAL         reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    CADENA          reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    CARACTER        reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    BOOLEANO        reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    $end            reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    LLAVEDER        reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    DEFAULT         reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)
    CASE            reduce using rule 26 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else .)


state 266

    (29) else_if_list -> else_if .

    ELSE            reduce using rule 29 (else_if_list -> else_if .)
    CONSOLE         reduce using rule 29 (else_if_list -> else_if .)
    IF              reduce using rule 29 (else_if_list -> else_if .)
    SWITCH          reduce using rule 29 (else_if_list -> else_if .)
    WHILE           reduce using rule 29 (else_if_list -> else_if .)
    FOR             reduce using rule 29 (else_if_list -> else_if .)
    ID              reduce using rule 29 (else_if_list -> else_if .)
    BREAK           reduce using rule 29 (else_if_list -> else_if .)
    CONTINUE        reduce using rule 29 (else_if_list -> else_if .)
    FUNCTION        reduce using rule 29 (else_if_list -> else_if .)
    RETURN          reduce using rule 29 (else_if_list -> else_if .)
    INTERFACE       reduce using rule 29 (else_if_list -> else_if .)
    TYPEOF          reduce using rule 29 (else_if_list -> else_if .)
    PARSEINT        reduce using rule 29 (else_if_list -> else_if .)
    PARSEFLOAT      reduce using rule 29 (else_if_list -> else_if .)
    VAR             reduce using rule 29 (else_if_list -> else_if .)
    CONST           reduce using rule 29 (else_if_list -> else_if .)
    ENTERO          reduce using rule 29 (else_if_list -> else_if .)
    DECIMAL         reduce using rule 29 (else_if_list -> else_if .)
    CADENA          reduce using rule 29 (else_if_list -> else_if .)
    CARACTER        reduce using rule 29 (else_if_list -> else_if .)
    BOOLEANO        reduce using rule 29 (else_if_list -> else_if .)
    $end            reduce using rule 29 (else_if_list -> else_if .)
    LLAVEDER        reduce using rule 29 (else_if_list -> else_if .)
    DEFAULT         reduce using rule 29 (else_if_list -> else_if .)
    CASE            reduce using rule 29 (else_if_list -> else_if .)


state 267

    (31) else -> ELSE . LLAVEIZQ block LLAVEDER
    (30) else_if -> ELSE . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 280
    IF              shift and go to state 281


state 268

    (34) switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .

    CONSOLE         reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    IF              reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    SWITCH          reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    WHILE           reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    FOR             reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    ID              reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    BREAK           reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    CONTINUE        reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    FUNCTION        reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    RETURN          reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    INTERFACE       reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    TYPEOF          reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    PARSEINT        reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    PARSEFLOAT      reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    VAR             reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    CONST           reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    ENTERO          reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    DECIMAL         reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    CADENA          reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    CARACTER        reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    BOOLEANO        reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    $end            reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    LLAVEDER        reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    DEFAULT         reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)
    CASE            reduce using rule 34 (switchinstruction -> SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER .)


state 269

    (38) default -> DEFAULT DOSPTS block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    LLAVEDER        reduce using rule 38 (default -> DEFAULT DOSPTS block .)
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 270

    (37) case -> CASE expression DOSPTS . block
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    block                          shift and go to state 282
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 271

    (40) forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    declaration                    shift and go to state 9
    block                          shift and go to state 283
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 272

    (48) interfaceContent -> ID DOSPTS . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 284
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 273

    (46) interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER . PYC

    PYC             shift and go to state 285


state 274

    (47) interfaceContent -> interfaceContent COMA . ID DOSPTS expression

    ID              shift and go to state 286


state 275

    (42) arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .

    CONSOLE         reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    IF              reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    SWITCH          reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    WHILE           reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    FOR             reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    ID              reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    BREAK           reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    CONTINUE        reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    FUNCTION        reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    RETURN          reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    INTERFACE       reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    TYPEOF          reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    PARSEINT        reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    PARSEFLOAT      reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    VAR             reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    CONST           reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    ENTERO          reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    DECIMAL         reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    CADENA          reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    CARACTER        reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    BOOLEANO        reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    $end            reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    LLAVEDER        reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    DEFAULT         reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)
    CASE            reduce using rule 42 (arraydeclaration -> var_const ID DOSPTS type dimension IG expression PYC .)


state 276

    (66) parametro -> ID DOSPTS type CORIZQ CORDER .

    PARDER          reduce using rule 66 (parametro -> ID DOSPTS type CORIZQ CORDER .)
    COMA            reduce using rule 66 (parametro -> ID DOSPTS type CORIZQ CORDER .)


state 277

    (61) attributeList -> attributeList ID DOSPTS type PYC .

    LLAVEDER        reduce using rule 61 (attributeList -> attributeList ID DOSPTS type PYC .)
    ID              reduce using rule 61 (attributeList -> attributeList ID DOSPTS type PYC .)


state 278

    (27) ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .

    CONSOLE         reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    IF              reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    SWITCH          reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    WHILE           reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    FOR             reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    ID              reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    BREAK           reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    CONTINUE        reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    FUNCTION        reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    RETURN          reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    INTERFACE       reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    TYPEOF          reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    PARSEINT        reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    PARSEFLOAT      reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    VAR             reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    CONST           reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    ENTERO          reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    DECIMAL         reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    CADENA          reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    CARACTER        reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    BOOLEANO        reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    $end            reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    LLAVEDER        reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    DEFAULT         reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)
    CASE            reduce using rule 27 (ifinstruction -> IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else .)


state 279

    (28) else_if_list -> else_if_list else_if .

    ELSE            reduce using rule 28 (else_if_list -> else_if_list else_if .)
    CONSOLE         reduce using rule 28 (else_if_list -> else_if_list else_if .)
    IF              reduce using rule 28 (else_if_list -> else_if_list else_if .)
    SWITCH          reduce using rule 28 (else_if_list -> else_if_list else_if .)
    WHILE           reduce using rule 28 (else_if_list -> else_if_list else_if .)
    FOR             reduce using rule 28 (else_if_list -> else_if_list else_if .)
    ID              reduce using rule 28 (else_if_list -> else_if_list else_if .)
    BREAK           reduce using rule 28 (else_if_list -> else_if_list else_if .)
    CONTINUE        reduce using rule 28 (else_if_list -> else_if_list else_if .)
    FUNCTION        reduce using rule 28 (else_if_list -> else_if_list else_if .)
    RETURN          reduce using rule 28 (else_if_list -> else_if_list else_if .)
    INTERFACE       reduce using rule 28 (else_if_list -> else_if_list else_if .)
    TYPEOF          reduce using rule 28 (else_if_list -> else_if_list else_if .)
    PARSEINT        reduce using rule 28 (else_if_list -> else_if_list else_if .)
    PARSEFLOAT      reduce using rule 28 (else_if_list -> else_if_list else_if .)
    VAR             reduce using rule 28 (else_if_list -> else_if_list else_if .)
    CONST           reduce using rule 28 (else_if_list -> else_if_list else_if .)
    ENTERO          reduce using rule 28 (else_if_list -> else_if_list else_if .)
    DECIMAL         reduce using rule 28 (else_if_list -> else_if_list else_if .)
    CADENA          reduce using rule 28 (else_if_list -> else_if_list else_if .)
    CARACTER        reduce using rule 28 (else_if_list -> else_if_list else_if .)
    BOOLEANO        reduce using rule 28 (else_if_list -> else_if_list else_if .)
    $end            reduce using rule 28 (else_if_list -> else_if_list else_if .)
    LLAVEDER        reduce using rule 28 (else_if_list -> else_if_list else_if .)
    DEFAULT         reduce using rule 28 (else_if_list -> else_if_list else_if .)
    CASE            reduce using rule 28 (else_if_list -> else_if_list else_if .)


state 280

    (31) else -> ELSE LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    block                          shift and go to state 287
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 281

    (30) else_if -> ELSE IF . PARIZQ expression PARDER LLAVEIZQ block LLAVEDER

    PARIZQ          shift and go to state 288


state 282

    (37) case -> CASE expression DOSPTS block .
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    LLAVEDER        reduce using rule 37 (case -> CASE expression DOSPTS block .)
    DEFAULT         reduce using rule 37 (case -> CASE expression DOSPTS block .)
    CASE            reduce using rule 37 (case -> CASE expression DOSPTS block .)
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 283

    (40) forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    LLAVEDER        shift and go to state 289
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    declaration                    shift and go to state 9
    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 284

    (48) interfaceContent -> ID DOSPTS expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    LLAVEDER        reduce using rule 48 (interfaceContent -> ID DOSPTS expression .)
    COMA            reduce using rule 48 (interfaceContent -> ID DOSPTS expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 285

    (46) interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .

    CONSOLE         reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    IF              reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    SWITCH          reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    WHILE           reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    FOR             reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    ID              reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    BREAK           reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CONTINUE        reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    FUNCTION        reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    RETURN          reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    INTERFACE       reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    TYPEOF          reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    PARSEINT        reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    PARSEFLOAT      reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    VAR             reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CONST           reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    ENTERO          reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    DECIMAL         reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CADENA          reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CARACTER        reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    BOOLEANO        reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    $end            reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    LLAVEDER        reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    DEFAULT         reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)
    CASE            reduce using rule 46 (interdeclaration -> var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC .)


state 286

    (47) interfaceContent -> interfaceContent COMA ID . DOSPTS expression

    DOSPTS          shift and go to state 290


state 287

    (31) else -> ELSE LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    LLAVEDER        shift and go to state 291
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 288

    (30) else_if -> ELSE IF PARIZQ . expression PARDER LLAVEIZQ block LLAVEDER
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 292
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 289

    (40) forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNCTION        reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    TYPEOF          reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    PARSEINT        reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    PARSEFLOAT      reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    ENTERO          reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    DECIMAL         reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    CADENA          reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    CARACTER        reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    BOOLEANO        reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 40 (forinstruction -> FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER .)


state 290

    (47) interfaceContent -> interfaceContent COMA ID DOSPTS . expression
    (79) expression -> . OBJECT PUNTO KEYS PARIZQ expression PARDER
    (80) expression -> . OBJECT PUNTO VALUES PARIZQ expression PARDER
    (81) expression -> . expression MAS expression
    (82) expression -> . expression MENOS expression
    (83) expression -> . expression POR expression
    (84) expression -> . expression DIVIDIDO expression
    (85) expression -> . expression MODULO expression
    (86) expression -> . expression MAYOR expression
    (87) expression -> . expression MENOR expression
    (88) expression -> . expression MAYORIG expression
    (89) expression -> . expression MENORIG expression
    (90) expression -> . expression IGIG expression
    (91) expression -> . expression DIF expression
    (92) expression -> . expression AND expression
    (93) expression -> . expression OR expression
    (94) expression -> . NOT expression
    (95) expression -> . MENOS expression
    (96) expression -> . expression INCREMENTO
    (97) expression -> . PARIZQ expression PARDER
    (98) expression -> . expression TERN expression DOSPTS expression
    (99) expression -> . listArray
    (106) expression -> . CORIZQ expressionList CORDER
    (107) expression -> . ID PARIZQ expressionList PARDER
    (108) expression -> . ID PARIZQ PARDER
    (122) expression -> . typeof
    (123) expression -> . parseint
    (124) expression -> . parsefloat
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    OBJECT          shift and go to state 69
    NOT             shift and go to state 72
    MENOS           shift and go to state 71
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 74
    ID              shift and go to state 75
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    expression                     shift and go to state 293
    listArray                      shift and go to state 73
    typeof                         shift and go to state 76
    parseint                       shift and go to state 77
    parsefloat                     shift and go to state 78
    valor                          shift and go to state 35

state 291

    (31) else -> ELSE LLAVEIZQ block LLAVEDER .

    CONSOLE         reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    FUNCTION        reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    TYPEOF          reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    PARSEINT        reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    PARSEFLOAT      reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    ENTERO          reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    DECIMAL         reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    CADENA          reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    CARACTER        reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    BOOLEANO        reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 31 (else -> ELSE LLAVEIZQ block LLAVEDER .)


state 292

    (30) else_if -> ELSE IF PARIZQ expression . PARDER LLAVEIZQ block LLAVEDER
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    PARDER          shift and go to state 294
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 293

    (47) interfaceContent -> interfaceContent COMA ID DOSPTS expression .
    (81) expression -> expression . MAS expression
    (82) expression -> expression . MENOS expression
    (83) expression -> expression . POR expression
    (84) expression -> expression . DIVIDIDO expression
    (85) expression -> expression . MODULO expression
    (86) expression -> expression . MAYOR expression
    (87) expression -> expression . MENOR expression
    (88) expression -> expression . MAYORIG expression
    (89) expression -> expression . MENORIG expression
    (90) expression -> expression . IGIG expression
    (91) expression -> expression . DIF expression
    (92) expression -> expression . AND expression
    (93) expression -> expression . OR expression
    (96) expression -> expression . INCREMENTO
    (98) expression -> expression . TERN expression DOSPTS expression

    LLAVEDER        reduce using rule 47 (interfaceContent -> interfaceContent COMA ID DOSPTS expression .)
    COMA            reduce using rule 47 (interfaceContent -> interfaceContent COMA ID DOSPTS expression .)
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    POR             shift and go to state 112
    DIVIDIDO        shift and go to state 113
    MODULO          shift and go to state 114
    MAYOR           shift and go to state 115
    MENOR           shift and go to state 116
    MAYORIG         shift and go to state 117
    MENORIG         shift and go to state 118
    IGIG            shift and go to state 119
    DIF             shift and go to state 120
    AND             shift and go to state 121
    OR              shift and go to state 122
    INCREMENTO      shift and go to state 123
    TERN            shift and go to state 124


state 294

    (30) else_if -> ELSE IF PARIZQ expression PARDER . LLAVEIZQ block LLAVEDER

    LLAVEIZQ        shift and go to state 295


state 295

    (30) else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ . block LLAVEDER
    (2) block -> . block instruccion
    (3) block -> . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    block                          shift and go to state 296
    instruccion                    shift and go to state 3
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 296

    (30) else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block . LLAVEDER
    (2) block -> block . instruccion
    (4) instruccion -> . print
    (5) instruccion -> . ifinstruction
    (6) instruccion -> . switchinstruction
    (7) instruccion -> . whileinstruction
    (8) instruccion -> . forinstruction
    (9) instruccion -> . declaration
    (10) instruccion -> . arraydeclaration
    (11) instruccion -> . assignment
    (12) instruccion -> . breakstmt
    (13) instruccion -> . continuestmt
    (14) instruccion -> . functionstmt
    (15) instruccion -> . call
    (16) instruccion -> . returnstmt
    (17) instruccion -> . interfacecreation
    (18) instruccion -> . interdeclaration
    (19) instruccion -> . listArray PYC
    (20) instruccion -> . typeof PYC
    (21) instruccion -> . parseint PYC
    (22) instruccion -> . parsefloat PYC
    (23) print -> . CONSOLE PUNTO LOG PARIZQ expressionList PARDER PYC
    (24) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (25) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list
    (26) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else
    (27) ifinstruction -> . IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER else_if_list else
    (32) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList LLAVEDER
    (33) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ default LLAVEDER
    (34) switchinstruction -> . SWITCH PARIZQ expression PARDER LLAVEIZQ caseList default LLAVEDER
    (39) whileinstruction -> . WHILE PARIZQ expression PARDER LLAVEIZQ block LLAVEDER
    (40) forinstruction -> . FOR PARIZQ declaration expression PYC expression PARDER LLAVEIZQ block LLAVEDER
    (41) declaration -> . var_const ID DOSPTS type IG expression PYC
    (42) arraydeclaration -> . var_const ID DOSPTS type dimension IG expression PYC
    (43) assignment -> . ID indexes IG expression PYC
    (51) assignment -> . listArray IG expression PYC
    (52) assignment -> . ID IG expression PYC
    (69) breakstmt -> . BREAK PYC
    (70) continuestmt -> . CONTINUE PYC
    (57) functionstmt -> . FUNCTION ID funcparams functype LLAVEIZQ block LLAVEDER
    (55) call -> . ID PARIZQ expressionList PARDER PYC
    (56) call -> . ID PARIZQ PARDER PYC
    (53) returnstmt -> . RETURN expression PYC
    (54) returnstmt -> . RETURN PYC
    (60) interfacecreation -> . INTERFACE ID LLAVEIZQ attributeList LLAVEDER
    (46) interdeclaration -> . var_const ID DOSPTS ID IG LLAVEIZQ interfaceContent LLAVEDER PYC
    (109) listArray -> . listArray PUNTO TOSTRING PARIZQ PARDER
    (110) listArray -> . listArray PUNTO TOLOWERCASE PARIZQ PARDER
    (111) listArray -> . listArray PUNTO TOUPPERCASE PARIZQ PARDER
    (112) listArray -> . listArray PUNTO POP PARIZQ PARDER
    (113) listArray -> . listArray PUNTO JOIN PARIZQ PARDER
    (114) listArray -> . listArray PUNTO PUSH expression
    (115) listArray -> . listArray PUNTO INDEXOF expression
    (116) listArray -> . listArray PUNTO LENGTH
    (117) listArray -> . listArray PUNTO ID
    (118) listArray -> . listArray indexes
    (119) listArray -> . valor
    (125) typeof -> . TYPEOF expression
    (126) parseint -> . PARSEINT expression
    (127) parsefloat -> . PARSEFLOAT expression
    (49) var_const -> . VAR
    (50) var_const -> . CONST
    (100) valor -> . ENTERO
    (101) valor -> . DECIMAL
    (102) valor -> . CADENA
    (103) valor -> . CARACTER
    (104) valor -> . BOOLEANO
    (105) valor -> . ID

    LLAVEDER        shift and go to state 297
    CONSOLE         shift and go to state 23
    IF              shift and go to state 24
    SWITCH          shift and go to state 25
    WHILE           shift and go to state 26
    FOR             shift and go to state 27
    ID              shift and go to state 29
    BREAK           shift and go to state 30
    CONTINUE        shift and go to state 31
    FUNCTION        shift and go to state 32
    RETURN          shift and go to state 33
    INTERFACE       shift and go to state 34
    TYPEOF          shift and go to state 36
    PARSEINT        shift and go to state 37
    PARSEFLOAT      shift and go to state 38
    VAR             shift and go to state 39
    CONST           shift and go to state 40
    ENTERO          shift and go to state 41
    DECIMAL         shift and go to state 42
    CADENA          shift and go to state 43
    CARACTER        shift and go to state 44
    BOOLEANO        shift and go to state 45

    instruccion                    shift and go to state 46
    print                          shift and go to state 4
    ifinstruction                  shift and go to state 5
    switchinstruction              shift and go to state 6
    whileinstruction               shift and go to state 7
    forinstruction                 shift and go to state 8
    declaration                    shift and go to state 9
    arraydeclaration               shift and go to state 10
    assignment                     shift and go to state 11
    breakstmt                      shift and go to state 12
    continuestmt                   shift and go to state 13
    functionstmt                   shift and go to state 14
    call                           shift and go to state 15
    returnstmt                     shift and go to state 16
    interfacecreation              shift and go to state 17
    interdeclaration               shift and go to state 18
    listArray                      shift and go to state 19
    typeof                         shift and go to state 20
    parseint                       shift and go to state 21
    parsefloat                     shift and go to state 22
    var_const                      shift and go to state 28
    valor                          shift and go to state 35

state 297

    (30) else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .

    ELSE            reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONSOLE         reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    IF              reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    SWITCH          reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    WHILE           reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FOR             reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ID              reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BREAK           reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONTINUE        reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    FUNCTION        reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    RETURN          reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    INTERFACE       reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    TYPEOF          reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    PARSEINT        reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    PARSEFLOAT      reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    VAR             reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CONST           reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    ENTERO          reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DECIMAL         reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CADENA          reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CARACTER        reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    BOOLEANO        reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    $end            reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    LLAVEDER        reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    DEFAULT         reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)
    CASE            reduce using rule 30 (else_if -> ELSE IF PARIZQ expression PARDER LLAVEIZQ block LLAVEDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IG in state 29 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 29 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 50 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 73 resolved as shift
WARNING: shift/reduce conflict for CORIZQ in state 73 resolved as shift
WARNING: shift/reduce conflict for MAS in state 80 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 80 resolved as shift
WARNING: shift/reduce conflict for POR in state 80 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 80 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 80 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 80 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 80 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 80 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 80 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 80 resolved as shift
WARNING: shift/reduce conflict for DIF in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 80 resolved as shift
WARNING: shift/reduce conflict for TERN in state 80 resolved as shift
WARNING: shift/reduce conflict for MAS in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 81 resolved as shift
WARNING: shift/reduce conflict for POR in state 81 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 81 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 81 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 81 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 81 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 81 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 81 resolved as shift
WARNING: shift/reduce conflict for DIF in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for OR in state 81 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 81 resolved as shift
WARNING: shift/reduce conflict for TERN in state 81 resolved as shift
WARNING: shift/reduce conflict for MAS in state 82 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 82 resolved as shift
WARNING: shift/reduce conflict for POR in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 82 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 82 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 82 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 82 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 82 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 82 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 82 resolved as shift
WARNING: shift/reduce conflict for DIF in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 82 resolved as shift
WARNING: shift/reduce conflict for TERN in state 82 resolved as shift
WARNING: shift/reduce conflict for MAS in state 138 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 138 resolved as shift
WARNING: shift/reduce conflict for POR in state 138 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 138 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 138 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 138 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 138 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 138 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 138 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 138 resolved as shift
WARNING: shift/reduce conflict for DIF in state 138 resolved as shift
WARNING: shift/reduce conflict for AND in state 138 resolved as shift
WARNING: shift/reduce conflict for OR in state 138 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 138 resolved as shift
WARNING: shift/reduce conflict for TERN in state 138 resolved as shift
WARNING: shift/reduce conflict for MAS in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 139 resolved as shift
WARNING: shift/reduce conflict for POR in state 139 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 139 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 139 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 139 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 139 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 139 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 139 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 139 resolved as shift
WARNING: shift/reduce conflict for DIF in state 139 resolved as shift
WARNING: shift/reduce conflict for AND in state 139 resolved as shift
WARNING: shift/reduce conflict for OR in state 139 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 139 resolved as shift
WARNING: shift/reduce conflict for TERN in state 139 resolved as shift
WARNING: shift/reduce conflict for IG in state 148 resolved as shift
WARNING: shift/reduce conflict for MAS in state 238 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 238 resolved as shift
WARNING: shift/reduce conflict for POR in state 238 resolved as shift
WARNING: shift/reduce conflict for DIVIDIDO in state 238 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 238 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 238 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 238 resolved as shift
WARNING: shift/reduce conflict for MAYORIG in state 238 resolved as shift
WARNING: shift/reduce conflict for MENORIG in state 238 resolved as shift
WARNING: shift/reduce conflict for IGIG in state 238 resolved as shift
WARNING: shift/reduce conflict for DIF in state 238 resolved as shift
WARNING: shift/reduce conflict for AND in state 238 resolved as shift
WARNING: shift/reduce conflict for OR in state 238 resolved as shift
WARNING: shift/reduce conflict for INCREMENTO in state 238 resolved as shift
WARNING: shift/reduce conflict for TERN in state 238 resolved as shift
